{
  "version": 3,
  "sources": ["../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/boundaries.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerHelper.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerIterator.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/Graphemer.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/index.js", "../node_modules/node_modules/.pnpm/iso-datestring-validator@2.2.2/node_modules/iso-datestring-validator/dist/index.js", "../node_modules/@atproto/api/src/index.ts", "../node_modules/@atproto/syntax/src/handle.ts", "../node_modules/@atproto/syntax/src/did.ts", "../node_modules/@atproto/syntax/src/nsid.ts", "../node_modules/@atproto/syntax/src/aturi_validation.ts", "../node_modules/@atproto/syntax/src/aturi.ts", "../node_modules/node_modules/.pnpm/zod@3.21.4/node_modules/zod/lib/index.mjs", "../node_modules/@atproto/common-web/src/check.ts", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/varint.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/varint.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bytes.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/digest.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base58.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/base-x.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base32.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/cid.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/identity.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base2.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base8.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base10.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base16.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base36.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base64.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base256emoji.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/hasher.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/identity.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/codecs/json.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/basics.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/util/bases.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/from-string.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/to-string.js", "../node_modules/@atproto/common-web/src/ipld.ts", "../node_modules/@atproto/common-web/src/types.ts", "../node_modules/@atproto/common-web/src/times.ts", "../node_modules/@atproto/common-web/src/strings.ts", "../node_modules/@atproto/common-web/src/did-doc.ts", "../node_modules/@atproto/lexicon/src/validators/formats.ts", "../node_modules/@atproto/lexicon/src/validators/primitives.ts", "../node_modules/@atproto/lexicon/src/blob-refs.ts", "../node_modules/@atproto/lexicon/src/validators/blob.ts", "../node_modules/@atproto/lexicon/src/validators/complex.ts", "../node_modules/@atproto/lexicon/src/util.ts", "../node_modules/@atproto/lexicon/src/types.ts", "../node_modules/@atproto/lexicon/src/validators/xrpc.ts", "../node_modules/@atproto/lexicon/src/validation.ts", "../node_modules/@atproto/lexicon/src/lexicons.ts", "../node_modules/@atproto/lexicon/src/serialize.ts", "../node_modules/@atproto/xrpc/src/types.ts", "../node_modules/@atproto/xrpc/src/util.ts", "../node_modules/@atproto/xrpc/src/client.ts", "../node_modules/@atproto/xrpc/src/index.ts", "../node_modules/@atproto/api/src/client/lexicons.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/emitModerationEvent.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/enableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getModerationEvent.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/queryModerationEvents.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/queryModerationStatuses.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/searchRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/sendEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/resolveHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/updateHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/queryLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/createReport.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/applyWrites.ts", "../node_modules/@atproto/api/src/client/util.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/createRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/deleteRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/describeRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/listRecords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/putRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/uploadBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/confirmEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCode.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/describeServer.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getAccountInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/listAppPasswords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/refreshSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestAccountDelete.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailConfirmation.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestPasswordReset.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/reserveSigningKey.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/resetPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/revokeAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/updateEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getCheckout.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getHead.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getLatestCommit.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listBlobs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/notifyOfUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/requestCrawl.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/fetchLabels.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfiles.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getSuggestions.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/putPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActors.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActorsTypeahead.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/describeFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getAuthorFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getListFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPostThread.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getRepostedBy.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getSuggestedFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getTimeline.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/searchPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollowers.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollows.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getLists.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getSuggestedFollowsByActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/getUnreadCount.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/listNotifications.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/registerPush.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/updateSeen.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopular.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopularFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getTimelineSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchActorsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchPostsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/subscribeLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/strongRef.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/subscribeRepos.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/profile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/external.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/images.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/record.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/recordWithMedia.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/generator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/like.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/post.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/repost.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/threadgate.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/block.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/follow.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/list.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listblock.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listitem.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/richtext/facet.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/defs.ts", "../node_modules/@atproto/api/src/client/index.ts", "../node_modules/@atproto/api/src/agent.ts", "../node_modules/@atproto/api/src/rich-text/unicode.ts", "../node_modules/@atproto/api/src/rich-text/sanitization.ts", "../node_modules/@atproto/api/src/rich-text/detection.ts", "../node_modules/@atproto/api/src/rich-text/rich-text.ts", "../node_modules/@atproto/api/src/moderation/types.ts", "../node_modules/@atproto/api/src/moderation/const/labels.ts", "../node_modules/@atproto/api/src/moderation/accumulator.ts", "../node_modules/@atproto/api/src/moderation/subjects/account.ts", "../node_modules/@atproto/api/src/moderation/subjects/profile.ts", "../node_modules/@atproto/api/src/moderation/subjects/post.ts", "../node_modules/@atproto/api/src/moderation/subjects/quoted-post.ts", "../node_modules/@atproto/api/src/moderation/subjects/feed-generator.ts", "../node_modules/@atproto/api/src/moderation/subjects/user-list.ts", "../node_modules/@atproto/api/src/moderation/util.ts", "../node_modules/@atproto/api/src/moderation/index.ts", "../node_modules/@atproto/api/src/moderation/const/label-groups.ts", "../node_modules/@atproto/api/src/bsky-agent.ts", "../node_modules/@firebase/util/src/constants.ts", "../node_modules/@firebase/util/src/assert.ts", "../node_modules/@firebase/util/src/crypt.ts", "../node_modules/@firebase/util/src/deepCopy.ts", "../node_modules/@firebase/util/src/global.ts", "../node_modules/@firebase/util/src/defaults.ts", "../node_modules/@firebase/util/src/deferred.ts", "../node_modules/@firebase/util/src/emulator.ts", "../node_modules/@firebase/util/src/environment.ts", "../node_modules/@firebase/util/src/errors.ts", "../node_modules/@firebase/util/src/json.ts", "../node_modules/@firebase/util/src/jwt.ts", "../node_modules/@firebase/util/src/obj.ts", "../node_modules/@firebase/util/src/promise.ts", "../node_modules/@firebase/util/src/query.ts", "../node_modules/@firebase/util/src/sha1.ts", "../node_modules/@firebase/util/src/subscribe.ts", "../node_modules/@firebase/util/src/validation.ts", "../node_modules/@firebase/util/src/utf8.ts", "../node_modules/@firebase/util/src/uuid.ts", "../node_modules/@firebase/util/src/exponential_backoff.ts", "../node_modules/@firebase/util/src/formatters.ts", "../node_modules/@firebase/util/src/compat.ts", "../node_modules/@firebase/component/src/component.ts", "../node_modules/@firebase/component/src/constants.ts", "../node_modules/@firebase/component/src/provider.ts", "../node_modules/@firebase/component/src/component_container.ts", "../node_modules/@firebase/logger/src/logger.ts", "../node_modules/idb/build/wrap-idb-value.js", "../node_modules/idb/build/index.js", "../node_modules/@firebase/app/src/platformLoggerService.ts", "../node_modules/@firebase/app/src/logger.ts", "../node_modules/@firebase/app/src/constants.ts", "../node_modules/@firebase/app/src/internal.ts", "../node_modules/@firebase/app/src/errors.ts", "../node_modules/@firebase/app/src/firebaseApp.ts", "../node_modules/@firebase/app/src/api.ts", "../node_modules/@firebase/app/src/indexeddb.ts", "../node_modules/@firebase/app/src/heartbeatService.ts", "../node_modules/@firebase/app/src/registerCoreComponents.ts", "../node_modules/@firebase/app/src/index.ts", "../node_modules/firebase/app/index.ts", "../node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js", "../node_modules/@firebase/installations/node_modules/idb/build/index.js", "../node_modules/@firebase/installations/src/util/constants.ts", "../node_modules/@firebase/installations/src/util/errors.ts", "../node_modules/@firebase/installations/src/functions/common.ts", "../node_modules/@firebase/installations/src/functions/create-installation-request.ts", "../node_modules/@firebase/installations/src/util/sleep.ts", "../node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts", "../node_modules/@firebase/installations/src/helpers/generate-fid.ts", "../node_modules/@firebase/installations/src/util/get-key.ts", "../node_modules/@firebase/installations/src/helpers/fid-changed.ts", "../node_modules/@firebase/installations/src/helpers/idb-manager.ts", "../node_modules/@firebase/installations/src/helpers/get-installation-entry.ts", "../node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts", "../node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts", "../node_modules/@firebase/installations/src/api/get-id.ts", "../node_modules/@firebase/installations/src/api/get-token.ts", "../node_modules/@firebase/installations/src/functions/delete-installation-request.ts", "../node_modules/@firebase/installations/src/api/delete-installations.ts", "../node_modules/@firebase/installations/src/api/on-id-change.ts", "../node_modules/@firebase/installations/src/api/get-installations.ts", "../node_modules/@firebase/installations/src/helpers/extract-app-config.ts", "../node_modules/@firebase/installations/src/functions/config.ts", "../node_modules/@firebase/installations/src/index.ts", "../node_modules/@firebase/messaging/node_modules/idb/build/wrap-idb-value.js", "../node_modules/@firebase/messaging/node_modules/idb/build/index.js", "../node_modules/@firebase/messaging/src/util/constants.ts", "../node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts", "../node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts", "../node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts", "../node_modules/@firebase/messaging/src/internals/idb-manager.ts", "../node_modules/@firebase/messaging/src/util/errors.ts", "../node_modules/@firebase/messaging/src/internals/requests.ts", "../node_modules/@firebase/messaging/src/internals/token-manager.ts", "../node_modules/@firebase/messaging/src/helpers/externalizePayload.ts", "../node_modules/@firebase/messaging/src/helpers/is-console-message.ts", "../node_modules/@firebase/messaging/src/helpers/sleep.ts", "../node_modules/@firebase/messaging/src/helpers/logToFirelog.ts", "../node_modules/@firebase/messaging/src/listeners/sw-listeners.ts", "../node_modules/@firebase/messaging/src/helpers/extract-app-config.ts", "../node_modules/@firebase/messaging/src/messaging-service.ts", "../node_modules/@firebase/messaging/src/helpers/register.ts", "../node_modules/@firebase/messaging/src/api/isSupported.ts", "../node_modules/@firebase/messaging/src/api/onBackgroundMessage.ts", "../node_modules/@firebase/messaging/src/api/setDeliveryMetricsExportedToBigQueryEnabled.ts", "../node_modules/@firebase/messaging/src/api.ts", "../node_modules/@firebase/messaging/src/index.sw.ts", "../src/push-notifications.ts", "../src/indexeddb.ts", "../src/i18n.ts", "../src/service-worker.ts"],
  "sourcesContent": ["\"use strict\";\n/**\n * The Grapheme_Cluster_Break property value\n * @see https://www.unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EXTENDED_PICTOGRAPHIC = exports.CLUSTER_BREAK = void 0;\nvar CLUSTER_BREAK;\n(function (CLUSTER_BREAK) {\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CR\"] = 0] = \"CR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LF\"] = 1] = \"LF\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CONTROL\"] = 2] = \"CONTROL\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"EXTEND\"] = 3] = \"EXTEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"REGIONAL_INDICATOR\"] = 4] = \"REGIONAL_INDICATOR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"SPACINGMARK\"] = 5] = \"SPACINGMARK\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"L\"] = 6] = \"L\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"V\"] = 7] = \"V\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"T\"] = 8] = \"T\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LV\"] = 9] = \"LV\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LVT\"] = 10] = \"LVT\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"OTHER\"] = 11] = \"OTHER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"PREPEND\"] = 12] = \"PREPEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE\"] = 13] = \"E_BASE\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_MODIFIER\"] = 14] = \"E_MODIFIER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"ZWJ\"] = 15] = \"ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"GLUE_AFTER_ZWJ\"] = 16] = \"GLUE_AFTER_ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE_GAZ\"] = 17] = \"E_BASE_GAZ\";\n})(CLUSTER_BREAK = exports.CLUSTER_BREAK || (exports.CLUSTER_BREAK = {}));\n/**\n * The Emoji character property is an extension of UCD but shares the same namespace and structure\n * @see http://www.unicode.org/reports/tr51/tr51-14.html#Emoji_Properties_and_Data_Files\n *\n * Here we model Extended_Pictograhpic only to implement UAX #29 GB11\n * \\p{Extended_Pictographic} Extend* ZWJ\t\u00D7\t\\p{Extended_Pictographic}\n *\n * The Emoji character property should not be mixed with Grapheme_Cluster_Break since they are not exclusive\n */\nexports.EXTENDED_PICTOGRAPHIC = 101;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\n// BreakTypes\n// @type {BreakType}\nconst NotBreak = 0;\nconst BreakStart = 1;\nconst Break = 2;\nconst BreakLastRegional = 3;\nconst BreakPenultimateRegional = 4;\nclass GraphemerHelper {\n    /**\n     * Check if the the character at the position {pos} of the string is surrogate\n     * @param str {string}\n     * @param pos {number}\n     * @returns {boolean}\n     */\n    static isSurrogate(str, pos) {\n        return (0xd800 <= str.charCodeAt(pos) &&\n            str.charCodeAt(pos) <= 0xdbff &&\n            0xdc00 <= str.charCodeAt(pos + 1) &&\n            str.charCodeAt(pos + 1) <= 0xdfff);\n    }\n    /**\n     * The String.prototype.codePointAt polyfill\n     * Private function, gets a Unicode code point from a JavaScript UTF-16 string\n     * handling surrogate pairs appropriately\n     * @param str {string}\n     * @param idx {number}\n     * @returns {number}\n     */\n    static codePointAt(str, idx) {\n        if (idx === undefined) {\n            idx = 0;\n        }\n        const code = str.charCodeAt(idx);\n        // if a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < str.length - 1) {\n            const hi = code;\n            const low = str.charCodeAt(idx + 1);\n            if (0xdc00 <= low && low <= 0xdfff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return hi;\n        }\n        // if a low surrogate\n        if (0xdc00 <= code && code <= 0xdfff && idx >= 1) {\n            const hi = str.charCodeAt(idx - 1);\n            const low = code;\n            if (0xd800 <= hi && hi <= 0xdbff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return low;\n        }\n        // just return the char if an unmatched surrogate half or a\n        // single-char codepoint\n        return code;\n    }\n    //\n    /**\n     * Private function, returns whether a break is allowed between the two given grapheme breaking classes\n     * Implemented the UAX #29 3.1.1 Grapheme Cluster Boundary Rules on extended grapheme clusters\n     * @param start {number}\n     * @param mid {Array<number>}\n     * @param end {number}\n     * @param startEmoji {number}\n     * @param midEmoji {Array<number>}\n     * @param endEmoji {number}\n     * @returns {number}\n     */\n    static shouldBreak(start, mid, end, startEmoji, midEmoji, endEmoji) {\n        const all = [start].concat(mid).concat([end]);\n        const allEmoji = [startEmoji].concat(midEmoji).concat([endEmoji]);\n        const previous = all[all.length - 2];\n        const next = end;\n        const nextEmoji = endEmoji;\n        // Lookahead terminator for:\n        // GB12. ^ (RI RI)* RI ? RI\n        // GB13. [^RI] (RI RI)* RI ? RI\n        const rIIndex = all.lastIndexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR);\n        if (rIIndex > 0 &&\n            all.slice(1, rIIndex).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }) &&\n            [boundaries_1.CLUSTER_BREAK.PREPEND, boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(previous) === -1) {\n            if (all.filter(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }).length %\n                2 ===\n                1) {\n                return BreakLastRegional;\n            }\n            else {\n                return BreakPenultimateRegional;\n            }\n        }\n        // GB3. CR \u00D7 LF\n        if (previous === boundaries_1.CLUSTER_BREAK.CR && next === boundaries_1.CLUSTER_BREAK.LF) {\n            return NotBreak;\n        }\n        // GB4. (Control|CR|LF) \u00F7\n        else if (previous === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            previous === boundaries_1.CLUSTER_BREAK.CR ||\n            previous === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB5. \u00F7 (Control|CR|LF)\n        else if (next === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            next === boundaries_1.CLUSTER_BREAK.CR ||\n            next === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB6. L \u00D7 (L|V|LV|LVT)\n        else if (previous === boundaries_1.CLUSTER_BREAK.L &&\n            (next === boundaries_1.CLUSTER_BREAK.L ||\n                next === boundaries_1.CLUSTER_BREAK.V ||\n                next === boundaries_1.CLUSTER_BREAK.LV ||\n                next === boundaries_1.CLUSTER_BREAK.LVT)) {\n            return NotBreak;\n        }\n        // GB7. (LV|V) \u00D7 (V|T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LV || previous === boundaries_1.CLUSTER_BREAK.V) &&\n            (next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.T)) {\n            return NotBreak;\n        }\n        // GB8. (LVT|T) \u00D7 (T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LVT || previous === boundaries_1.CLUSTER_BREAK.T) &&\n            next === boundaries_1.CLUSTER_BREAK.T) {\n            return NotBreak;\n        }\n        // GB9. \u00D7 (Extend|ZWJ)\n        else if (next === boundaries_1.CLUSTER_BREAK.EXTEND || next === boundaries_1.CLUSTER_BREAK.ZWJ) {\n            return NotBreak;\n        }\n        // GB9a. \u00D7 SpacingMark\n        else if (next === boundaries_1.CLUSTER_BREAK.SPACINGMARK) {\n            return NotBreak;\n        }\n        // GB9b. Prepend \u00D7\n        else if (previous === boundaries_1.CLUSTER_BREAK.PREPEND) {\n            return NotBreak;\n        }\n        // GB11. \\p{Extended_Pictographic} Extend* ZWJ \u00D7 \\p{Extended_Pictographic}\n        const previousNonExtendIndex = allEmoji\n            .slice(0, -1)\n            .lastIndexOf(boundaries_1.EXTENDED_PICTOGRAPHIC);\n        if (previousNonExtendIndex !== -1 &&\n            allEmoji[previousNonExtendIndex] === boundaries_1.EXTENDED_PICTOGRAPHIC &&\n            all.slice(previousNonExtendIndex + 1, -2).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.EXTEND;\n            }) &&\n            previous === boundaries_1.CLUSTER_BREAK.ZWJ &&\n            nextEmoji === boundaries_1.EXTENDED_PICTOGRAPHIC) {\n            return NotBreak;\n        }\n        // GB12. ^ (RI RI)* RI \u00D7 RI\n        // GB13. [^RI] (RI RI)* RI \u00D7 RI\n        if (mid.indexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {\n            return Break;\n        }\n        if (previous === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR &&\n            next === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) {\n            return NotBreak;\n        }\n        // GB999. Any ? Any\n        return BreakStart;\n    }\n}\nexports.default = GraphemerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\nclass GraphemerIterator {\n    constructor(str, nextBreak) {\n        this._index = 0;\n        this._str = str;\n        this._nextBreak = nextBreak;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        let brk;\n        if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {\n            const value = this._str.slice(this._index, brk);\n            this._index = brk;\n            return { value: value, done: false };\n        }\n        if (this._index < this._str.length) {\n            const value = this._str.slice(this._index);\n            this._index = this._str.length;\n            return { value: value, done: false };\n        }\n        return { value: undefined, done: true };\n    }\n}\nexports.default = GraphemerIterator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\nconst GraphemerHelper_1 = __importDefault(require(\"./GraphemerHelper\"));\nconst GraphemerIterator_1 = __importDefault(require(\"./GraphemerIterator\"));\nclass Graphemer {\n    /**\n     * Returns the next grapheme break in the string after the given index\n     * @param string {string}\n     * @param index {number}\n     * @returns {number}\n     */\n    static nextBreak(string, index) {\n        if (index === undefined) {\n            index = 0;\n        }\n        if (index < 0) {\n            return 0;\n        }\n        if (index >= string.length - 1) {\n            return string.length;\n        }\n        const prevCP = GraphemerHelper_1.default.codePointAt(string, index);\n        const prev = Graphemer.getGraphemeBreakProperty(prevCP);\n        const prevEmoji = Graphemer.getEmojiProperty(prevCP);\n        const mid = [];\n        const midEmoji = [];\n        for (let i = index + 1; i < string.length; i++) {\n            // check for already processed low surrogates\n            if (GraphemerHelper_1.default.isSurrogate(string, i - 1)) {\n                continue;\n            }\n            const nextCP = GraphemerHelper_1.default.codePointAt(string, i);\n            const next = Graphemer.getGraphemeBreakProperty(nextCP);\n            const nextEmoji = Graphemer.getEmojiProperty(nextCP);\n            if (GraphemerHelper_1.default.shouldBreak(prev, mid, next, prevEmoji, midEmoji, nextEmoji)) {\n                return i;\n            }\n            mid.push(next);\n            midEmoji.push(nextEmoji);\n        }\n        return string.length;\n    }\n    /**\n     * Breaks the given string into an array of grapheme clusters\n     * @param str {string}\n     * @returns {string[]}\n     */\n    splitGraphemes(str) {\n        const res = [];\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            res.push(str.slice(index, brk));\n            index = brk;\n        }\n        if (index < str.length) {\n            res.push(str.slice(index));\n        }\n        return res;\n    }\n    /**\n     * Returns an iterator of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {GraphemerIterator}\n     */\n    iterateGraphemes(str) {\n        return new GraphemerIterator_1.default(str, Graphemer.nextBreak);\n    }\n    /**\n     * Returns the number of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {number}\n     */\n    countGraphemes(str) {\n        let count = 0;\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            index = brk;\n            count++;\n        }\n        if (index < str.length) {\n            count++;\n        }\n        return count;\n    }\n    /**\n     * Given a Unicode code point, determines this symbol's grapheme break property\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getGraphemeBreakProperty(code) {\n        // Grapheme break property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt\n        // and generated by\n        // node ./scripts/generate-grapheme-break.js\n        if (code < 0xbf09) {\n            if (code < 0xac54) {\n                if (code < 0x102d) {\n                    if (code < 0xb02) {\n                        if (code < 0x93b) {\n                            if (code < 0x6df) {\n                                if (code < 0x5bf) {\n                                    if (code < 0x7f) {\n                                        if (code < 0xb) {\n                                            if (code < 0xa) {\n                                                // Cc  [10] <control-0000>..<control-0009>\n                                                if (0x0 <= code && code <= 0x9) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cc       <control-000A>\n                                                if (0xa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LF;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd) {\n                                                // Cc   [2] <control-000B>..<control-000C>\n                                                if (0xb <= code && code <= 0xc) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe) {\n                                                    // Cc       <control-000D>\n                                                    if (0xd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CR;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cc  [18] <control-000E>..<control-001F>\n                                                    if (0xe <= code && code <= 0x1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x300) {\n                                            if (code < 0xad) {\n                                                // Cc  [33] <control-007F>..<control-009F>\n                                                if (0x7f <= code && code <= 0x9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SOFT HYPHEN\n                                                if (0xad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x483) {\n                                                // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n                                                if (0x300 <= code && code <= 0x36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x591) {\n                                                    // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n                                                    // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n                                                    if (0x483 <= code && code <= 0x489) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n                                                    if (0x591 <= code && code <= 0x5bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x610) {\n                                        if (code < 0x5c4) {\n                                            if (code < 0x5c1) {\n                                                // Mn       HEBREW POINT RAFE\n                                                if (0x5bf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n                                                if (0x5c1 <= code && code <= 0x5c2) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x5c7) {\n                                                // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n                                                if (0x5c4 <= code && code <= 0x5c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x600) {\n                                                    // Mn       HEBREW POINT QAMATS QATAN\n                                                    if (0x5c7 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n                                                    if (0x600 <= code && code <= 0x605) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x670) {\n                                            if (code < 0x61c) {\n                                                // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n                                                if (0x610 <= code && code <= 0x61a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x64b) {\n                                                    // Cf       ARABIC LETTER MARK\n                                                    if (0x61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n                                                    if (0x64b <= code && code <= 0x65f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x6d6) {\n                                                // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n                                                if (0x670 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x6dd) {\n                                                    // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n                                                    if (0x6d6 <= code && code <= 0x6dc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC END OF AYAH\n                                                    if (0x6dd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x81b) {\n                                    if (code < 0x730) {\n                                        if (code < 0x6ea) {\n                                            if (code < 0x6e7) {\n                                                // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n                                                if (0x6df <= code && code <= 0x6e4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n                                                if (0x6e7 <= code && code <= 0x6e8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x70f) {\n                                                // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n                                                if (0x6ea <= code && code <= 0x6ed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SYRIAC ABBREVIATION MARK\n                                                if (0x70f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                                // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n                                                if (0x711 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x7eb) {\n                                            if (code < 0x7a6) {\n                                                // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n                                                if (0x730 <= code && code <= 0x74a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n                                                if (0x7a6 <= code && code <= 0x7b0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x7fd) {\n                                                // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n                                                if (0x7eb <= code && code <= 0x7f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x816) {\n                                                    // Mn       NKO DANTAYALAN\n                                                    if (0x7fd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n                                                    if (0x816 <= code && code <= 0x819) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x898) {\n                                        if (code < 0x829) {\n                                            if (code < 0x825) {\n                                                // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n                                                if (0x81b <= code && code <= 0x823) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n                                                if (0x825 <= code && code <= 0x827) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x859) {\n                                                // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n                                                if (0x829 <= code && code <= 0x82d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x890) {\n                                                    // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n                                                    if (0x859 <= code && code <= 0x85b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [2] ARABIC POUND MARK ABOVE..ARABIC PIASTRE MARK ABOVE\n                                                    if (0x890 <= code && code <= 0x891) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x8e3) {\n                                            if (code < 0x8ca) {\n                                                // Mn   [8] ARABIC SMALL HIGH WORD AL-JUZ..ARABIC HALF MADDA OVER MADDA\n                                                if (0x898 <= code && code <= 0x89f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x8e2) {\n                                                    // Mn  [24] ARABIC SMALL HIGH FARSI YEH..ARABIC SMALL HIGH SIGN SAFHA\n                                                    if (0x8ca <= code && code <= 0x8e1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC DISPUTED END OF AYAH\n                                                    if (0x8e2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x903) {\n                                                // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n                                                if (0x8e3 <= code && code <= 0x902) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DEVANAGARI SIGN VISARGA\n                                                if (0x903 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DEVANAGARI VOWEL SIGN OE\n                                                if (0x93a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xa01) {\n                                if (code < 0x982) {\n                                    if (code < 0x94d) {\n                                        if (code < 0x93e) {\n                                            // Mc       DEVANAGARI VOWEL SIGN OOE\n                                            if (0x93b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       DEVANAGARI SIGN NUKTA\n                                            if (0x93c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x941) {\n                                                // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n                                                if (0x93e <= code && code <= 0x940) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x949) {\n                                                    // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n                                                    if (0x941 <= code && code <= 0x948) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n                                                    if (0x949 <= code && code <= 0x94c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x951) {\n                                            if (code < 0x94e) {\n                                                // Mn       DEVANAGARI SIGN VIRAMA\n                                                if (0x94d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n                                                if (0x94e <= code && code <= 0x94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x962) {\n                                                // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n                                                if (0x951 <= code && code <= 0x957) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x981) {\n                                                    // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n                                                    if (0x962 <= code && code <= 0x963) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN CANDRABINDU\n                                                    if (0x981 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x9c7) {\n                                        if (code < 0x9be) {\n                                            if (code < 0x9bc) {\n                                                // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n                                                if (0x982 <= code && code <= 0x983) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BENGALI SIGN NUKTA\n                                                if (0x9bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9bf) {\n                                                // Mc       BENGALI VOWEL SIGN AA\n                                                if (0x9be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9c1) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n                                                    if (0x9bf <= code && code <= 0x9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n                                                    if (0x9c1 <= code && code <= 0x9c4) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x9d7) {\n                                            if (code < 0x9cb) {\n                                                // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n                                                if (0x9c7 <= code && code <= 0x9c8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9cd) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n                                                    if (0x9cb <= code && code <= 0x9cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN VIRAMA\n                                                    if (0x9cd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9e2) {\n                                                // Mc       BENGALI AU LENGTH MARK\n                                                if (0x9d7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9fe) {\n                                                    // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n                                                    if (0x9e2 <= code && code <= 0x9e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SANDHI MARK\n                                                    if (0x9fe === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa83) {\n                                    if (code < 0xa47) {\n                                        if (code < 0xa3c) {\n                                            if (code < 0xa03) {\n                                                // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n                                                if (0xa01 <= code && code <= 0xa02) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GURMUKHI SIGN VISARGA\n                                                if (0xa03 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa3e) {\n                                                // Mn       GURMUKHI SIGN NUKTA\n                                                if (0xa3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa41) {\n                                                    // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n                                                    if (0xa3e <= code && code <= 0xa40) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n                                                    if (0xa41 <= code && code <= 0xa42) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa70) {\n                                            if (code < 0xa4b) {\n                                                // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n                                                if (0xa47 <= code && code <= 0xa48) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa51) {\n                                                    // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n                                                    if (0xa4b <= code && code <= 0xa4d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GURMUKHI SIGN UDAAT\n                                                    if (0xa51 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa75) {\n                                                // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n                                                if (0xa70 <= code && code <= 0xa71) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa81) {\n                                                    // Mn       GURMUKHI SIGN YAKASH\n                                                    if (0xa75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n                                                    if (0xa81 <= code && code <= 0xa82) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac9) {\n                                        if (code < 0xabe) {\n                                            // Mc       GUJARATI SIGN VISARGA\n                                            if (0xa83 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       GUJARATI SIGN NUKTA\n                                            if (0xabc === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac1) {\n                                                // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n                                                if (0xabe <= code && code <= 0xac0) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac7) {\n                                                    // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n                                                    if (0xac1 <= code && code <= 0xac5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n                                                    if (0xac7 <= code && code <= 0xac8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae2) {\n                                            if (code < 0xacb) {\n                                                // Mc       GUJARATI VOWEL SIGN CANDRA O\n                                                if (0xac9 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacd) {\n                                                    // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n                                                    if (0xacb <= code && code <= 0xacc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GUJARATI SIGN VIRAMA\n                                                    if (0xacd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xafa) {\n                                                // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n                                                if (0xae2 <= code && code <= 0xae3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb01) {\n                                                    // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n                                                    if (0xafa <= code && code <= 0xaff) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       ORIYA SIGN CANDRABINDU\n                                                    if (0xb01 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf3) {\n                            if (code < 0xc04) {\n                                if (code < 0xb82) {\n                                    if (code < 0xb47) {\n                                        if (code < 0xb3e) {\n                                            if (code < 0xb3c) {\n                                                // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n                                                if (0xb02 <= code && code <= 0xb03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       ORIYA SIGN NUKTA\n                                                if (0xb3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb40) {\n                                                // Mc       ORIYA VOWEL SIGN AA\n                                                // Mn       ORIYA VOWEL SIGN I\n                                                if (0xb3e <= code && code <= 0xb3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb41) {\n                                                    // Mc       ORIYA VOWEL SIGN II\n                                                    if (0xb40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n                                                    if (0xb41 <= code && code <= 0xb44) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4d) {\n                                            if (code < 0xb4b) {\n                                                // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n                                                if (0xb47 <= code && code <= 0xb48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n                                                if (0xb4b <= code && code <= 0xb4c) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb55) {\n                                                // Mn       ORIYA SIGN VIRAMA\n                                                if (0xb4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62) {\n                                                    // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n                                                    // Mc       ORIYA AU LENGTH MARK\n                                                    if (0xb55 <= code && code <= 0xb57) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n                                                    if (0xb62 <= code && code <= 0xb63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc6) {\n                                        if (code < 0xbbf) {\n                                            // Mn       TAMIL SIGN ANUSVARA\n                                            if (0xb82 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAMIL VOWEL SIGN AA\n                                            if (0xbbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc0) {\n                                                // Mc       TAMIL VOWEL SIGN I\n                                                if (0xbbf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc1) {\n                                                    // Mn       TAMIL VOWEL SIGN II\n                                                    if (0xbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n                                                    if (0xbc1 <= code && code <= 0xbc2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd7) {\n                                            if (code < 0xbca) {\n                                                // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n                                                if (0xbc6 <= code && code <= 0xbc8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcd) {\n                                                    // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n                                                    if (0xbca <= code && code <= 0xbcc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TAMIL SIGN VIRAMA\n                                                    if (0xbcd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc00) {\n                                                // Mc       TAMIL AU LENGTH MARK\n                                                if (0xbd7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc01) {\n                                                    // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n                                                    if (0xc00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n                                                    if (0xc01 <= code && code <= 0xc03) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcbe) {\n                                    if (code < 0xc4a) {\n                                        if (code < 0xc3e) {\n                                            // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n                                            if (0xc04 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TELUGU SIGN NUKTA\n                                            if (0xc3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc41) {\n                                                // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n                                                if (0xc3e <= code && code <= 0xc40) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc46) {\n                                                    // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n                                                    if (0xc41 <= code && code <= 0xc44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n                                                    if (0xc46 <= code && code <= 0xc48) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc81) {\n                                            if (code < 0xc55) {\n                                                // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n                                                if (0xc4a <= code && code <= 0xc4d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc62) {\n                                                    // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n                                                    if (0xc55 <= code && code <= 0xc56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n                                                    if (0xc62 <= code && code <= 0xc63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc82) {\n                                                // Mn       KANNADA SIGN CANDRABINDU\n                                                if (0xc81 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbc) {\n                                                    // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n                                                    if (0xc82 <= code && code <= 0xc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KANNADA SIGN NUKTA\n                                                    if (0xcbc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcc6) {\n                                        if (code < 0xcc0) {\n                                            // Mc       KANNADA VOWEL SIGN AA\n                                            if (0xcbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       KANNADA VOWEL SIGN I\n                                            if (0xcbf === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc2) {\n                                                // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n                                                if (0xcc0 <= code && code <= 0xcc1) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc3) {\n                                                    // Mc       KANNADA VOWEL SIGN UU\n                                                    if (0xcc2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n                                                    if (0xcc3 <= code && code <= 0xcc4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xccc) {\n                                            if (code < 0xcc7) {\n                                                // Mn       KANNADA VOWEL SIGN E\n                                                if (0xcc6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcca) {\n                                                    // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n                                                    if (0xcc7 <= code && code <= 0xcc8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n                                                    if (0xcca <= code && code <= 0xccb) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd5) {\n                                                // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n                                                if (0xccc <= code && code <= 0xccd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce2) {\n                                                    // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n                                                    if (0xcd5 <= code && code <= 0xcd6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n                                                    if (0xce2 <= code && code <= 0xce3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xddf) {\n                                if (code < 0xd4e) {\n                                    if (code < 0xd3f) {\n                                        if (code < 0xd02) {\n                                            if (code < 0xd00) {\n                                                // Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n                                                if (0xcf3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n                                                if (0xd00 <= code && code <= 0xd01) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b) {\n                                                // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n                                                if (0xd02 <= code && code <= 0xd03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3e) {\n                                                    // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n                                                    if (0xd3b <= code && code <= 0xd3c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MALAYALAM VOWEL SIGN AA\n                                                    if (0xd3e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd46) {\n                                            if (code < 0xd41) {\n                                                // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n                                                if (0xd3f <= code && code <= 0xd40) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n                                                if (0xd41 <= code && code <= 0xd44) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4a) {\n                                                // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n                                                if (0xd46 <= code && code <= 0xd48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4d) {\n                                                    // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n                                                    if (0xd4a <= code && code <= 0xd4c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MALAYALAM SIGN VIRAMA\n                                                    if (0xd4d === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xdca) {\n                                        if (code < 0xd62) {\n                                            // Lo       MALAYALAM LETTER DOT REPH\n                                            if (0xd4e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       MALAYALAM AU LENGTH MARK\n                                            if (0xd57 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd81) {\n                                                // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n                                                if (0xd62 <= code && code <= 0xd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd82) {\n                                                    // Mn       SINHALA SIGN CANDRABINDU\n                                                    if (0xd81 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n                                                    if (0xd82 <= code && code <= 0xd83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xdd2) {\n                                            if (code < 0xdcf) {\n                                                // Mn       SINHALA SIGN AL-LAKUNA\n                                                if (0xdca === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd0) {\n                                                    // Mc       SINHALA VOWEL SIGN AELA-PILLA\n                                                    if (0xdcf === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n                                                    if (0xdd0 <= code && code <= 0xdd1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xdd6) {\n                                                // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n                                                if (0xdd2 <= code && code <= 0xdd4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd8) {\n                                                    // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n                                                    if (0xdd6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n                                                    if (0xdd8 <= code && code <= 0xdde) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xf35) {\n                                    if (code < 0xe47) {\n                                        if (code < 0xe31) {\n                                            if (code < 0xdf2) {\n                                                // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n                                                if (0xddf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n                                                if (0xdf2 <= code && code <= 0xdf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe33) {\n                                                // Mn       THAI CHARACTER MAI HAN-AKAT\n                                                if (0xe31 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe34) {\n                                                    // Lo       THAI CHARACTER SARA AM\n                                                    if (0xe33 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n                                                    if (0xe34 <= code && code <= 0xe3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xeb4) {\n                                            if (code < 0xeb1) {\n                                                // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n                                                if (0xe47 <= code && code <= 0xe4e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LAO VOWEL SIGN MAI KAN\n                                                if (0xeb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Lo       LAO VOWEL SIGN AM\n                                                if (0xeb3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xec8) {\n                                                // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n                                                if (0xeb4 <= code && code <= 0xebc) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf18) {\n                                                    // Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n                                                    if (0xec8 <= code && code <= 0xece) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n                                                    if (0xf18 <= code && code <= 0xf19) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xf7f) {\n                                        if (code < 0xf39) {\n                                            // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n                                            if (0xf35 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n                                            if (0xf37 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf3e) {\n                                                // Mn       TIBETAN MARK TSA -PHRU\n                                                if (0xf39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf71) {\n                                                    // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n                                                    if (0xf3e <= code && code <= 0xf3f) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n                                                    if (0xf71 <= code && code <= 0xf7e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xf8d) {\n                                            if (code < 0xf80) {\n                                                // Mc       TIBETAN SIGN RNAM BCAD\n                                                if (0xf7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf86) {\n                                                    // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n                                                    if (0xf80 <= code && code <= 0xf84) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n                                                    if (0xf86 <= code && code <= 0xf87) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf99) {\n                                                // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n                                                if (0xf8d <= code && code <= 0xf97) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfc6) {\n                                                    // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n                                                    if (0xf99 <= code && code <= 0xfbc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TIBETAN SYMBOL PADMA GDAN\n                                                    if (0xfc6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1c24) {\n                        if (code < 0x1930) {\n                            if (code < 0x1732) {\n                                if (code < 0x1082) {\n                                    if (code < 0x103d) {\n                                        if (code < 0x1032) {\n                                            if (code < 0x1031) {\n                                                // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n                                                if (0x102d <= code && code <= 0x1030) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MYANMAR VOWEL SIGN E\n                                                if (0x1031 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1039) {\n                                                // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n                                                if (0x1032 <= code && code <= 0x1037) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x103b) {\n                                                    // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n                                                    if (0x1039 <= code && code <= 0x103a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n                                                    if (0x103b <= code && code <= 0x103c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1058) {\n                                            if (code < 0x1056) {\n                                                // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n                                                if (0x103d <= code && code <= 0x103e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n                                                if (0x1056 <= code && code <= 0x1057) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x105e) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n                                                if (0x1058 <= code && code <= 0x1059) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1071) {\n                                                    // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n                                                    if (0x105e <= code && code <= 0x1060) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n                                                    if (0x1071 <= code && code <= 0x1074) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1100) {\n                                        if (code < 0x1085) {\n                                            // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n                                            if (0x1082 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       MYANMAR VOWEL SIGN SHAN E\n                                            if (0x1084 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x108d) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n                                                if (0x1085 <= code && code <= 0x1086) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n                                                if (0x108d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       MYANMAR VOWEL SIGN AITON AI\n                                                if (0x109d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x135d) {\n                                            if (code < 0x1160) {\n                                                // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n                                                if (0x1100 <= code && code <= 0x115f) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8) {\n                                                    // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n                                                    if (0x1160 <= code && code <= 0x11a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.V;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n                                                    if (0x11a8 <= code && code <= 0x11ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.T;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1712) {\n                                                // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n                                                if (0x135d <= code && code <= 0x135f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1715) {\n                                                    // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n                                                    if (0x1712 <= code && code <= 0x1714) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       TAGALOG SIGN PAMUDPOD\n                                                    if (0x1715 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x17c9) {\n                                    if (code < 0x17b6) {\n                                        if (code < 0x1752) {\n                                            if (code < 0x1734) {\n                                                // Mn   [2] HANUNOO VOWEL SIGN I..HANUNOO VOWEL SIGN U\n                                                if (0x1732 <= code && code <= 0x1733) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       HANUNOO SIGN PAMUDPOD\n                                                if (0x1734 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1772) {\n                                                // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n                                                if (0x1752 <= code && code <= 0x1753) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17b4) {\n                                                    // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n                                                    if (0x1772 <= code && code <= 0x1773) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n                                                    if (0x17b4 <= code && code <= 0x17b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x17be) {\n                                            if (code < 0x17b7) {\n                                                // Mc       KHMER VOWEL SIGN AA\n                                                if (0x17b6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n                                                if (0x17b7 <= code && code <= 0x17bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x17c6) {\n                                                // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n                                                if (0x17be <= code && code <= 0x17c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17c7) {\n                                                    // Mn       KHMER SIGN NIKAHIT\n                                                    if (0x17c6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n                                                    if (0x17c7 <= code && code <= 0x17c8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1885) {\n                                        if (code < 0x180b) {\n                                            if (code < 0x17dd) {\n                                                // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n                                                if (0x17c9 <= code && code <= 0x17d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHMER SIGN ATTHACAN\n                                                if (0x17dd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x180e) {\n                                                // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n                                                if (0x180b <= code && code <= 0x180d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       MONGOLIAN VOWEL SEPARATOR\n                                                if (0x180e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Mn       MONGOLIAN FREE VARIATION SELECTOR FOUR\n                                                if (0x180f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1923) {\n                                            if (code < 0x18a9) {\n                                                // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n                                                if (0x1885 <= code && code <= 0x1886) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1920) {\n                                                    // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n                                                    if (0x18a9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n                                                    if (0x1920 <= code && code <= 0x1922) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1927) {\n                                                // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n                                                if (0x1923 <= code && code <= 0x1926) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1929) {\n                                                    // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n                                                    if (0x1927 <= code && code <= 0x1928) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n                                                    if (0x1929 <= code && code <= 0x192b) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1b3b) {\n                                if (code < 0x1a58) {\n                                    if (code < 0x1a19) {\n                                        if (code < 0x1933) {\n                                            if (code < 0x1932) {\n                                                // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n                                                if (0x1930 <= code && code <= 0x1931) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LIMBU SMALL LETTER ANUSVARA\n                                                if (0x1932 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1939) {\n                                                // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n                                                if (0x1933 <= code && code <= 0x1938) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a17) {\n                                                    // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n                                                    if (0x1939 <= code && code <= 0x193b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n                                                    if (0x1a17 <= code && code <= 0x1a18) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1a55) {\n                                            if (code < 0x1a1b) {\n                                                // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n                                                if (0x1a19 <= code && code <= 0x1a1a) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BUGINESE VOWEL SIGN AE\n                                                if (0x1a1b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a56) {\n                                                // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n                                                if (0x1a55 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n                                                if (0x1a56 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n                                                if (0x1a57 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1a73) {\n                                        if (code < 0x1a62) {\n                                            if (code < 0x1a60) {\n                                                // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n                                                if (0x1a58 <= code && code <= 0x1a5e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM SIGN SAKOT\n                                                if (0x1a60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a65) {\n                                                // Mn       TAI THAM VOWEL SIGN MAI SAT\n                                                if (0x1a62 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a6d) {\n                                                    // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n                                                    if (0x1a65 <= code && code <= 0x1a6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n                                                    if (0x1a6d <= code && code <= 0x1a72) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1b00) {\n                                            if (code < 0x1a7f) {\n                                                // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n                                                if (0x1a73 <= code && code <= 0x1a7c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ab0) {\n                                                    // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n                                                    if (0x1a7f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n                                                    // Me       COMBINING PARENTHESES OVERLAY\n                                                    // Mn  [16] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER INSULAR T\n                                                    if (0x1ab0 <= code && code <= 0x1ace) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b04) {\n                                                // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n                                                if (0x1b00 <= code && code <= 0x1b03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b34) {\n                                                    // Mc       BALINESE SIGN BISAH\n                                                    if (0x1b04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BALINESE SIGN REREKAN\n                                                    // Mc       BALINESE VOWEL SIGN TEDUNG\n                                                    // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n                                                    if (0x1b34 <= code && code <= 0x1b3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1ba8) {\n                                    if (code < 0x1b6b) {\n                                        if (code < 0x1b3d) {\n                                            // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n                                            if (0x1b3b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BALINESE VOWEL SIGN LA LENGA\n                                            if (0x1b3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b42) {\n                                                // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n                                                if (0x1b3d <= code && code <= 0x1b41) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b43) {\n                                                    // Mn       BALINESE VOWEL SIGN PEPET\n                                                    if (0x1b42 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n                                                    if (0x1b43 <= code && code <= 0x1b44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ba1) {\n                                            if (code < 0x1b80) {\n                                                // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n                                                if (0x1b6b <= code && code <= 0x1b73) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b82) {\n                                                    // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n                                                    if (0x1b80 <= code && code <= 0x1b81) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SUNDANESE SIGN PANGWISAD\n                                                    if (0x1b82 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ba2) {\n                                                // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n                                                if (0x1ba1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ba6) {\n                                                    // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n                                                    if (0x1ba2 <= code && code <= 0x1ba5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n                                                    if (0x1ba6 <= code && code <= 0x1ba7) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1be8) {\n                                        if (code < 0x1bab) {\n                                            if (code < 0x1baa) {\n                                                // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n                                                if (0x1ba8 <= code && code <= 0x1ba9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SUNDANESE SIGN PAMAAEH\n                                                if (0x1baa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1be6) {\n                                                // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n                                                if (0x1bab <= code && code <= 0x1bad) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BATAK SIGN TOMPI\n                                                if (0x1be6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       BATAK VOWEL SIGN E\n                                                if (0x1be7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1bee) {\n                                            if (code < 0x1bea) {\n                                                // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n                                                if (0x1be8 <= code && code <= 0x1be9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bed) {\n                                                    // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n                                                    if (0x1bea <= code && code <= 0x1bec) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BATAK VOWEL SIGN KARO O\n                                                    if (0x1bed === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1bef) {\n                                                // Mc       BATAK VOWEL SIGN U\n                                                if (0x1bee === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bf2) {\n                                                    // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n                                                    if (0x1bef <= code && code <= 0x1bf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n                                                    if (0x1bf2 <= code && code <= 0x1bf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xa952) {\n                            if (code < 0x2d7f) {\n                                if (code < 0x1cf7) {\n                                    if (code < 0x1cd4) {\n                                        if (code < 0x1c34) {\n                                            if (code < 0x1c2c) {\n                                                // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n                                                if (0x1c24 <= code && code <= 0x1c2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n                                                if (0x1c2c <= code && code <= 0x1c33) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1c36) {\n                                                // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n                                                if (0x1c34 <= code && code <= 0x1c35) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1cd0) {\n                                                    // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n                                                    if (0x1c36 <= code && code <= 0x1c37) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n                                                    if (0x1cd0 <= code && code <= 0x1cd2) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ce2) {\n                                            if (code < 0x1ce1) {\n                                                // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n                                                if (0x1cd4 <= code && code <= 0x1ce0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n                                                if (0x1ce1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ced) {\n                                                // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n                                                if (0x1ce2 <= code && code <= 0x1ce8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       VEDIC SIGN TIRYAK\n                                                if (0x1ced === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       VEDIC TONE CANDRA ABOVE\n                                                if (0x1cf4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x200d) {\n                                        if (code < 0x1dc0) {\n                                            if (code < 0x1cf8) {\n                                                // Mc       VEDIC SIGN ATIKRAMA\n                                                if (0x1cf7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n                                                if (0x1cf8 <= code && code <= 0x1cf9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x200b) {\n                                                // Mn  [64] COMBINING DOTTED GRAVE ACCENT..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n                                                if (0x1dc0 <= code && code <= 0x1dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       ZERO WIDTH SPACE\n                                                if (0x200b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Cf       ZERO WIDTH NON-JOINER\n                                                if (0x200c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x2060) {\n                                            if (code < 0x200e) {\n                                                // Cf       ZERO WIDTH JOINER\n                                                if (0x200d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.ZWJ;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2028) {\n                                                    // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n                                                    if (0x200e <= code && code <= 0x200f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Zl       LINE SEPARATOR\n                                                    // Zp       PARAGRAPH SEPARATOR\n                                                    // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n                                                    if (0x2028 <= code && code <= 0x202e) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x20d0) {\n                                                // Cf   [5] WORD JOINER..INVISIBLE PLUS\n                                                // Cn       <reserved-2065>\n                                                // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n                                                if (0x2060 <= code && code <= 0x206f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2cef) {\n                                                    // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n                                                    // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n                                                    // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n                                                    // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n                                                    // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n                                                    if (0x20d0 <= code && code <= 0x20f0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n                                                    if (0x2cef <= code && code <= 0x2cf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa823) {\n                                    if (code < 0xa674) {\n                                        if (code < 0x302a) {\n                                            if (code < 0x2de0) {\n                                                // Mn       TIFINAGH CONSONANT JOINER\n                                                if (0x2d7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n                                                if (0x2de0 <= code && code <= 0x2dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x3099) {\n                                                // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n                                                // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n                                                if (0x302a <= code && code <= 0x302f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa66f) {\n                                                    // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n                                                    if (0x3099 <= code && code <= 0x309a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       COMBINING CYRILLIC VZMET\n                                                    // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n                                                    if (0xa66f <= code && code <= 0xa672) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa802) {\n                                            if (code < 0xa69e) {\n                                                // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n                                                if (0xa674 <= code && code <= 0xa67d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa6f0) {\n                                                    // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n                                                    if (0xa69e <= code && code <= 0xa69f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n                                                    if (0xa6f0 <= code && code <= 0xa6f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa806) {\n                                                // Mn       SYLOTI NAGRI SIGN DVISVARA\n                                                if (0xa802 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       SYLOTI NAGRI SIGN HASANTA\n                                                if (0xa806 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       SYLOTI NAGRI SIGN ANUSVARA\n                                                if (0xa80b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xa8b4) {\n                                        if (code < 0xa827) {\n                                            if (code < 0xa825) {\n                                                // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n                                                if (0xa823 <= code && code <= 0xa824) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n                                                if (0xa825 <= code && code <= 0xa826) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa82c) {\n                                                // Mc       SYLOTI NAGRI VOWEL SIGN OO\n                                                if (0xa827 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa880) {\n                                                    // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n                                                    if (0xa82c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n                                                    if (0xa880 <= code && code <= 0xa881) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa8ff) {\n                                            if (code < 0xa8c4) {\n                                                // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n                                                if (0xa8b4 <= code && code <= 0xa8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa8e0) {\n                                                    // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n                                                    if (0xa8c4 <= code && code <= 0xa8c5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n                                                    if (0xa8e0 <= code && code <= 0xa8f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa926) {\n                                                // Mn       DEVANAGARI VOWEL SIGN AY\n                                                if (0xa8ff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa947) {\n                                                    // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n                                                    if (0xa926 <= code && code <= 0xa92d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n                                                    if (0xa947 <= code && code <= 0xa951) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xaab2) {\n                                if (code < 0xa9e5) {\n                                    if (code < 0xa9b4) {\n                                        if (code < 0xa980) {\n                                            if (code < 0xa960) {\n                                                // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n                                                if (0xa952 <= code && code <= 0xa953) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n                                                if (0xa960 <= code && code <= 0xa97c) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa983) {\n                                                // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n                                                if (0xa980 <= code && code <= 0xa982) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       JAVANESE SIGN WIGNYAN\n                                                if (0xa983 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       JAVANESE SIGN CECAK TELU\n                                                if (0xa9b3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa9ba) {\n                                            if (code < 0xa9b6) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n                                                if (0xa9b4 <= code && code <= 0xa9b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n                                                if (0xa9b6 <= code && code <= 0xa9b9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa9bc) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n                                                if (0xa9ba <= code && code <= 0xa9bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa9be) {\n                                                    // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n                                                    if (0xa9bc <= code && code <= 0xa9bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n                                                    if (0xa9be <= code && code <= 0xa9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaa35) {\n                                        if (code < 0xaa2f) {\n                                            if (code < 0xaa29) {\n                                                // Mn       MYANMAR SIGN SHAN SAW\n                                                if (0xa9e5 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n                                                if (0xaa29 <= code && code <= 0xaa2e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa31) {\n                                                // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n                                                if (0xaa2f <= code && code <= 0xaa30) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaa33) {\n                                                    // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n                                                    if (0xaa31 <= code && code <= 0xaa32) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n                                                    if (0xaa33 <= code && code <= 0xaa34) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaa4d) {\n                                            if (code < 0xaa43) {\n                                                // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n                                                if (0xaa35 <= code && code <= 0xaa36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       CHAM CONSONANT SIGN FINAL NG\n                                                if (0xaa43 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       CHAM CONSONANT SIGN FINAL M\n                                                if (0xaa4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa7c) {\n                                                // Mc       CHAM CONSONANT SIGN FINAL H\n                                                if (0xaa4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN TAI LAING TONE-2\n                                                if (0xaa7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       TAI VIET MAI KANG\n                                                if (0xaab0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xabe6) {\n                                    if (code < 0xaaec) {\n                                        if (code < 0xaabe) {\n                                            if (code < 0xaab7) {\n                                                // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n                                                if (0xaab2 <= code && code <= 0xaab4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n                                                if (0xaab7 <= code && code <= 0xaab8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaac1) {\n                                                // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n                                                if (0xaabe <= code && code <= 0xaabf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI VIET TONE MAI THO\n                                                if (0xaac1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MEETEI MAYEK VOWEL SIGN II\n                                                if (0xaaeb === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaaf6) {\n                                            if (code < 0xaaee) {\n                                                // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n                                                if (0xaaec <= code && code <= 0xaaed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaaf5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n                                                    if (0xaaee <= code && code <= 0xaaef) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n                                                    if (0xaaf5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabe3) {\n                                                // Mn       MEETEI MAYEK VIRAMA\n                                                if (0xaaf6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xabe5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n                                                    if (0xabe3 <= code && code <= 0xabe4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n                                                    if (0xabe5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac00) {\n                                        if (code < 0xabe9) {\n                                            if (code < 0xabe8) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n                                                if (0xabe6 <= code && code <= 0xabe7) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n                                                if (0xabe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabec) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n                                                if (0xabe9 <= code && code <= 0xabea) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MEETEI MAYEK LUM IYEK\n                                                if (0xabec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       MEETEI MAYEK APUN IYEK\n                                                if (0xabed === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xac1d) {\n                                            if (code < 0xac01) {\n                                                // Lo       HANGUL SYLLABLE GA\n                                                if (0xac00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n                                                    if (0xac01 <= code && code <= 0xac1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GAE\n                                                    if (0xac1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac38) {\n                                                // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n                                                if (0xac1d <= code && code <= 0xac37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac39) {\n                                                    // Lo       HANGUL SYLLABLE GYA\n                                                    if (0xac38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n                                                    if (0xac39 <= code && code <= 0xac53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0xb5a1) {\n                    if (code < 0xb0ed) {\n                        if (code < 0xaea0) {\n                            if (code < 0xad6d) {\n                                if (code < 0xace0) {\n                                    if (code < 0xac8d) {\n                                        if (code < 0xac70) {\n                                            if (code < 0xac55) {\n                                                // Lo       HANGUL SYLLABLE GYAE\n                                                if (0xac54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n                                                if (0xac55 <= code && code <= 0xac6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac71) {\n                                                // Lo       HANGUL SYLLABLE GEO\n                                                if (0xac70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac8c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n                                                    if (0xac71 <= code && code <= 0xac8b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GE\n                                                    if (0xac8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaca9) {\n                                            if (code < 0xaca8) {\n                                                // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n                                                if (0xac8d <= code && code <= 0xaca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYEO\n                                                if (0xaca8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacc4) {\n                                                // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n                                                if (0xaca9 <= code && code <= 0xacc3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacc5) {\n                                                    // Lo       HANGUL SYLLABLE GYE\n                                                    if (0xacc4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n                                                    if (0xacc5 <= code && code <= 0xacdf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xad19) {\n                                        if (code < 0xacfc) {\n                                            if (code < 0xace1) {\n                                                // Lo       HANGUL SYLLABLE GO\n                                                if (0xace0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n                                                if (0xace1 <= code && code <= 0xacfb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacfd) {\n                                                // Lo       HANGUL SYLLABLE GWA\n                                                if (0xacfc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad18) {\n                                                    // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n                                                    if (0xacfd <= code && code <= 0xad17) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GWAE\n                                                    if (0xad18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xad50) {\n                                            if (code < 0xad34) {\n                                                // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n                                                if (0xad19 <= code && code <= 0xad33) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad35) {\n                                                    // Lo       HANGUL SYLLABLE GOE\n                                                    if (0xad34 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n                                                    if (0xad35 <= code && code <= 0xad4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xad51) {\n                                                // Lo       HANGUL SYLLABLE GYO\n                                                if (0xad50 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad6c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n                                                    if (0xad51 <= code && code <= 0xad6b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GU\n                                                    if (0xad6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xadf9) {\n                                    if (code < 0xadc0) {\n                                        if (code < 0xad89) {\n                                            if (code < 0xad88) {\n                                                // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n                                                if (0xad6d <= code && code <= 0xad87) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GWEO\n                                                if (0xad88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xada4) {\n                                                // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n                                                if (0xad89 <= code && code <= 0xada3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xada5) {\n                                                    // Lo       HANGUL SYLLABLE GWE\n                                                    if (0xada4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n                                                    if (0xada5 <= code && code <= 0xadbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaddc) {\n                                            if (code < 0xadc1) {\n                                                // Lo       HANGUL SYLLABLE GWI\n                                                if (0xadc0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n                                                if (0xadc1 <= code && code <= 0xaddb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaddd) {\n                                                // Lo       HANGUL SYLLABLE GYU\n                                                if (0xaddc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xadf8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n                                                    if (0xaddd <= code && code <= 0xadf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GEU\n                                                    if (0xadf8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xae4c) {\n                                        if (code < 0xae15) {\n                                            if (code < 0xae14) {\n                                                // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n                                                if (0xadf9 <= code && code <= 0xae13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYI\n                                                if (0xae14 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae30) {\n                                                // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n                                                if (0xae15 <= code && code <= 0xae2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae31) {\n                                                    // Lo       HANGUL SYLLABLE GI\n                                                    if (0xae30 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n                                                    if (0xae31 <= code && code <= 0xae4b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae69) {\n                                            if (code < 0xae4d) {\n                                                // Lo       HANGUL SYLLABLE GGA\n                                                if (0xae4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae68) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n                                                    if (0xae4d <= code && code <= 0xae67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGAE\n                                                    if (0xae68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae84) {\n                                                // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n                                                if (0xae69 <= code && code <= 0xae83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae85) {\n                                                    // Lo       HANGUL SYLLABLE GGYA\n                                                    if (0xae84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n                                                    if (0xae85 <= code && code <= 0xae9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xafb9) {\n                                if (code < 0xaf2c) {\n                                    if (code < 0xaed9) {\n                                        if (code < 0xaebc) {\n                                            if (code < 0xaea1) {\n                                                // Lo       HANGUL SYLLABLE GGYAE\n                                                if (0xaea0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n                                                if (0xaea1 <= code && code <= 0xaebb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaebd) {\n                                                // Lo       HANGUL SYLLABLE GGEO\n                                                if (0xaebc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaed8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n                                                    if (0xaebd <= code && code <= 0xaed7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGE\n                                                    if (0xaed8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaef5) {\n                                            if (code < 0xaef4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n                                                if (0xaed9 <= code && code <= 0xaef3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGYEO\n                                                if (0xaef4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf10) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n                                                if (0xaef5 <= code && code <= 0xaf0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf11) {\n                                                    // Lo       HANGUL SYLLABLE GGYE\n                                                    if (0xaf10 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n                                                    if (0xaf11 <= code && code <= 0xaf2b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaf65) {\n                                        if (code < 0xaf48) {\n                                            if (code < 0xaf2d) {\n                                                // Lo       HANGUL SYLLABLE GGO\n                                                if (0xaf2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n                                                if (0xaf2d <= code && code <= 0xaf47) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf49) {\n                                                // Lo       HANGUL SYLLABLE GGWA\n                                                if (0xaf48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf64) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n                                                    if (0xaf49 <= code && code <= 0xaf63) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGWAE\n                                                    if (0xaf64 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaf9c) {\n                                            if (code < 0xaf80) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n                                                if (0xaf65 <= code && code <= 0xaf7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf81) {\n                                                    // Lo       HANGUL SYLLABLE GGOE\n                                                    if (0xaf80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n                                                    if (0xaf81 <= code && code <= 0xaf9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf9d) {\n                                                // Lo       HANGUL SYLLABLE GGYO\n                                                if (0xaf9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xafb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n                                                    if (0xaf9d <= code && code <= 0xafb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGU\n                                                    if (0xafb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb060) {\n                                    if (code < 0xb00c) {\n                                        if (code < 0xafd5) {\n                                            if (code < 0xafd4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n                                                if (0xafb9 <= code && code <= 0xafd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGWEO\n                                                if (0xafd4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaff0) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n                                                if (0xafd5 <= code && code <= 0xafef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaff1) {\n                                                    // Lo       HANGUL SYLLABLE GGWE\n                                                    if (0xaff0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n                                                    if (0xaff1 <= code && code <= 0xb00b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb029) {\n                                            if (code < 0xb00d) {\n                                                // Lo       HANGUL SYLLABLE GGWI\n                                                if (0xb00c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb028) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n                                                    if (0xb00d <= code && code <= 0xb027) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGYU\n                                                    if (0xb028 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb044) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n                                                if (0xb029 <= code && code <= 0xb043) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb045) {\n                                                    // Lo       HANGUL SYLLABLE GGEU\n                                                    if (0xb044 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n                                                    if (0xb045 <= code && code <= 0xb05f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb099) {\n                                        if (code < 0xb07c) {\n                                            if (code < 0xb061) {\n                                                // Lo       HANGUL SYLLABLE GGYI\n                                                if (0xb060 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n                                                if (0xb061 <= code && code <= 0xb07b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb07d) {\n                                                // Lo       HANGUL SYLLABLE GGI\n                                                if (0xb07c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb098) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n                                                    if (0xb07d <= code && code <= 0xb097) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NA\n                                                    if (0xb098 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb0d0) {\n                                            if (code < 0xb0b4) {\n                                                // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n                                                if (0xb099 <= code && code <= 0xb0b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0b5) {\n                                                    // Lo       HANGUL SYLLABLE NAE\n                                                    if (0xb0b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n                                                    if (0xb0b5 <= code && code <= 0xb0cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb0d1) {\n                                                // Lo       HANGUL SYLLABLE NYA\n                                                if (0xb0d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n                                                    if (0xb0d1 <= code && code <= 0xb0eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYAE\n                                                    if (0xb0ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xb354) {\n                            if (code < 0xb220) {\n                                if (code < 0xb179) {\n                                    if (code < 0xb140) {\n                                        if (code < 0xb109) {\n                                            if (code < 0xb108) {\n                                                // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n                                                if (0xb0ed <= code && code <= 0xb107) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NEO\n                                                if (0xb108 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb124) {\n                                                // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n                                                if (0xb109 <= code && code <= 0xb123) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb125) {\n                                                    // Lo       HANGUL SYLLABLE NE\n                                                    if (0xb124 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n                                                    if (0xb125 <= code && code <= 0xb13f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb15c) {\n                                            if (code < 0xb141) {\n                                                // Lo       HANGUL SYLLABLE NYEO\n                                                if (0xb140 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n                                                if (0xb141 <= code && code <= 0xb15b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb15d) {\n                                                // Lo       HANGUL SYLLABLE NYE\n                                                if (0xb15c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb178) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n                                                    if (0xb15d <= code && code <= 0xb177) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NO\n                                                    if (0xb178 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb1cc) {\n                                        if (code < 0xb195) {\n                                            if (code < 0xb194) {\n                                                // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n                                                if (0xb179 <= code && code <= 0xb193) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NWA\n                                                if (0xb194 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb1b0) {\n                                                // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n                                                if (0xb195 <= code && code <= 0xb1af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1b1) {\n                                                    // Lo       HANGUL SYLLABLE NWAE\n                                                    if (0xb1b0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n                                                    if (0xb1b1 <= code && code <= 0xb1cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb1e9) {\n                                            if (code < 0xb1cd) {\n                                                // Lo       HANGUL SYLLABLE NOE\n                                                if (0xb1cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n                                                    if (0xb1cd <= code && code <= 0xb1e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYO\n                                                    if (0xb1e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb204) {\n                                                // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n                                                if (0xb1e9 <= code && code <= 0xb203) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb205) {\n                                                    // Lo       HANGUL SYLLABLE NU\n                                                    if (0xb204 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n                                                    if (0xb205 <= code && code <= 0xb21f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb2ad) {\n                                    if (code < 0xb259) {\n                                        if (code < 0xb23c) {\n                                            if (code < 0xb221) {\n                                                // Lo       HANGUL SYLLABLE NWEO\n                                                if (0xb220 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n                                                if (0xb221 <= code && code <= 0xb23b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb23d) {\n                                                // Lo       HANGUL SYLLABLE NWE\n                                                if (0xb23c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb258) {\n                                                    // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n                                                    if (0xb23d <= code && code <= 0xb257) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NWI\n                                                    if (0xb258 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb290) {\n                                            if (code < 0xb274) {\n                                                // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n                                                if (0xb259 <= code && code <= 0xb273) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb275) {\n                                                    // Lo       HANGUL SYLLABLE NYU\n                                                    if (0xb274 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n                                                    if (0xb275 <= code && code <= 0xb28f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb291) {\n                                                // Lo       HANGUL SYLLABLE NEU\n                                                if (0xb290 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n                                                    if (0xb291 <= code && code <= 0xb2ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYI\n                                                    if (0xb2ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb300) {\n                                        if (code < 0xb2c9) {\n                                            if (code < 0xb2c8) {\n                                                // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n                                                if (0xb2ad <= code && code <= 0xb2c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NI\n                                                if (0xb2c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb2e4) {\n                                                // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n                                                if (0xb2c9 <= code && code <= 0xb2e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2e5) {\n                                                    // Lo       HANGUL SYLLABLE DA\n                                                    if (0xb2e4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n                                                    if (0xb2e5 <= code && code <= 0xb2ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb31d) {\n                                            if (code < 0xb301) {\n                                                // Lo       HANGUL SYLLABLE DAE\n                                                if (0xb300 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb31c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n                                                    if (0xb301 <= code && code <= 0xb31b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYA\n                                                    if (0xb31c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb338) {\n                                                // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n                                                if (0xb31d <= code && code <= 0xb337) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb339) {\n                                                    // Lo       HANGUL SYLLABLE DYAE\n                                                    if (0xb338 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n                                                    if (0xb339 <= code && code <= 0xb353) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb46d) {\n                                if (code < 0xb3e0) {\n                                    if (code < 0xb38d) {\n                                        if (code < 0xb370) {\n                                            if (code < 0xb355) {\n                                                // Lo       HANGUL SYLLABLE DEO\n                                                if (0xb354 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n                                                if (0xb355 <= code && code <= 0xb36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb371) {\n                                                // Lo       HANGUL SYLLABLE DE\n                                                if (0xb370 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb38c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n                                                    if (0xb371 <= code && code <= 0xb38b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYEO\n                                                    if (0xb38c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb3a9) {\n                                            if (code < 0xb3a8) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n                                                if (0xb38d <= code && code <= 0xb3a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DYE\n                                                if (0xb3a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3c4) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n                                                if (0xb3a9 <= code && code <= 0xb3c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb3c5) {\n                                                    // Lo       HANGUL SYLLABLE DO\n                                                    if (0xb3c4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n                                                    if (0xb3c5 <= code && code <= 0xb3df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb419) {\n                                        if (code < 0xb3fc) {\n                                            if (code < 0xb3e1) {\n                                                // Lo       HANGUL SYLLABLE DWA\n                                                if (0xb3e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n                                                if (0xb3e1 <= code && code <= 0xb3fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3fd) {\n                                                // Lo       HANGUL SYLLABLE DWAE\n                                                if (0xb3fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb418) {\n                                                    // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n                                                    if (0xb3fd <= code && code <= 0xb417) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DOE\n                                                    if (0xb418 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb450) {\n                                            if (code < 0xb434) {\n                                                // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n                                                if (0xb419 <= code && code <= 0xb433) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb435) {\n                                                    // Lo       HANGUL SYLLABLE DYO\n                                                    if (0xb434 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n                                                    if (0xb435 <= code && code <= 0xb44f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb451) {\n                                                // Lo       HANGUL SYLLABLE DU\n                                                if (0xb450 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb46c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n                                                    if (0xb451 <= code && code <= 0xb46b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DWEO\n                                                    if (0xb46c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb514) {\n                                    if (code < 0xb4c0) {\n                                        if (code < 0xb489) {\n                                            if (code < 0xb488) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n                                                if (0xb46d <= code && code <= 0xb487) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DWE\n                                                if (0xb488 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4a4) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n                                                if (0xb489 <= code && code <= 0xb4a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4a5) {\n                                                    // Lo       HANGUL SYLLABLE DWI\n                                                    if (0xb4a4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n                                                    if (0xb4a5 <= code && code <= 0xb4bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4dd) {\n                                            if (code < 0xb4c1) {\n                                                // Lo       HANGUL SYLLABLE DYU\n                                                if (0xb4c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n                                                    if (0xb4c1 <= code && code <= 0xb4db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DEU\n                                                    if (0xb4dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4f8) {\n                                                // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n                                                if (0xb4dd <= code && code <= 0xb4f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4f9) {\n                                                    // Lo       HANGUL SYLLABLE DYI\n                                                    if (0xb4f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n                                                    if (0xb4f9 <= code && code <= 0xb513) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb54d) {\n                                        if (code < 0xb530) {\n                                            if (code < 0xb515) {\n                                                // Lo       HANGUL SYLLABLE DI\n                                                if (0xb514 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n                                                if (0xb515 <= code && code <= 0xb52f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb531) {\n                                                // Lo       HANGUL SYLLABLE DDA\n                                                if (0xb530 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb54c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n                                                    if (0xb531 <= code && code <= 0xb54b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDAE\n                                                    if (0xb54c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb584) {\n                                            if (code < 0xb568) {\n                                                // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n                                                if (0xb54d <= code && code <= 0xb567) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb569) {\n                                                    // Lo       HANGUL SYLLABLE DDYA\n                                                    if (0xb568 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n                                                    if (0xb569 <= code && code <= 0xb583) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb585) {\n                                                // Lo       HANGUL SYLLABLE DDYAE\n                                                if (0xb584 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n                                                    if (0xb585 <= code && code <= 0xb59f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDEO\n                                                    if (0xb5a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xba55) {\n                        if (code < 0xb808) {\n                            if (code < 0xb6d4) {\n                                if (code < 0xb62d) {\n                                    if (code < 0xb5f4) {\n                                        if (code < 0xb5bd) {\n                                            if (code < 0xb5bc) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n                                                if (0xb5a1 <= code && code <= 0xb5bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDE\n                                                if (0xb5bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb5d8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n                                                if (0xb5bd <= code && code <= 0xb5d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5d9) {\n                                                    // Lo       HANGUL SYLLABLE DDYEO\n                                                    if (0xb5d8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n                                                    if (0xb5d9 <= code && code <= 0xb5f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb610) {\n                                            if (code < 0xb5f5) {\n                                                // Lo       HANGUL SYLLABLE DDYE\n                                                if (0xb5f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n                                                if (0xb5f5 <= code && code <= 0xb60f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb611) {\n                                                // Lo       HANGUL SYLLABLE DDO\n                                                if (0xb610 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n                                                    if (0xb611 <= code && code <= 0xb62b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDWA\n                                                    if (0xb62c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb680) {\n                                        if (code < 0xb649) {\n                                            if (code < 0xb648) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n                                                if (0xb62d <= code && code <= 0xb647) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDWAE\n                                                if (0xb648 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb664) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n                                                if (0xb649 <= code && code <= 0xb663) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb665) {\n                                                    // Lo       HANGUL SYLLABLE DDOE\n                                                    if (0xb664 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n                                                    if (0xb665 <= code && code <= 0xb67f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb69d) {\n                                            if (code < 0xb681) {\n                                                // Lo       HANGUL SYLLABLE DDYO\n                                                if (0xb680 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb69c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n                                                    if (0xb681 <= code && code <= 0xb69b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDU\n                                                    if (0xb69c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6b8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n                                                if (0xb69d <= code && code <= 0xb6b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb6b9) {\n                                                    // Lo       HANGUL SYLLABLE DDWEO\n                                                    if (0xb6b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n                                                    if (0xb6b9 <= code && code <= 0xb6d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb761) {\n                                    if (code < 0xb70d) {\n                                        if (code < 0xb6f0) {\n                                            if (code < 0xb6d5) {\n                                                // Lo       HANGUL SYLLABLE DDWE\n                                                if (0xb6d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n                                                if (0xb6d5 <= code && code <= 0xb6ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6f1) {\n                                                // Lo       HANGUL SYLLABLE DDWI\n                                                if (0xb6f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb70c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n                                                    if (0xb6f1 <= code && code <= 0xb70b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDYU\n                                                    if (0xb70c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb744) {\n                                            if (code < 0xb728) {\n                                                // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n                                                if (0xb70d <= code && code <= 0xb727) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb729) {\n                                                    // Lo       HANGUL SYLLABLE DDEU\n                                                    if (0xb728 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n                                                    if (0xb729 <= code && code <= 0xb743) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb745) {\n                                                // Lo       HANGUL SYLLABLE DDYI\n                                                if (0xb744 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb760) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n                                                    if (0xb745 <= code && code <= 0xb75f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDI\n                                                    if (0xb760 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb7b4) {\n                                        if (code < 0xb77d) {\n                                            if (code < 0xb77c) {\n                                                // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n                                                if (0xb761 <= code && code <= 0xb77b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RA\n                                                if (0xb77c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb798) {\n                                                // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n                                                if (0xb77d <= code && code <= 0xb797) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb799) {\n                                                    // Lo       HANGUL SYLLABLE RAE\n                                                    if (0xb798 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n                                                    if (0xb799 <= code && code <= 0xb7b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb7d1) {\n                                            if (code < 0xb7b5) {\n                                                // Lo       HANGUL SYLLABLE RYA\n                                                if (0xb7b4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7d0) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n                                                    if (0xb7b5 <= code && code <= 0xb7cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYAE\n                                                    if (0xb7d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb7ec) {\n                                                // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n                                                if (0xb7d1 <= code && code <= 0xb7eb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7ed) {\n                                                    // Lo       HANGUL SYLLABLE REO\n                                                    if (0xb7ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n                                                    if (0xb7ed <= code && code <= 0xb807) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb921) {\n                                if (code < 0xb894) {\n                                    if (code < 0xb841) {\n                                        if (code < 0xb824) {\n                                            if (code < 0xb809) {\n                                                // Lo       HANGUL SYLLABLE RE\n                                                if (0xb808 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n                                                if (0xb809 <= code && code <= 0xb823) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb825) {\n                                                // Lo       HANGUL SYLLABLE RYEO\n                                                if (0xb824 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb840) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n                                                    if (0xb825 <= code && code <= 0xb83f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYE\n                                                    if (0xb840 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb85d) {\n                                            if (code < 0xb85c) {\n                                                // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n                                                if (0xb841 <= code && code <= 0xb85b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RO\n                                                if (0xb85c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb878) {\n                                                // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n                                                if (0xb85d <= code && code <= 0xb877) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb879) {\n                                                    // Lo       HANGUL SYLLABLE RWA\n                                                    if (0xb878 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n                                                    if (0xb879 <= code && code <= 0xb893) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb8cd) {\n                                        if (code < 0xb8b0) {\n                                            if (code < 0xb895) {\n                                                // Lo       HANGUL SYLLABLE RWAE\n                                                if (0xb894 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n                                                if (0xb895 <= code && code <= 0xb8af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb8b1) {\n                                                // Lo       HANGUL SYLLABLE ROE\n                                                if (0xb8b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8cc) {\n                                                    // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n                                                    if (0xb8b1 <= code && code <= 0xb8cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYO\n                                                    if (0xb8cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb904) {\n                                            if (code < 0xb8e8) {\n                                                // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n                                                if (0xb8cd <= code && code <= 0xb8e7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8e9) {\n                                                    // Lo       HANGUL SYLLABLE RU\n                                                    if (0xb8e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n                                                    if (0xb8e9 <= code && code <= 0xb903) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb905) {\n                                                // Lo       HANGUL SYLLABLE RWEO\n                                                if (0xb904 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb920) {\n                                                    // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n                                                    if (0xb905 <= code && code <= 0xb91f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RWE\n                                                    if (0xb920 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb9c8) {\n                                    if (code < 0xb974) {\n                                        if (code < 0xb93d) {\n                                            if (code < 0xb93c) {\n                                                // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n                                                if (0xb921 <= code && code <= 0xb93b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RWI\n                                                if (0xb93c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb958) {\n                                                // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n                                                if (0xb93d <= code && code <= 0xb957) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb959) {\n                                                    // Lo       HANGUL SYLLABLE RYU\n                                                    if (0xb958 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n                                                    if (0xb959 <= code && code <= 0xb973) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb991) {\n                                            if (code < 0xb975) {\n                                                // Lo       HANGUL SYLLABLE REU\n                                                if (0xb974 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb990) {\n                                                    // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n                                                    if (0xb975 <= code && code <= 0xb98f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYI\n                                                    if (0xb990 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9ac) {\n                                                // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n                                                if (0xb991 <= code && code <= 0xb9ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb9ad) {\n                                                    // Lo       HANGUL SYLLABLE RI\n                                                    if (0xb9ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n                                                    if (0xb9ad <= code && code <= 0xb9c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xba01) {\n                                        if (code < 0xb9e4) {\n                                            if (code < 0xb9c9) {\n                                                // Lo       HANGUL SYLLABLE MA\n                                                if (0xb9c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n                                                if (0xb9c9 <= code && code <= 0xb9e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9e5) {\n                                                // Lo       HANGUL SYLLABLE MAE\n                                                if (0xb9e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba00) {\n                                                    // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n                                                    if (0xb9e5 <= code && code <= 0xb9ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MYA\n                                                    if (0xba00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xba38) {\n                                            if (code < 0xba1c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n                                                if (0xba01 <= code && code <= 0xba1b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba1d) {\n                                                    // Lo       HANGUL SYLLABLE MYAE\n                                                    if (0xba1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n                                                    if (0xba1d <= code && code <= 0xba37) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba39) {\n                                                // Lo       HANGUL SYLLABLE MEO\n                                                if (0xba38 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba54) {\n                                                    // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n                                                    if (0xba39 <= code && code <= 0xba53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE ME\n                                                    if (0xba54 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xbcbc) {\n                            if (code < 0xbb88) {\n                                if (code < 0xbae1) {\n                                    if (code < 0xbaa8) {\n                                        if (code < 0xba71) {\n                                            if (code < 0xba70) {\n                                                // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n                                                if (0xba55 <= code && code <= 0xba6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MYEO\n                                                if (0xba70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba8c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n                                                if (0xba71 <= code && code <= 0xba8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba8d) {\n                                                    // Lo       HANGUL SYLLABLE MYE\n                                                    if (0xba8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n                                                    if (0xba8d <= code && code <= 0xbaa7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbac4) {\n                                            if (code < 0xbaa9) {\n                                                // Lo       HANGUL SYLLABLE MO\n                                                if (0xbaa8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n                                                if (0xbaa9 <= code && code <= 0xbac3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbac5) {\n                                                // Lo       HANGUL SYLLABLE MWA\n                                                if (0xbac4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbae0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n                                                    if (0xbac5 <= code && code <= 0xbadf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWAE\n                                                    if (0xbae0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbb34) {\n                                        if (code < 0xbafd) {\n                                            if (code < 0xbafc) {\n                                                // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n                                                if (0xbae1 <= code && code <= 0xbafb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MOE\n                                                if (0xbafc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb18) {\n                                                // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n                                                if (0xbafd <= code && code <= 0xbb17) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb19) {\n                                                    // Lo       HANGUL SYLLABLE MYO\n                                                    if (0xbb18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n                                                    if (0xbb19 <= code && code <= 0xbb33) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbb51) {\n                                            if (code < 0xbb35) {\n                                                // Lo       HANGUL SYLLABLE MU\n                                                if (0xbb34 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb50) {\n                                                    // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n                                                    if (0xbb35 <= code && code <= 0xbb4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWEO\n                                                    if (0xbb50 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb6c) {\n                                                // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n                                                if (0xbb51 <= code && code <= 0xbb6b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb6d) {\n                                                    // Lo       HANGUL SYLLABLE MWE\n                                                    if (0xbb6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n                                                    if (0xbb6d <= code && code <= 0xbb87) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbc15) {\n                                    if (code < 0xbbc1) {\n                                        if (code < 0xbba4) {\n                                            if (code < 0xbb89) {\n                                                // Lo       HANGUL SYLLABLE MWI\n                                                if (0xbb88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n                                                if (0xbb89 <= code && code <= 0xbba3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbba5) {\n                                                // Lo       HANGUL SYLLABLE MYU\n                                                if (0xbba4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbc0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n                                                    if (0xbba5 <= code && code <= 0xbbbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MEU\n                                                    if (0xbbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbbf8) {\n                                            if (code < 0xbbdc) {\n                                                // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n                                                if (0xbbc1 <= code && code <= 0xbbdb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbdd) {\n                                                    // Lo       HANGUL SYLLABLE MYI\n                                                    if (0xbbdc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n                                                    if (0xbbdd <= code && code <= 0xbbf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbbf9) {\n                                                // Lo       HANGUL SYLLABLE MI\n                                                if (0xbbf8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc14) {\n                                                    // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n                                                    if (0xbbf9 <= code && code <= 0xbc13) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BA\n                                                    if (0xbc14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc68) {\n                                        if (code < 0xbc31) {\n                                            if (code < 0xbc30) {\n                                                // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n                                                if (0xbc15 <= code && code <= 0xbc2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BAE\n                                                if (0xbc30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc4c) {\n                                                // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n                                                if (0xbc31 <= code && code <= 0xbc4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc4d) {\n                                                    // Lo       HANGUL SYLLABLE BYA\n                                                    if (0xbc4c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n                                                    if (0xbc4d <= code && code <= 0xbc67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbc85) {\n                                            if (code < 0xbc69) {\n                                                // Lo       HANGUL SYLLABLE BYAE\n                                                if (0xbc68 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc84) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n                                                    if (0xbc69 <= code && code <= 0xbc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BEO\n                                                    if (0xbc84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbca0) {\n                                                // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n                                                if (0xbc85 <= code && code <= 0xbc9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbca1) {\n                                                    // Lo       HANGUL SYLLABLE BE\n                                                    if (0xbca0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n                                                    if (0xbca1 <= code && code <= 0xbcbb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xbdd5) {\n                                if (code < 0xbd48) {\n                                    if (code < 0xbcf5) {\n                                        if (code < 0xbcd8) {\n                                            if (code < 0xbcbd) {\n                                                // Lo       HANGUL SYLLABLE BYEO\n                                                if (0xbcbc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n                                                if (0xbcbd <= code && code <= 0xbcd7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbcd9) {\n                                                // Lo       HANGUL SYLLABLE BYE\n                                                if (0xbcd8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcf4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n                                                    if (0xbcd9 <= code && code <= 0xbcf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BO\n                                                    if (0xbcf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd11) {\n                                            if (code < 0xbd10) {\n                                                // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n                                                if (0xbcf5 <= code && code <= 0xbd0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BWA\n                                                if (0xbd10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd2c) {\n                                                // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n                                                if (0xbd11 <= code && code <= 0xbd2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd2d) {\n                                                    // Lo       HANGUL SYLLABLE BWAE\n                                                    if (0xbd2c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n                                                    if (0xbd2d <= code && code <= 0xbd47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbd81) {\n                                        if (code < 0xbd64) {\n                                            if (code < 0xbd49) {\n                                                // Lo       HANGUL SYLLABLE BOE\n                                                if (0xbd48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n                                                if (0xbd49 <= code && code <= 0xbd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd65) {\n                                                // Lo       HANGUL SYLLABLE BYO\n                                                if (0xbd64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd80) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n                                                    if (0xbd65 <= code && code <= 0xbd7f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BU\n                                                    if (0xbd80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbdb8) {\n                                            if (code < 0xbd9c) {\n                                                // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n                                                if (0xbd81 <= code && code <= 0xbd9b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd9d) {\n                                                    // Lo       HANGUL SYLLABLE BWEO\n                                                    if (0xbd9c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n                                                    if (0xbd9d <= code && code <= 0xbdb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbdb9) {\n                                                // Lo       HANGUL SYLLABLE BWE\n                                                if (0xbdb8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbdd4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n                                                    if (0xbdb9 <= code && code <= 0xbdd3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BWI\n                                                    if (0xbdd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbe7c) {\n                                    if (code < 0xbe28) {\n                                        if (code < 0xbdf1) {\n                                            if (code < 0xbdf0) {\n                                                // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n                                                if (0xbdd5 <= code && code <= 0xbdef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BYU\n                                                if (0xbdf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe0c) {\n                                                // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n                                                if (0xbdf1 <= code && code <= 0xbe0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe0d) {\n                                                    // Lo       HANGUL SYLLABLE BEU\n                                                    if (0xbe0c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n                                                    if (0xbe0d <= code && code <= 0xbe27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbe45) {\n                                            if (code < 0xbe29) {\n                                                // Lo       HANGUL SYLLABLE BYI\n                                                if (0xbe28 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe44) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n                                                    if (0xbe29 <= code && code <= 0xbe43) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BI\n                                                    if (0xbe44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe60) {\n                                                // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n                                                if (0xbe45 <= code && code <= 0xbe5f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe61) {\n                                                    // Lo       HANGUL SYLLABLE BBA\n                                                    if (0xbe60 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n                                                    if (0xbe61 <= code && code <= 0xbe7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbeb5) {\n                                        if (code < 0xbe98) {\n                                            if (code < 0xbe7d) {\n                                                // Lo       HANGUL SYLLABLE BBAE\n                                                if (0xbe7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n                                                if (0xbe7d <= code && code <= 0xbe97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe99) {\n                                                // Lo       HANGUL SYLLABLE BBYA\n                                                if (0xbe98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbeb4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n                                                    if (0xbe99 <= code && code <= 0xbeb3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYAE\n                                                    if (0xbeb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbeec) {\n                                            if (code < 0xbed0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n                                                if (0xbeb5 <= code && code <= 0xbecf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbed1) {\n                                                    // Lo       HANGUL SYLLABLE BBEO\n                                                    if (0xbed0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n                                                    if (0xbed1 <= code && code <= 0xbeeb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbeed) {\n                                                // Lo       HANGUL SYLLABLE BBE\n                                                if (0xbeec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf08) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n                                                    if (0xbeed <= code && code <= 0xbf07) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYEO\n                                                    if (0xbf08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0xd1d8) {\n                if (code < 0xc870) {\n                    if (code < 0xc3bc) {\n                        if (code < 0xc155) {\n                            if (code < 0xc03c) {\n                                if (code < 0xbf95) {\n                                    if (code < 0xbf5c) {\n                                        if (code < 0xbf25) {\n                                            if (code < 0xbf24) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n                                                if (0xbf09 <= code && code <= 0xbf23) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYE\n                                                if (0xbf24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf40) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n                                                if (0xbf25 <= code && code <= 0xbf3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf41) {\n                                                    // Lo       HANGUL SYLLABLE BBO\n                                                    if (0xbf40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n                                                    if (0xbf41 <= code && code <= 0xbf5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbf78) {\n                                            if (code < 0xbf5d) {\n                                                // Lo       HANGUL SYLLABLE BBWA\n                                                if (0xbf5c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n                                                if (0xbf5d <= code && code <= 0xbf77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf79) {\n                                                // Lo       HANGUL SYLLABLE BBWAE\n                                                if (0xbf78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf94) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n                                                    if (0xbf79 <= code && code <= 0xbf93) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBOE\n                                                    if (0xbf94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbfe8) {\n                                        if (code < 0xbfb1) {\n                                            if (code < 0xbfb0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n                                                if (0xbf95 <= code && code <= 0xbfaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYO\n                                                if (0xbfb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbfcc) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n                                                if (0xbfb1 <= code && code <= 0xbfcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbfcd) {\n                                                    // Lo       HANGUL SYLLABLE BBU\n                                                    if (0xbfcc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n                                                    if (0xbfcd <= code && code <= 0xbfe7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc005) {\n                                            if (code < 0xbfe9) {\n                                                // Lo       HANGUL SYLLABLE BBWEO\n                                                if (0xbfe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc004) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n                                                    if (0xbfe9 <= code && code <= 0xc003) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBWE\n                                                    if (0xc004 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc020) {\n                                                // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n                                                if (0xc005 <= code && code <= 0xc01f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc021) {\n                                                    // Lo       HANGUL SYLLABLE BBWI\n                                                    if (0xc020 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n                                                    if (0xc021 <= code && code <= 0xc03b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc0c8) {\n                                    if (code < 0xc075) {\n                                        if (code < 0xc058) {\n                                            if (code < 0xc03d) {\n                                                // Lo       HANGUL SYLLABLE BBYU\n                                                if (0xc03c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n                                                if (0xc03d <= code && code <= 0xc057) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc059) {\n                                                // Lo       HANGUL SYLLABLE BBEU\n                                                if (0xc058 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc074) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n                                                    if (0xc059 <= code && code <= 0xc073) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYI\n                                                    if (0xc074 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc091) {\n                                            if (code < 0xc090) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n                                                if (0xc075 <= code && code <= 0xc08f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBI\n                                                if (0xc090 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0ac) {\n                                                // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n                                                if (0xc091 <= code && code <= 0xc0ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc0ad) {\n                                                    // Lo       HANGUL SYLLABLE SA\n                                                    if (0xc0ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n                                                    if (0xc0ad <= code && code <= 0xc0c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc101) {\n                                        if (code < 0xc0e4) {\n                                            if (code < 0xc0c9) {\n                                                // Lo       HANGUL SYLLABLE SAE\n                                                if (0xc0c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n                                                if (0xc0c9 <= code && code <= 0xc0e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0e5) {\n                                                // Lo       HANGUL SYLLABLE SYA\n                                                if (0xc0e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc100) {\n                                                    // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n                                                    if (0xc0e5 <= code && code <= 0xc0ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYAE\n                                                    if (0xc100 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc138) {\n                                            if (code < 0xc11c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n                                                if (0xc101 <= code && code <= 0xc11b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc11d) {\n                                                    // Lo       HANGUL SYLLABLE SEO\n                                                    if (0xc11c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n                                                    if (0xc11d <= code && code <= 0xc137) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc139) {\n                                                // Lo       HANGUL SYLLABLE SE\n                                                if (0xc138 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc154) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n                                                    if (0xc139 <= code && code <= 0xc153) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYEO\n                                                    if (0xc154 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc288) {\n                                if (code < 0xc1e1) {\n                                    if (code < 0xc1a8) {\n                                        if (code < 0xc171) {\n                                            if (code < 0xc170) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n                                                if (0xc155 <= code && code <= 0xc16f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYE\n                                                if (0xc170 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc18c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n                                                if (0xc171 <= code && code <= 0xc18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc18d) {\n                                                    // Lo       HANGUL SYLLABLE SO\n                                                    if (0xc18c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n                                                    if (0xc18d <= code && code <= 0xc1a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc1c4) {\n                                            if (code < 0xc1a9) {\n                                                // Lo       HANGUL SYLLABLE SWA\n                                                if (0xc1a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n                                                if (0xc1a9 <= code && code <= 0xc1c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc1c5) {\n                                                // Lo       HANGUL SYLLABLE SWAE\n                                                if (0xc1c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc1e0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n                                                    if (0xc1c5 <= code && code <= 0xc1df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SOE\n                                                    if (0xc1e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc234) {\n                                        if (code < 0xc1fd) {\n                                            if (code < 0xc1fc) {\n                                                // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n                                                if (0xc1e1 <= code && code <= 0xc1fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYO\n                                                if (0xc1fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc218) {\n                                                // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n                                                if (0xc1fd <= code && code <= 0xc217) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc219) {\n                                                    // Lo       HANGUL SYLLABLE SU\n                                                    if (0xc218 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n                                                    if (0xc219 <= code && code <= 0xc233) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc251) {\n                                            if (code < 0xc235) {\n                                                // Lo       HANGUL SYLLABLE SWEO\n                                                if (0xc234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc250) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n                                                    if (0xc235 <= code && code <= 0xc24f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SWE\n                                                    if (0xc250 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc26c) {\n                                                // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n                                                if (0xc251 <= code && code <= 0xc26b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc26d) {\n                                                    // Lo       HANGUL SYLLABLE SWI\n                                                    if (0xc26c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n                                                    if (0xc26d <= code && code <= 0xc287) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc315) {\n                                    if (code < 0xc2c1) {\n                                        if (code < 0xc2a4) {\n                                            if (code < 0xc289) {\n                                                // Lo       HANGUL SYLLABLE SYU\n                                                if (0xc288 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n                                                if (0xc289 <= code && code <= 0xc2a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2a5) {\n                                                // Lo       HANGUL SYLLABLE SEU\n                                                if (0xc2a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2c0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n                                                    if (0xc2a5 <= code && code <= 0xc2bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYI\n                                                    if (0xc2c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc2f8) {\n                                            if (code < 0xc2dc) {\n                                                // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n                                                if (0xc2c1 <= code && code <= 0xc2db) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2dd) {\n                                                    // Lo       HANGUL SYLLABLE SI\n                                                    if (0xc2dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n                                                    if (0xc2dd <= code && code <= 0xc2f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2f9) {\n                                                // Lo       HANGUL SYLLABLE SSA\n                                                if (0xc2f8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc314) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n                                                    if (0xc2f9 <= code && code <= 0xc313) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSAE\n                                                    if (0xc314 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc368) {\n                                        if (code < 0xc331) {\n                                            if (code < 0xc330) {\n                                                // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n                                                if (0xc315 <= code && code <= 0xc32f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSYA\n                                                if (0xc330 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc34c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n                                                if (0xc331 <= code && code <= 0xc34b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc34d) {\n                                                    // Lo       HANGUL SYLLABLE SSYAE\n                                                    if (0xc34c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n                                                    if (0xc34d <= code && code <= 0xc367) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc385) {\n                                            if (code < 0xc369) {\n                                                // Lo       HANGUL SYLLABLE SSEO\n                                                if (0xc368 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc384) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n                                                    if (0xc369 <= code && code <= 0xc383) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSE\n                                                    if (0xc384 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3a0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n                                                if (0xc385 <= code && code <= 0xc39f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3a1) {\n                                                    // Lo       HANGUL SYLLABLE SSYEO\n                                                    if (0xc3a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n                                                    if (0xc3a1 <= code && code <= 0xc3bb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xc609) {\n                            if (code < 0xc4d5) {\n                                if (code < 0xc448) {\n                                    if (code < 0xc3f5) {\n                                        if (code < 0xc3d8) {\n                                            if (code < 0xc3bd) {\n                                                // Lo       HANGUL SYLLABLE SSYE\n                                                if (0xc3bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n                                                if (0xc3bd <= code && code <= 0xc3d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3d9) {\n                                                // Lo       HANGUL SYLLABLE SSO\n                                                if (0xc3d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3f4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n                                                    if (0xc3d9 <= code && code <= 0xc3f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWA\n                                                    if (0xc3f4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc411) {\n                                            if (code < 0xc410) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n                                                if (0xc3f5 <= code && code <= 0xc40f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSWAE\n                                                if (0xc410 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc42c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n                                                if (0xc411 <= code && code <= 0xc42b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc42d) {\n                                                    // Lo       HANGUL SYLLABLE SSOE\n                                                    if (0xc42c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n                                                    if (0xc42d <= code && code <= 0xc447) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc481) {\n                                        if (code < 0xc464) {\n                                            if (code < 0xc449) {\n                                                // Lo       HANGUL SYLLABLE SSYO\n                                                if (0xc448 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n                                                if (0xc449 <= code && code <= 0xc463) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc465) {\n                                                // Lo       HANGUL SYLLABLE SSU\n                                                if (0xc464 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc480) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n                                                    if (0xc465 <= code && code <= 0xc47f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWEO\n                                                    if (0xc480 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc4b8) {\n                                            if (code < 0xc49c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n                                                if (0xc481 <= code && code <= 0xc49b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc49d) {\n                                                    // Lo       HANGUL SYLLABLE SSWE\n                                                    if (0xc49c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n                                                    if (0xc49d <= code && code <= 0xc4b7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc4b9) {\n                                                // Lo       HANGUL SYLLABLE SSWI\n                                                if (0xc4b8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc4d4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n                                                    if (0xc4b9 <= code && code <= 0xc4d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSYU\n                                                    if (0xc4d4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc57c) {\n                                    if (code < 0xc528) {\n                                        if (code < 0xc4f1) {\n                                            if (code < 0xc4f0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n                                                if (0xc4d5 <= code && code <= 0xc4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSEU\n                                                if (0xc4f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc50c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n                                                if (0xc4f1 <= code && code <= 0xc50b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc50d) {\n                                                    // Lo       HANGUL SYLLABLE SSYI\n                                                    if (0xc50c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n                                                    if (0xc50d <= code && code <= 0xc527) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc545) {\n                                            if (code < 0xc529) {\n                                                // Lo       HANGUL SYLLABLE SSI\n                                                if (0xc528 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc544) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n                                                    if (0xc529 <= code && code <= 0xc543) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE A\n                                                    if (0xc544 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc560) {\n                                                // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n                                                if (0xc545 <= code && code <= 0xc55f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc561) {\n                                                    // Lo       HANGUL SYLLABLE AE\n                                                    if (0xc560 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n                                                    if (0xc561 <= code && code <= 0xc57b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc5b5) {\n                                        if (code < 0xc598) {\n                                            if (code < 0xc57d) {\n                                                // Lo       HANGUL SYLLABLE YA\n                                                if (0xc57c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n                                                if (0xc57d <= code && code <= 0xc597) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc599) {\n                                                // Lo       HANGUL SYLLABLE YAE\n                                                if (0xc598 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5b4) {\n                                                    // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n                                                    if (0xc599 <= code && code <= 0xc5b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE EO\n                                                    if (0xc5b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc5ec) {\n                                            if (code < 0xc5d0) {\n                                                // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n                                                if (0xc5b5 <= code && code <= 0xc5cf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5d1) {\n                                                    // Lo       HANGUL SYLLABLE E\n                                                    if (0xc5d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n                                                    if (0xc5d1 <= code && code <= 0xc5eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc5ed) {\n                                                // Lo       HANGUL SYLLABLE YEO\n                                                if (0xc5ec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc608) {\n                                                    // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n                                                    if (0xc5ed <= code && code <= 0xc607) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YE\n                                                    if (0xc608 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc73c) {\n                                if (code < 0xc695) {\n                                    if (code < 0xc65c) {\n                                        if (code < 0xc625) {\n                                            if (code < 0xc624) {\n                                                // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n                                                if (0xc609 <= code && code <= 0xc623) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE O\n                                                if (0xc624 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc640) {\n                                                // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n                                                if (0xc625 <= code && code <= 0xc63f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc641) {\n                                                    // Lo       HANGUL SYLLABLE WA\n                                                    if (0xc640 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n                                                    if (0xc641 <= code && code <= 0xc65b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc678) {\n                                            if (code < 0xc65d) {\n                                                // Lo       HANGUL SYLLABLE WAE\n                                                if (0xc65c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n                                                if (0xc65d <= code && code <= 0xc677) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc679) {\n                                                // Lo       HANGUL SYLLABLE OE\n                                                if (0xc678 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc694) {\n                                                    // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n                                                    if (0xc679 <= code && code <= 0xc693) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YO\n                                                    if (0xc694 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc6e8) {\n                                        if (code < 0xc6b1) {\n                                            if (code < 0xc6b0) {\n                                                // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n                                                if (0xc695 <= code && code <= 0xc6af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE U\n                                                if (0xc6b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc6cc) {\n                                                // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n                                                if (0xc6b1 <= code && code <= 0xc6cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc6cd) {\n                                                    // Lo       HANGUL SYLLABLE WEO\n                                                    if (0xc6cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n                                                    if (0xc6cd <= code && code <= 0xc6e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc705) {\n                                            if (code < 0xc6e9) {\n                                                // Lo       HANGUL SYLLABLE WE\n                                                if (0xc6e8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc704) {\n                                                    // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n                                                    if (0xc6e9 <= code && code <= 0xc703) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE WI\n                                                    if (0xc704 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc720) {\n                                                // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n                                                if (0xc705 <= code && code <= 0xc71f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc721) {\n                                                    // Lo       HANGUL SYLLABLE YU\n                                                    if (0xc720 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n                                                    if (0xc721 <= code && code <= 0xc73b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc7c9) {\n                                    if (code < 0xc775) {\n                                        if (code < 0xc758) {\n                                            if (code < 0xc73d) {\n                                                // Lo       HANGUL SYLLABLE EU\n                                                if (0xc73c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n                                                if (0xc73d <= code && code <= 0xc757) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc759) {\n                                                // Lo       HANGUL SYLLABLE YI\n                                                if (0xc758 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc774) {\n                                                    // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n                                                    if (0xc759 <= code && code <= 0xc773) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE I\n                                                    if (0xc774 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc7ac) {\n                                            if (code < 0xc790) {\n                                                // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n                                                if (0xc775 <= code && code <= 0xc78f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc791) {\n                                                    // Lo       HANGUL SYLLABLE JA\n                                                    if (0xc790 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n                                                    if (0xc791 <= code && code <= 0xc7ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc7ad) {\n                                                // Lo       HANGUL SYLLABLE JAE\n                                                if (0xc7ac === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc7c8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n                                                    if (0xc7ad <= code && code <= 0xc7c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYA\n                                                    if (0xc7c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc81c) {\n                                        if (code < 0xc7e5) {\n                                            if (code < 0xc7e4) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n                                                if (0xc7c9 <= code && code <= 0xc7e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYAE\n                                                if (0xc7e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc800) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n                                                if (0xc7e5 <= code && code <= 0xc7ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc801) {\n                                                    // Lo       HANGUL SYLLABLE JEO\n                                                    if (0xc800 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n                                                    if (0xc801 <= code && code <= 0xc81b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc839) {\n                                            if (code < 0xc81d) {\n                                                // Lo       HANGUL SYLLABLE JE\n                                                if (0xc81c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc838) {\n                                                    // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n                                                    if (0xc81d <= code && code <= 0xc837) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYEO\n                                                    if (0xc838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc854) {\n                                                // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n                                                if (0xc839 <= code && code <= 0xc853) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc855) {\n                                                    // Lo       HANGUL SYLLABLE JYE\n                                                    if (0xc854 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n                                                    if (0xc855 <= code && code <= 0xc86f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xcd24) {\n                        if (code < 0xcabd) {\n                            if (code < 0xc989) {\n                                if (code < 0xc8fc) {\n                                    if (code < 0xc8a9) {\n                                        if (code < 0xc88c) {\n                                            if (code < 0xc871) {\n                                                // Lo       HANGUL SYLLABLE JO\n                                                if (0xc870 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n                                                if (0xc871 <= code && code <= 0xc88b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc88d) {\n                                                // Lo       HANGUL SYLLABLE JWA\n                                                if (0xc88c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8a8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n                                                    if (0xc88d <= code && code <= 0xc8a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWAE\n                                                    if (0xc8a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc8c5) {\n                                            if (code < 0xc8c4) {\n                                                // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n                                                if (0xc8a9 <= code && code <= 0xc8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JOE\n                                                if (0xc8c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc8e0) {\n                                                // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n                                                if (0xc8c5 <= code && code <= 0xc8df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8e1) {\n                                                    // Lo       HANGUL SYLLABLE JYO\n                                                    if (0xc8e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n                                                    if (0xc8e1 <= code && code <= 0xc8fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc935) {\n                                        if (code < 0xc918) {\n                                            if (code < 0xc8fd) {\n                                                // Lo       HANGUL SYLLABLE JU\n                                                if (0xc8fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n                                                if (0xc8fd <= code && code <= 0xc917) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc919) {\n                                                // Lo       HANGUL SYLLABLE JWEO\n                                                if (0xc918 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc934) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n                                                    if (0xc919 <= code && code <= 0xc933) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWE\n                                                    if (0xc934 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc96c) {\n                                            if (code < 0xc950) {\n                                                // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n                                                if (0xc935 <= code && code <= 0xc94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc951) {\n                                                    // Lo       HANGUL SYLLABLE JWI\n                                                    if (0xc950 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n                                                    if (0xc951 <= code && code <= 0xc96b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc96d) {\n                                                // Lo       HANGUL SYLLABLE JYU\n                                                if (0xc96c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc988) {\n                                                    // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n                                                    if (0xc96d <= code && code <= 0xc987) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JEU\n                                                    if (0xc988 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xca30) {\n                                    if (code < 0xc9dc) {\n                                        if (code < 0xc9a5) {\n                                            if (code < 0xc9a4) {\n                                                // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n                                                if (0xc989 <= code && code <= 0xc9a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYI\n                                                if (0xc9a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc9c0) {\n                                                // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n                                                if (0xc9a5 <= code && code <= 0xc9bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9c1) {\n                                                    // Lo       HANGUL SYLLABLE JI\n                                                    if (0xc9c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n                                                    if (0xc9c1 <= code && code <= 0xc9db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc9f9) {\n                                            if (code < 0xc9dd) {\n                                                // Lo       HANGUL SYLLABLE JJA\n                                                if (0xc9dc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9f8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n                                                    if (0xc9dd <= code && code <= 0xc9f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJAE\n                                                    if (0xc9f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca14) {\n                                                // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n                                                if (0xc9f9 <= code && code <= 0xca13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca15) {\n                                                    // Lo       HANGUL SYLLABLE JJYA\n                                                    if (0xca14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n                                                    if (0xca15 <= code && code <= 0xca2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xca69) {\n                                        if (code < 0xca4c) {\n                                            if (code < 0xca31) {\n                                                // Lo       HANGUL SYLLABLE JJYAE\n                                                if (0xca30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n                                                if (0xca31 <= code && code <= 0xca4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca4d) {\n                                                // Lo       HANGUL SYLLABLE JJEO\n                                                if (0xca4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca68) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n                                                    if (0xca4d <= code && code <= 0xca67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJE\n                                                    if (0xca68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcaa0) {\n                                            if (code < 0xca84) {\n                                                // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n                                                if (0xca69 <= code && code <= 0xca83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca85) {\n                                                    // Lo       HANGUL SYLLABLE JJYEO\n                                                    if (0xca84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n                                                    if (0xca85 <= code && code <= 0xca9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaa1) {\n                                                // Lo       HANGUL SYLLABLE JJYE\n                                                if (0xcaa0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcabc) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n                                                    if (0xcaa1 <= code && code <= 0xcabb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJO\n                                                    if (0xcabc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xcbf0) {\n                                if (code < 0xcb49) {\n                                    if (code < 0xcb10) {\n                                        if (code < 0xcad9) {\n                                            if (code < 0xcad8) {\n                                                // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n                                                if (0xcabd <= code && code <= 0xcad7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWA\n                                                if (0xcad8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaf4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n                                                if (0xcad9 <= code && code <= 0xcaf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcaf5) {\n                                                    // Lo       HANGUL SYLLABLE JJWAE\n                                                    if (0xcaf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n                                                    if (0xcaf5 <= code && code <= 0xcb0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcb2c) {\n                                            if (code < 0xcb11) {\n                                                // Lo       HANGUL SYLLABLE JJOE\n                                                if (0xcb10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n                                                if (0xcb11 <= code && code <= 0xcb2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb2d) {\n                                                // Lo       HANGUL SYLLABLE JJYO\n                                                if (0xcb2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb48) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n                                                    if (0xcb2d <= code && code <= 0xcb47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJU\n                                                    if (0xcb48 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcb9c) {\n                                        if (code < 0xcb65) {\n                                            if (code < 0xcb64) {\n                                                // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n                                                if (0xcb49 <= code && code <= 0xcb63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWEO\n                                                if (0xcb64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb80) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n                                                if (0xcb65 <= code && code <= 0xcb7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb81) {\n                                                    // Lo       HANGUL SYLLABLE JJWE\n                                                    if (0xcb80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n                                                    if (0xcb81 <= code && code <= 0xcb9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcbb9) {\n                                            if (code < 0xcb9d) {\n                                                // Lo       HANGUL SYLLABLE JJWI\n                                                if (0xcb9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n                                                    if (0xcb9d <= code && code <= 0xcbb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJYU\n                                                    if (0xcbb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcbd4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n                                                if (0xcbb9 <= code && code <= 0xcbd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbd5) {\n                                                    // Lo       HANGUL SYLLABLE JJEU\n                                                    if (0xcbd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n                                                    if (0xcbd5 <= code && code <= 0xcbef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcc7d) {\n                                    if (code < 0xcc29) {\n                                        if (code < 0xcc0c) {\n                                            if (code < 0xcbf1) {\n                                                // Lo       HANGUL SYLLABLE JJYI\n                                                if (0xcbf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n                                                if (0xcbf1 <= code && code <= 0xcc0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc0d) {\n                                                // Lo       HANGUL SYLLABLE JJI\n                                                if (0xcc0c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc28) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n                                                    if (0xcc0d <= code && code <= 0xcc27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CA\n                                                    if (0xcc28 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcc60) {\n                                            if (code < 0xcc44) {\n                                                // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n                                                if (0xcc29 <= code && code <= 0xcc43) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc45) {\n                                                    // Lo       HANGUL SYLLABLE CAE\n                                                    if (0xcc44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n                                                    if (0xcc45 <= code && code <= 0xcc5f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc61) {\n                                                // Lo       HANGUL SYLLABLE CYA\n                                                if (0xcc60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc7c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n                                                    if (0xcc61 <= code && code <= 0xcc7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYAE\n                                                    if (0xcc7c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xccd0) {\n                                        if (code < 0xcc99) {\n                                            if (code < 0xcc98) {\n                                                // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n                                                if (0xcc7d <= code && code <= 0xcc97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CEO\n                                                if (0xcc98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xccb4) {\n                                                // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n                                                if (0xcc99 <= code && code <= 0xccb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccb5) {\n                                                    // Lo       HANGUL SYLLABLE CE\n                                                    if (0xccb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n                                                    if (0xccb5 <= code && code <= 0xcccf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcced) {\n                                            if (code < 0xccd1) {\n                                                // Lo       HANGUL SYLLABLE CYEO\n                                                if (0xccd0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccec) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n                                                    if (0xccd1 <= code && code <= 0xcceb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYE\n                                                    if (0xccec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd08) {\n                                                // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n                                                if (0xcced <= code && code <= 0xcd07) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd09) {\n                                                    // Lo       HANGUL SYLLABLE CO\n                                                    if (0xcd08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n                                                    if (0xcd09 <= code && code <= 0xcd23) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf71) {\n                            if (code < 0xce3d) {\n                                if (code < 0xcdb0) {\n                                    if (code < 0xcd5d) {\n                                        if (code < 0xcd40) {\n                                            if (code < 0xcd25) {\n                                                // Lo       HANGUL SYLLABLE CWA\n                                                if (0xcd24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n                                                if (0xcd25 <= code && code <= 0xcd3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd41) {\n                                                // Lo       HANGUL SYLLABLE CWAE\n                                                if (0xcd40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd5c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n                                                    if (0xcd41 <= code && code <= 0xcd5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE COE\n                                                    if (0xcd5c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcd79) {\n                                            if (code < 0xcd78) {\n                                                // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n                                                if (0xcd5d <= code && code <= 0xcd77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CYO\n                                                if (0xcd78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd94) {\n                                                // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n                                                if (0xcd79 <= code && code <= 0xcd93) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd95) {\n                                                    // Lo       HANGUL SYLLABLE CU\n                                                    if (0xcd94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n                                                    if (0xcd95 <= code && code <= 0xcdaf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcde9) {\n                                        if (code < 0xcdcc) {\n                                            if (code < 0xcdb1) {\n                                                // Lo       HANGUL SYLLABLE CWEO\n                                                if (0xcdb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n                                                if (0xcdb1 <= code && code <= 0xcdcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcdcd) {\n                                                // Lo       HANGUL SYLLABLE CWE\n                                                if (0xcdcc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcde8) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n                                                    if (0xcdcd <= code && code <= 0xcde7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CWI\n                                                    if (0xcde8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xce20) {\n                                            if (code < 0xce04) {\n                                                // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n                                                if (0xcde9 <= code && code <= 0xce03) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce05) {\n                                                    // Lo       HANGUL SYLLABLE CYU\n                                                    if (0xce04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n                                                    if (0xce05 <= code && code <= 0xce1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce21) {\n                                                // Lo       HANGUL SYLLABLE CEU\n                                                if (0xce20 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce3c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n                                                    if (0xce21 <= code && code <= 0xce3b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYI\n                                                    if (0xce3c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcee4) {\n                                    if (code < 0xce90) {\n                                        if (code < 0xce59) {\n                                            if (code < 0xce58) {\n                                                // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n                                                if (0xce3d <= code && code <= 0xce57) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CI\n                                                if (0xce58 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce74) {\n                                                // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n                                                if (0xce59 <= code && code <= 0xce73) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce75) {\n                                                    // Lo       HANGUL SYLLABLE KA\n                                                    if (0xce74 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n                                                    if (0xce75 <= code && code <= 0xce8f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcead) {\n                                            if (code < 0xce91) {\n                                                // Lo       HANGUL SYLLABLE KAE\n                                                if (0xce90 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xceac) {\n                                                    // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n                                                    if (0xce91 <= code && code <= 0xceab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYA\n                                                    if (0xceac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcec8) {\n                                                // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n                                                if (0xcead <= code && code <= 0xcec7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcec9) {\n                                                    // Lo       HANGUL SYLLABLE KYAE\n                                                    if (0xcec8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n                                                    if (0xcec9 <= code && code <= 0xcee3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcf1d) {\n                                        if (code < 0xcf00) {\n                                            if (code < 0xcee5) {\n                                                // Lo       HANGUL SYLLABLE KEO\n                                                if (0xcee4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n                                                if (0xcee5 <= code && code <= 0xceff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf01) {\n                                                // Lo       HANGUL SYLLABLE KE\n                                                if (0xcf00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n                                                    if (0xcf01 <= code && code <= 0xcf1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYEO\n                                                    if (0xcf1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcf54) {\n                                            if (code < 0xcf38) {\n                                                // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n                                                if (0xcf1d <= code && code <= 0xcf37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf39) {\n                                                    // Lo       HANGUL SYLLABLE KYE\n                                                    if (0xcf38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n                                                    if (0xcf39 <= code && code <= 0xcf53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf55) {\n                                                // Lo       HANGUL SYLLABLE KO\n                                                if (0xcf54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf70) {\n                                                    // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n                                                    if (0xcf55 <= code && code <= 0xcf6f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWA\n                                                    if (0xcf70 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd0a4) {\n                                if (code < 0xcffd) {\n                                    if (code < 0xcfc4) {\n                                        if (code < 0xcf8d) {\n                                            if (code < 0xcf8c) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n                                                if (0xcf71 <= code && code <= 0xcf8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWAE\n                                                if (0xcf8c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfa8) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n                                                if (0xcf8d <= code && code <= 0xcfa7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcfa9) {\n                                                    // Lo       HANGUL SYLLABLE KOE\n                                                    if (0xcfa8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n                                                    if (0xcfa9 <= code && code <= 0xcfc3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcfe0) {\n                                            if (code < 0xcfc5) {\n                                                // Lo       HANGUL SYLLABLE KYO\n                                                if (0xcfc4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n                                                if (0xcfc5 <= code && code <= 0xcfdf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfe1) {\n                                                // Lo       HANGUL SYLLABLE KU\n                                                if (0xcfe0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcffc) {\n                                                    // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n                                                    if (0xcfe1 <= code && code <= 0xcffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWEO\n                                                    if (0xcffc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd050) {\n                                        if (code < 0xd019) {\n                                            if (code < 0xd018) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n                                                if (0xcffd <= code && code <= 0xd017) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWE\n                                                if (0xd018 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd034) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n                                                if (0xd019 <= code && code <= 0xd033) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd035) {\n                                                    // Lo       HANGUL SYLLABLE KWI\n                                                    if (0xd034 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n                                                    if (0xd035 <= code && code <= 0xd04f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd06d) {\n                                            if (code < 0xd051) {\n                                                // Lo       HANGUL SYLLABLE KYU\n                                                if (0xd050 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd06c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n                                                    if (0xd051 <= code && code <= 0xd06b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KEU\n                                                    if (0xd06c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd088) {\n                                                // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n                                                if (0xd06d <= code && code <= 0xd087) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd089) {\n                                                    // Lo       HANGUL SYLLABLE KYI\n                                                    if (0xd088 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n                                                    if (0xd089 <= code && code <= 0xd0a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd131) {\n                                    if (code < 0xd0dd) {\n                                        if (code < 0xd0c0) {\n                                            if (code < 0xd0a5) {\n                                                // Lo       HANGUL SYLLABLE KI\n                                                if (0xd0a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n                                                if (0xd0a5 <= code && code <= 0xd0bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd0c1) {\n                                                // Lo       HANGUL SYLLABLE TA\n                                                if (0xd0c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n                                                    if (0xd0c1 <= code && code <= 0xd0db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TAE\n                                                    if (0xd0dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd114) {\n                                            if (code < 0xd0f8) {\n                                                // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n                                                if (0xd0dd <= code && code <= 0xd0f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0f9) {\n                                                    // Lo       HANGUL SYLLABLE TYA\n                                                    if (0xd0f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n                                                    if (0xd0f9 <= code && code <= 0xd113) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd115) {\n                                                // Lo       HANGUL SYLLABLE TYAE\n                                                if (0xd114 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd130) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n                                                    if (0xd115 <= code && code <= 0xd12f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TEO\n                                                    if (0xd130 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd184) {\n                                        if (code < 0xd14d) {\n                                            if (code < 0xd14c) {\n                                                // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n                                                if (0xd131 <= code && code <= 0xd14b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TE\n                                                if (0xd14c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd168) {\n                                                // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n                                                if (0xd14d <= code && code <= 0xd167) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd169) {\n                                                    // Lo       HANGUL SYLLABLE TYEO\n                                                    if (0xd168 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n                                                    if (0xd169 <= code && code <= 0xd183) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd1a1) {\n                                            if (code < 0xd185) {\n                                                // Lo       HANGUL SYLLABLE TYE\n                                                if (0xd184 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n                                                    if (0xd185 <= code && code <= 0xd19f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TO\n                                                    if (0xd1a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1bc) {\n                                                // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n                                                if (0xd1a1 <= code && code <= 0xd1bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1bd) {\n                                                    // Lo       HANGUL SYLLABLE TWA\n                                                    if (0xd1bc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n                                                    if (0xd1bd <= code && code <= 0xd1d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1133b) {\n                    if (code < 0xd671) {\n                        if (code < 0xd424) {\n                            if (code < 0xd2f1) {\n                                if (code < 0xd264) {\n                                    if (code < 0xd211) {\n                                        if (code < 0xd1f4) {\n                                            if (code < 0xd1d9) {\n                                                // Lo       HANGUL SYLLABLE TWAE\n                                                if (0xd1d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n                                                if (0xd1d9 <= code && code <= 0xd1f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1f5) {\n                                                // Lo       HANGUL SYLLABLE TOE\n                                                if (0xd1f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd210) {\n                                                    // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n                                                    if (0xd1f5 <= code && code <= 0xd20f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYO\n                                                    if (0xd210 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd22d) {\n                                            if (code < 0xd22c) {\n                                                // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n                                                if (0xd211 <= code && code <= 0xd22b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TU\n                                                if (0xd22c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd248) {\n                                                // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n                                                if (0xd22d <= code && code <= 0xd247) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd249) {\n                                                    // Lo       HANGUL SYLLABLE TWEO\n                                                    if (0xd248 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n                                                    if (0xd249 <= code && code <= 0xd263) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd29d) {\n                                        if (code < 0xd280) {\n                                            if (code < 0xd265) {\n                                                // Lo       HANGUL SYLLABLE TWE\n                                                if (0xd264 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n                                                if (0xd265 <= code && code <= 0xd27f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd281) {\n                                                // Lo       HANGUL SYLLABLE TWI\n                                                if (0xd280 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd29c) {\n                                                    // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n                                                    if (0xd281 <= code && code <= 0xd29b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYU\n                                                    if (0xd29c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd2d4) {\n                                            if (code < 0xd2b8) {\n                                                // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n                                                if (0xd29d <= code && code <= 0xd2b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2b9) {\n                                                    // Lo       HANGUL SYLLABLE TEU\n                                                    if (0xd2b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n                                                    if (0xd2b9 <= code && code <= 0xd2d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd2d5) {\n                                                // Lo       HANGUL SYLLABLE TYI\n                                                if (0xd2d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2f0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n                                                    if (0xd2d5 <= code && code <= 0xd2ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TI\n                                                    if (0xd2f0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd37d) {\n                                    if (code < 0xd344) {\n                                        if (code < 0xd30d) {\n                                            if (code < 0xd30c) {\n                                                // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n                                                if (0xd2f1 <= code && code <= 0xd30b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PA\n                                                if (0xd30c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd328) {\n                                                // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n                                                if (0xd30d <= code && code <= 0xd327) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd329) {\n                                                    // Lo       HANGUL SYLLABLE PAE\n                                                    if (0xd328 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n                                                    if (0xd329 <= code && code <= 0xd343) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd360) {\n                                            if (code < 0xd345) {\n                                                // Lo       HANGUL SYLLABLE PYA\n                                                if (0xd344 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n                                                if (0xd345 <= code && code <= 0xd35f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd361) {\n                                                // Lo       HANGUL SYLLABLE PYAE\n                                                if (0xd360 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd37c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n                                                    if (0xd361 <= code && code <= 0xd37b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PEO\n                                                    if (0xd37c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd3d0) {\n                                        if (code < 0xd399) {\n                                            if (code < 0xd398) {\n                                                // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n                                                if (0xd37d <= code && code <= 0xd397) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PE\n                                                if (0xd398 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b4) {\n                                                // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n                                                if (0xd399 <= code && code <= 0xd3b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3b5) {\n                                                    // Lo       HANGUL SYLLABLE PYEO\n                                                    if (0xd3b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n                                                    if (0xd3b5 <= code && code <= 0xd3cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd3ed) {\n                                            if (code < 0xd3d1) {\n                                                // Lo       HANGUL SYLLABLE PYE\n                                                if (0xd3d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n                                                    if (0xd3d1 <= code && code <= 0xd3eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PO\n                                                    if (0xd3ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd408) {\n                                                // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n                                                if (0xd3ed <= code && code <= 0xd407) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd409) {\n                                                    // Lo       HANGUL SYLLABLE PWA\n                                                    if (0xd408 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n                                                    if (0xd409 <= code && code <= 0xd423) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd53d) {\n                                if (code < 0xd4b0) {\n                                    if (code < 0xd45d) {\n                                        if (code < 0xd440) {\n                                            if (code < 0xd425) {\n                                                // Lo       HANGUL SYLLABLE PWAE\n                                                if (0xd424 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n                                                if (0xd425 <= code && code <= 0xd43f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd441) {\n                                                // Lo       HANGUL SYLLABLE POE\n                                                if (0xd440 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd45c) {\n                                                    // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n                                                    if (0xd441 <= code && code <= 0xd45b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYO\n                                                    if (0xd45c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd479) {\n                                            if (code < 0xd478) {\n                                                // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n                                                if (0xd45d <= code && code <= 0xd477) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PU\n                                                if (0xd478 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd494) {\n                                                // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n                                                if (0xd479 <= code && code <= 0xd493) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd495) {\n                                                    // Lo       HANGUL SYLLABLE PWEO\n                                                    if (0xd494 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n                                                    if (0xd495 <= code && code <= 0xd4af) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd4e9) {\n                                        if (code < 0xd4cc) {\n                                            if (code < 0xd4b1) {\n                                                // Lo       HANGUL SYLLABLE PWE\n                                                if (0xd4b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n                                                if (0xd4b1 <= code && code <= 0xd4cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4cd) {\n                                                // Lo       HANGUL SYLLABLE PWI\n                                                if (0xd4cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n                                                    if (0xd4cd <= code && code <= 0xd4e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYU\n                                                    if (0xd4e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd520) {\n                                            if (code < 0xd504) {\n                                                // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n                                                if (0xd4e9 <= code && code <= 0xd503) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd505) {\n                                                    // Lo       HANGUL SYLLABLE PEU\n                                                    if (0xd504 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n                                                    if (0xd505 <= code && code <= 0xd51f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd521) {\n                                                // Lo       HANGUL SYLLABLE PYI\n                                                if (0xd520 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd53c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n                                                    if (0xd521 <= code && code <= 0xd53b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PI\n                                                    if (0xd53c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd5e4) {\n                                    if (code < 0xd590) {\n                                        if (code < 0xd559) {\n                                            if (code < 0xd558) {\n                                                // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n                                                if (0xd53d <= code && code <= 0xd557) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HA\n                                                if (0xd558 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd574) {\n                                                // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n                                                if (0xd559 <= code && code <= 0xd573) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd575) {\n                                                    // Lo       HANGUL SYLLABLE HAE\n                                                    if (0xd574 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n                                                    if (0xd575 <= code && code <= 0xd58f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd5ad) {\n                                            if (code < 0xd591) {\n                                                // Lo       HANGUL SYLLABLE HYA\n                                                if (0xd590 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n                                                    if (0xd591 <= code && code <= 0xd5ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYAE\n                                                    if (0xd5ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd5c8) {\n                                                // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n                                                if (0xd5ad <= code && code <= 0xd5c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5c9) {\n                                                    // Lo       HANGUL SYLLABLE HEO\n                                                    if (0xd5c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n                                                    if (0xd5c9 <= code && code <= 0xd5e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd61d) {\n                                        if (code < 0xd600) {\n                                            if (code < 0xd5e5) {\n                                                // Lo       HANGUL SYLLABLE HE\n                                                if (0xd5e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n                                                if (0xd5e5 <= code && code <= 0xd5ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd601) {\n                                                // Lo       HANGUL SYLLABLE HYEO\n                                                if (0xd600 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd61c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n                                                    if (0xd601 <= code && code <= 0xd61b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYE\n                                                    if (0xd61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd654) {\n                                            if (code < 0xd638) {\n                                                // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n                                                if (0xd61d <= code && code <= 0xd637) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd639) {\n                                                    // Lo       HANGUL SYLLABLE HO\n                                                    if (0xd638 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n                                                    if (0xd639 <= code && code <= 0xd653) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd655) {\n                                                // Lo       HANGUL SYLLABLE HWA\n                                                if (0xd654 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd670) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n                                                    if (0xd655 <= code && code <= 0xd66f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWAE\n                                                    if (0xd670 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x11000) {\n                            if (code < 0xd7b0) {\n                                if (code < 0xd6fd) {\n                                    if (code < 0xd6c4) {\n                                        if (code < 0xd68d) {\n                                            if (code < 0xd68c) {\n                                                // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n                                                if (0xd671 <= code && code <= 0xd68b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HOE\n                                                if (0xd68c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6a8) {\n                                                // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n                                                if (0xd68d <= code && code <= 0xd6a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6a9) {\n                                                    // Lo       HANGUL SYLLABLE HYO\n                                                    if (0xd6a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n                                                    if (0xd6a9 <= code && code <= 0xd6c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd6e0) {\n                                            if (code < 0xd6c5) {\n                                                // Lo       HANGUL SYLLABLE HU\n                                                if (0xd6c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n                                                if (0xd6c5 <= code && code <= 0xd6df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6e1) {\n                                                // Lo       HANGUL SYLLABLE HWEO\n                                                if (0xd6e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6fc) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n                                                    if (0xd6e1 <= code && code <= 0xd6fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWE\n                                                    if (0xd6fc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd750) {\n                                        if (code < 0xd719) {\n                                            if (code < 0xd718) {\n                                                // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n                                                if (0xd6fd <= code && code <= 0xd717) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HWI\n                                                if (0xd718 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd734) {\n                                                // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n                                                if (0xd719 <= code && code <= 0xd733) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd735) {\n                                                    // Lo       HANGUL SYLLABLE HYU\n                                                    if (0xd734 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n                                                    if (0xd735 <= code && code <= 0xd74f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd76d) {\n                                            if (code < 0xd751) {\n                                                // Lo       HANGUL SYLLABLE HEU\n                                                if (0xd750 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd76c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n                                                    if (0xd751 <= code && code <= 0xd76b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYI\n                                                    if (0xd76c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd788) {\n                                                // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n                                                if (0xd76d <= code && code <= 0xd787) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd789) {\n                                                    // Lo       HANGUL SYLLABLE HI\n                                                    if (0xd788 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n                                                    if (0xd789 <= code && code <= 0xd7a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x10a01) {\n                                    if (code < 0xfeff) {\n                                        if (code < 0xfb1e) {\n                                            if (code < 0xd7cb) {\n                                                // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n                                                if (0xd7b0 <= code && code <= 0xd7c6) {\n                                                    return boundaries_1.CLUSTER_BREAK.V;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n                                                if (0xd7cb <= code && code <= 0xd7fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.T;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xfe00) {\n                                                // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n                                                if (0xfb1e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfe20) {\n                                                    // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n                                                    if (0xfe00 <= code && code <= 0xfe0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n                                                    if (0xfe20 <= code && code <= 0xfe2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x101fd) {\n                                            if (code < 0xff9e) {\n                                                // Cf       ZERO WIDTH NO-BREAK SPACE\n                                                if (0xfeff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfff0) {\n                                                    // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n                                                    if (0xff9e <= code && code <= 0xff9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n                                                    // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n                                                    if (0xfff0 <= code && code <= 0xfffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x102e0) {\n                                                // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n                                                if (0x101fd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10376) {\n                                                    // Mn       COPTIC EPACT THOUSANDS MARK\n                                                    if (0x102e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n                                                    if (0x10376 <= code && code <= 0x1037a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x10ae5) {\n                                        if (code < 0x10a0c) {\n                                            if (code < 0x10a05) {\n                                                // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n                                                if (0x10a01 <= code && code <= 0x10a03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n                                                if (0x10a05 <= code && code <= 0x10a06) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10a38) {\n                                                // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n                                                if (0x10a0c <= code && code <= 0x10a0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10a3f) {\n                                                    // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n                                                    if (0x10a38 <= code && code <= 0x10a3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHAROSHTHI VIRAMA\n                                                    if (0x10a3f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x10efd) {\n                                            if (code < 0x10d24) {\n                                                // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n                                                if (0x10ae5 <= code && code <= 0x10ae6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10eab) {\n                                                    // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n                                                    if (0x10d24 <= code && code <= 0x10d27) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n                                                    if (0x10eab <= code && code <= 0x10eac) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10f46) {\n                                                // Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n                                                if (0x10efd <= code && code <= 0x10eff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10f82) {\n                                                    // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n                                                    if (0x10f46 <= code && code <= 0x10f50) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n                                                    if (0x10f82 <= code && code <= 0x10f85) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x11180) {\n                                if (code < 0x110b7) {\n                                    if (code < 0x11073) {\n                                        if (code < 0x11002) {\n                                            // Mc       BRAHMI SIGN CANDRABINDU\n                                            if (0x11000 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BRAHMI SIGN ANUSVARA\n                                            if (0x11001 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11038) {\n                                                // Mc       BRAHMI SIGN VISARGA\n                                                if (0x11002 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11070) {\n                                                    // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n                                                    if (0x11038 <= code && code <= 0x11046) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BRAHMI SIGN OLD TAMIL VIRAMA\n                                                    if (0x11070 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11082) {\n                                            if (code < 0x1107f) {\n                                                // Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n                                                if (0x11073 <= code && code <= 0x11074) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n                                                if (0x1107f <= code && code <= 0x11081) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110b0) {\n                                                // Mc       KAITHI SIGN VISARGA\n                                                if (0x11082 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x110b3) {\n                                                    // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n                                                    if (0x110b0 <= code && code <= 0x110b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n                                                    if (0x110b3 <= code && code <= 0x110b6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11100) {\n                                        if (code < 0x110bd) {\n                                            if (code < 0x110b9) {\n                                                // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n                                                if (0x110b7 <= code && code <= 0x110b8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n                                                if (0x110b9 <= code && code <= 0x110ba) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110c2) {\n                                                // Cf       KAITHI NUMBER SIGN\n                                                if (0x110bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KAITHI VOWEL SIGN VOCALIC R\n                                                if (0x110c2 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Cf       KAITHI NUMBER SIGN ABOVE\n                                                if (0x110cd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1112d) {\n                                            if (code < 0x11127) {\n                                                // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n                                                if (0x11100 <= code && code <= 0x11102) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1112c) {\n                                                    // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n                                                    if (0x11127 <= code && code <= 0x1112b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       CHAKMA VOWEL SIGN E\n                                                    if (0x1112c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11145) {\n                                                // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n                                                if (0x1112d <= code && code <= 0x11134) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11173) {\n                                                    // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n                                                    if (0x11145 <= code && code <= 0x11146) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MAHAJANI SIGN NUKTA\n                                                    if (0x11173 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11232) {\n                                    if (code < 0x111c2) {\n                                        if (code < 0x111b3) {\n                                            if (code < 0x11182) {\n                                                // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n                                                if (0x11180 <= code && code <= 0x11181) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SHARADA SIGN VISARGA\n                                                if (0x11182 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x111b6) {\n                                                // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n                                                if (0x111b3 <= code && code <= 0x111b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111bf) {\n                                                    // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n                                                    if (0x111b6 <= code && code <= 0x111be) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n                                                    if (0x111bf <= code && code <= 0x111c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x111cf) {\n                                            if (code < 0x111c9) {\n                                                // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n                                                if (0x111c2 <= code && code <= 0x111c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111ce) {\n                                                    // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n                                                    if (0x111c9 <= code && code <= 0x111cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n                                                    if (0x111ce === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1122c) {\n                                                // Mn       SHARADA SIGN INVERTED CANDRABINDU\n                                                if (0x111cf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1122f) {\n                                                    // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n                                                    if (0x1122c <= code && code <= 0x1122e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n                                                    if (0x1122f <= code && code <= 0x11231) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11241) {\n                                        if (code < 0x11235) {\n                                            if (code < 0x11234) {\n                                                // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n                                                if (0x11232 <= code && code <= 0x11233) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHOJKI SIGN ANUSVARA\n                                                if (0x11234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11236) {\n                                                // Mc       KHOJKI SIGN VIRAMA\n                                                if (0x11235 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1123e) {\n                                                    // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n                                                    if (0x11236 <= code && code <= 0x11237) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHOJKI SIGN SUKUN\n                                                    if (0x1123e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x112e3) {\n                                            if (code < 0x112df) {\n                                                // Mn       KHOJKI VOWEL SIGN VOCALIC R\n                                                if (0x11241 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x112e0) {\n                                                    // Mn       KHUDAWADI SIGN ANUSVARA\n                                                    if (0x112df === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n                                                    if (0x112e0 <= code && code <= 0x112e2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11300) {\n                                                // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n                                                if (0x112e3 <= code && code <= 0x112ea) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11302) {\n                                                    // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n                                                    if (0x11300 <= code && code <= 0x11301) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n                                                    if (0x11302 <= code && code <= 0x11303) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x11a97) {\n                        if (code < 0x116ab) {\n                            if (code < 0x114b9) {\n                                if (code < 0x11370) {\n                                    if (code < 0x11347) {\n                                        if (code < 0x1133f) {\n                                            if (code < 0x1133e) {\n                                                // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n                                                if (0x1133b <= code && code <= 0x1133c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GRANTHA VOWEL SIGN AA\n                                                if (0x1133e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11340) {\n                                                // Mc       GRANTHA VOWEL SIGN I\n                                                if (0x1133f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11341) {\n                                                    // Mn       GRANTHA VOWEL SIGN II\n                                                    if (0x11340 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n                                                    if (0x11341 <= code && code <= 0x11344) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11357) {\n                                            if (code < 0x1134b) {\n                                                // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n                                                if (0x11347 <= code && code <= 0x11348) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n                                                if (0x1134b <= code && code <= 0x1134d) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11362) {\n                                                // Mc       GRANTHA AU LENGTH MARK\n                                                if (0x11357 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11366) {\n                                                    // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n                                                    if (0x11362 <= code && code <= 0x11363) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n                                                    if (0x11366 <= code && code <= 0x1136c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11445) {\n                                        if (code < 0x11438) {\n                                            if (code < 0x11435) {\n                                                // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n                                                if (0x11370 <= code && code <= 0x11374) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n                                                if (0x11435 <= code && code <= 0x11437) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11440) {\n                                                // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n                                                if (0x11438 <= code && code <= 0x1143f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11442) {\n                                                    // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n                                                    if (0x11440 <= code && code <= 0x11441) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n                                                    if (0x11442 <= code && code <= 0x11444) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x114b0) {\n                                            if (code < 0x11446) {\n                                                // Mc       NEWA SIGN VISARGA\n                                                if (0x11445 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NEWA SIGN NUKTA\n                                                if (0x11446 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       NEWA SANDHI MARK\n                                                if (0x1145e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114b1) {\n                                                // Mc       TIRHUTA VOWEL SIGN AA\n                                                if (0x114b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114b3) {\n                                                    // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n                                                    if (0x114b1 <= code && code <= 0x114b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n                                                    if (0x114b3 <= code && code <= 0x114b8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x115b8) {\n                                    if (code < 0x114bf) {\n                                        if (code < 0x114bb) {\n                                            // Mc       TIRHUTA VOWEL SIGN E\n                                            if (0x114b9 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TIRHUTA VOWEL SIGN SHORT E\n                                            if (0x114ba === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114bd) {\n                                                // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n                                                if (0x114bb <= code && code <= 0x114bc) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       TIRHUTA VOWEL SIGN SHORT O\n                                                if (0x114bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TIRHUTA VOWEL SIGN AU\n                                                if (0x114be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x115af) {\n                                            if (code < 0x114c1) {\n                                                // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n                                                if (0x114bf <= code && code <= 0x114c0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114c2) {\n                                                    // Mc       TIRHUTA SIGN VISARGA\n                                                    if (0x114c1 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n                                                    if (0x114c2 <= code && code <= 0x114c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115b0) {\n                                                // Mc       SIDDHAM VOWEL SIGN AA\n                                                if (0x115af === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115b2) {\n                                                    // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n                                                    if (0x115b0 <= code && code <= 0x115b1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n                                                    if (0x115b2 <= code && code <= 0x115b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11630) {\n                                        if (code < 0x115be) {\n                                            if (code < 0x115bc) {\n                                                // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n                                                if (0x115b8 <= code && code <= 0x115bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n                                                if (0x115bc <= code && code <= 0x115bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115bf) {\n                                                // Mc       SIDDHAM SIGN VISARGA\n                                                if (0x115be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115dc) {\n                                                    // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n                                                    if (0x115bf <= code && code <= 0x115c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n                                                    if (0x115dc <= code && code <= 0x115dd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1163d) {\n                                            if (code < 0x11633) {\n                                                // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n                                                if (0x11630 <= code && code <= 0x11632) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163b) {\n                                                    // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n                                                    if (0x11633 <= code && code <= 0x1163a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n                                                    if (0x1163b <= code && code <= 0x1163c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1163e) {\n                                                // Mn       MODI SIGN ANUSVARA\n                                                if (0x1163d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163f) {\n                                                    // Mc       MODI SIGN VISARGA\n                                                    if (0x1163e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n                                                    if (0x1163f <= code && code <= 0x11640) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1193f) {\n                                if (code < 0x11727) {\n                                    if (code < 0x116b6) {\n                                        if (code < 0x116ad) {\n                                            // Mn       TAKRI SIGN ANUSVARA\n                                            if (0x116ab === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAKRI SIGN VISARGA\n                                            if (0x116ac === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x116ae) {\n                                                // Mn       TAKRI VOWEL SIGN AA\n                                                if (0x116ad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x116b0) {\n                                                    // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n                                                    if (0x116ae <= code && code <= 0x116af) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n                                                    if (0x116b0 <= code && code <= 0x116b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1171d) {\n                                            // Mc       TAKRI SIGN VIRAMA\n                                            if (0x116b6 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TAKRI SIGN NUKTA\n                                            if (0x116b7 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11722) {\n                                                // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n                                                if (0x1171d <= code && code <= 0x1171f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11726) {\n                                                    // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n                                                    if (0x11722 <= code && code <= 0x11725) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       AHOM VOWEL SIGN E\n                                                    if (0x11726 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11930) {\n                                        if (code < 0x1182f) {\n                                            if (code < 0x1182c) {\n                                                // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n                                                if (0x11727 <= code && code <= 0x1172b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n                                                if (0x1182c <= code && code <= 0x1182e) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11838) {\n                                                // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n                                                if (0x1182f <= code && code <= 0x11837) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11839) {\n                                                    // Mc       DOGRA SIGN VISARGA\n                                                    if (0x11838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n                                                    if (0x11839 <= code && code <= 0x1183a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1193b) {\n                                            if (code < 0x11931) {\n                                                // Mc       DIVES AKURU VOWEL SIGN AA\n                                                if (0x11930 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11937) {\n                                                    // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n                                                    if (0x11931 <= code && code <= 0x11935) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n                                                    if (0x11937 <= code && code <= 0x11938) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1193d) {\n                                                // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n                                                if (0x1193b <= code && code <= 0x1193c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU SIGN HALANTA\n                                                if (0x1193d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU VIRAMA\n                                                if (0x1193e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11a01) {\n                                    if (code < 0x119d1) {\n                                        if (code < 0x11941) {\n                                            // Lo       DIVES AKURU PREFIXED NASAL SIGN\n                                            if (0x1193f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       DIVES AKURU MEDIAL YA\n                                            if (0x11940 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11942) {\n                                                // Lo       DIVES AKURU INITIAL RA\n                                                if (0x11941 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU MEDIAL RA\n                                                if (0x11942 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU SIGN NUKTA\n                                                if (0x11943 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x119dc) {\n                                            if (code < 0x119d4) {\n                                                // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n                                                if (0x119d1 <= code && code <= 0x119d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x119da) {\n                                                    // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n                                                    if (0x119d4 <= code && code <= 0x119d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n                                                    if (0x119da <= code && code <= 0x119db) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x119e0) {\n                                                // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n                                                if (0x119dc <= code && code <= 0x119df) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NANDINAGARI SIGN VIRAMA\n                                                if (0x119e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n                                                if (0x119e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11a47) {\n                                        if (code < 0x11a39) {\n                                            if (code < 0x11a33) {\n                                                // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n                                                if (0x11a01 <= code && code <= 0x11a0a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n                                                if (0x11a33 <= code && code <= 0x11a38) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a3a) {\n                                                // Mc       ZANABAZAR SQUARE SIGN VISARGA\n                                                if (0x11a39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a3b) {\n                                                    // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n                                                    if (0x11a3a === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n                                                    if (0x11a3b <= code && code <= 0x11a3e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11a59) {\n                                            if (code < 0x11a51) {\n                                                // Mn       ZANABAZAR SQUARE SUBJOINER\n                                                if (0x11a47 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a57) {\n                                                    // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n                                                    if (0x11a51 <= code && code <= 0x11a56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n                                                    if (0x11a57 <= code && code <= 0x11a58) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a84) {\n                                                // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n                                                if (0x11a59 <= code && code <= 0x11a5b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8a) {\n                                                    // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n                                                    if (0x11a84 <= code && code <= 0x11a89) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n                                                    if (0x11a8a <= code && code <= 0x11a96) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x16f51) {\n                            if (code < 0x11d90) {\n                                if (code < 0x11cb1) {\n                                    if (code < 0x11c3e) {\n                                        if (code < 0x11c2f) {\n                                            if (code < 0x11a98) {\n                                                // Mc       SOYOMBO SIGN VISARGA\n                                                if (0x11a97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n                                                if (0x11a98 <= code && code <= 0x11a99) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11c30) {\n                                                // Mc       BHAIKSUKI VOWEL SIGN AA\n                                                if (0x11c2f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11c38) {\n                                                    // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n                                                    if (0x11c30 <= code && code <= 0x11c36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n                                                    if (0x11c38 <= code && code <= 0x11c3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11c92) {\n                                            // Mc       BHAIKSUKI SIGN VISARGA\n                                            if (0x11c3e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BHAIKSUKI SIGN VIRAMA\n                                            if (0x11c3f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11ca9) {\n                                                // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n                                                if (0x11c92 <= code && code <= 0x11ca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11caa) {\n                                                    // Mc       MARCHEN SUBJOINED LETTER YA\n                                                    if (0x11ca9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n                                                    if (0x11caa <= code && code <= 0x11cb0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11d3a) {\n                                        if (code < 0x11cb4) {\n                                            if (code < 0x11cb2) {\n                                                // Mc       MARCHEN VOWEL SIGN I\n                                                if (0x11cb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n                                                if (0x11cb2 <= code && code <= 0x11cb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11cb5) {\n                                                // Mc       MARCHEN VOWEL SIGN O\n                                                if (0x11cb4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d31) {\n                                                    // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n                                                    if (0x11cb5 <= code && code <= 0x11cb6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n                                                    if (0x11d31 <= code && code <= 0x11d36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11d46) {\n                                            if (code < 0x11d3c) {\n                                                // Mn       MASARAM GONDI VOWEL SIGN E\n                                                if (0x11d3a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d3f) {\n                                                    // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n                                                    if (0x11d3c <= code && code <= 0x11d3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n                                                    if (0x11d3f <= code && code <= 0x11d45) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d47) {\n                                                // Lo       MASARAM GONDI REPHA\n                                                if (0x11d46 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d8a) {\n                                                    // Mn       MASARAM GONDI RA-KARA\n                                                    if (0x11d47 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n                                                    if (0x11d8a <= code && code <= 0x11d8e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11f36) {\n                                    if (code < 0x11ef3) {\n                                        if (code < 0x11d95) {\n                                            if (code < 0x11d93) {\n                                                // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n                                                if (0x11d90 <= code && code <= 0x11d91) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n                                                if (0x11d93 <= code && code <= 0x11d94) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d96) {\n                                                // Mn       GUNJALA GONDI SIGN ANUSVARA\n                                                if (0x11d95 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GUNJALA GONDI SIGN VISARGA\n                                                if (0x11d96 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       GUNJALA GONDI VIRAMA\n                                                if (0x11d97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11f02) {\n                                            if (code < 0x11ef5) {\n                                                // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n                                                if (0x11ef3 <= code && code <= 0x11ef4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f00) {\n                                                    // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n                                                    if (0x11ef5 <= code && code <= 0x11ef6) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n                                                    if (0x11f00 <= code && code <= 0x11f01) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f03) {\n                                                // Lo       KAWI SIGN REPHA\n                                                if (0x11f02 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f34) {\n                                                    // Mc       KAWI SIGN VISARGA\n                                                    if (0x11f03 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n                                                    if (0x11f34 <= code && code <= 0x11f35) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x13430) {\n                                        if (code < 0x11f40) {\n                                            if (code < 0x11f3e) {\n                                                // Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n                                                if (0x11f36 <= code && code <= 0x11f3a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n                                                if (0x11f3e <= code && code <= 0x11f3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f41) {\n                                                // Mn       KAWI VOWEL SIGN EU\n                                                if (0x11f40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       KAWI SIGN KILLER\n                                                if (0x11f41 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       KAWI CONJOINER\n                                                if (0x11f42 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x16af0) {\n                                            if (code < 0x13440) {\n                                                // Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n                                                if (0x13430 <= code && code <= 0x1343f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x13447) {\n                                                    // Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n                                                    if (0x13440 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n                                                    if (0x13447 <= code && code <= 0x13455) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16b30) {\n                                                // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n                                                if (0x16af0 <= code && code <= 0x16af4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x16f4f) {\n                                                    // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n                                                    if (0x16b30 <= code && code <= 0x16b36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n                                                    if (0x16f4f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1da84) {\n                                if (code < 0x1d167) {\n                                    if (code < 0x1bca0) {\n                                        if (code < 0x16fe4) {\n                                            if (code < 0x16f8f) {\n                                                // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n                                                if (0x16f51 <= code && code <= 0x16f87) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n                                                if (0x16f8f <= code && code <= 0x16f92) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16ff0) {\n                                                // Mn       KHITAN SMALL SCRIPT FILLER\n                                                if (0x16fe4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bc9d) {\n                                                    // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n                                                    if (0x16ff0 <= code && code <= 0x16ff1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n                                                    if (0x1bc9d <= code && code <= 0x1bc9e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1cf30) {\n                                            if (code < 0x1cf00) {\n                                                // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n                                                if (0x1bca0 <= code && code <= 0x1bca3) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [46] ZNAMENNY COMBINING MARK GORAZDO NIZKO S KRYZHEM ON LEFT..ZNAMENNY COMBINING MARK KRYZH ON LEFT\n                                                if (0x1cf00 <= code && code <= 0x1cf2d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d165) {\n                                                // Mn  [23] ZNAMENNY COMBINING TONAL RANGE MARK MRACHNO..ZNAMENNY PRIZNAK MODIFIER ROG\n                                                if (0x1cf30 <= code && code <= 0x1cf46) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING STEM\n                                                if (0x1d165 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n                                                if (0x1d166 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1d185) {\n                                        if (code < 0x1d16e) {\n                                            if (code < 0x1d16d) {\n                                                // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n                                                if (0x1d167 <= code && code <= 0x1d169) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n                                                if (0x1d16d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d173) {\n                                                // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n                                                if (0x1d16e <= code && code <= 0x1d172) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d17b) {\n                                                    // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n                                                    if (0x1d173 <= code && code <= 0x1d17a) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n                                                    if (0x1d17b <= code && code <= 0x1d182) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1da00) {\n                                            if (code < 0x1d1aa) {\n                                                // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n                                                if (0x1d185 <= code && code <= 0x1d18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d242) {\n                                                    // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n                                                    if (0x1d1aa <= code && code <= 0x1d1ad) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n                                                    if (0x1d242 <= code && code <= 0x1d244) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1da3b) {\n                                                // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n                                                if (0x1da00 <= code && code <= 0x1da36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1da75) {\n                                                    // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n                                                    if (0x1da3b <= code && code <= 0x1da6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n                                                    if (0x1da75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1e2ec) {\n                                    if (code < 0x1e01b) {\n                                        if (code < 0x1daa1) {\n                                            if (code < 0x1da9b) {\n                                                // Mn       SIGNWRITING LOCATION HEAD NECK\n                                                if (0x1da84 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n                                                if (0x1da9b <= code && code <= 0x1da9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e000) {\n                                                // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n                                                if (0x1daa1 <= code && code <= 0x1daaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e008) {\n                                                    // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n                                                    if (0x1e000 <= code && code <= 0x1e006) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n                                                    if (0x1e008 <= code && code <= 0x1e018) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1e08f) {\n                                            if (code < 0x1e023) {\n                                                // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n                                                if (0x1e01b <= code && code <= 0x1e021) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e026) {\n                                                    // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n                                                    if (0x1e023 <= code && code <= 0x1e024) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n                                                    if (0x1e026 <= code && code <= 0x1e02a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e130) {\n                                                // Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n                                                if (0x1e08f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e2ae) {\n                                                    // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n                                                    if (0x1e130 <= code && code <= 0x1e136) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TOTO SIGN RISING TONE\n                                                    if (0x1e2ae === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1f3fb) {\n                                        if (code < 0x1e8d0) {\n                                            if (code < 0x1e4ec) {\n                                                // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n                                                if (0x1e2ec <= code && code <= 0x1e2ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n                                                if (0x1e4ec <= code && code <= 0x1e4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e944) {\n                                                // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n                                                if (0x1e8d0 <= code && code <= 0x1e8d6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1f1e6) {\n                                                    // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n                                                    if (0x1e944 <= code && code <= 0x1e94a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n                                                    if (0x1f1e6 <= code && code <= 0x1f1ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xe0080) {\n                                            if (code < 0xe0000) {\n                                                // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n                                                if (0x1f3fb <= code && code <= 0x1f3ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe0020) {\n                                                    // Cn       <reserved-E0000>\n                                                    // Cf       LANGUAGE TAG\n                                                    // Cn  [30] <reserved-E0002>..<reserved-E001F>\n                                                    if (0xe0000 <= code && code <= 0xe001f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf  [96] TAG SPACE..CANCEL TAG\n                                                    if (0xe0020 <= code && code <= 0xe007f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe0100) {\n                                                // Cn [128] <reserved-E0080>..<reserved-E00FF>\n                                                if (0xe0080 <= code && code <= 0xe00ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe01f0) {\n                                                    // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n                                                    if (0xe0100 <= code && code <= 0xe01ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n                                                    if (0xe01f0 <= code && code <= 0xe0fff) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n    /**\n     * Given a Unicode code point, returns if symbol is an extended pictographic or some other break\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getEmojiProperty(code) {\n        // emoji property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt\n        // and generated by\n        // node ./scripts/generate-emoji-extended-pictographic.js\n        if (code < 0x27b0) {\n            if (code < 0x2600) {\n                if (code < 0x2328) {\n                    if (code < 0x2122) {\n                        if (code < 0x203c) {\n                            // E0.6   [1] (\u00A9\uFE0F)       copyright\n                            if (0xa9 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u00AE\uFE0F)       registered\n                            if (0xae === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            // E0.6   [1] (\u203C\uFE0F)       double exclamation mark\n                            if (0x203c === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2049\uFE0F)       exclamation question mark\n                            if (0x2049 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2194) {\n                            // E0.6   [1] (\u2122\uFE0F)       trade mark\n                            if (0x2122 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2139\uFE0F)       information\n                            if (0x2139 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x21a9) {\n                                // E0.6   [6] (\u2194\uFE0F..\u2199\uFE0F)    left-right arrow..down-left arrow\n                                if (0x2194 <= code && code <= 0x2199) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x231a) {\n                                    // E0.6   [2] (\u21A9\uFE0F..\u21AA\uFE0F)    right arrow curving left..left arrow curving right\n                                    if (0x21a9 <= code && code <= 0x21aa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [2] (\u231A..\u231B)    watch..hourglass done\n                                    if (0x231a <= code && code <= 0x231b) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x24c2) {\n                        if (code < 0x23cf) {\n                            // E1.0   [1] (\u2328\uFE0F)       keyboard\n                            if (0x2328 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.0   [1] (\u2388)       HELM SYMBOL\n                            if (0x2388 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x23e9) {\n                                // E1.0   [1] (\u23CF\uFE0F)       eject button\n                                if (0x23cf === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x23f8) {\n                                    // E0.6   [4] (\u23E9..\u23EC)    fast-forward button..fast down button\n                                    // E0.7   [2] (\u23ED\uFE0F..\u23EE\uFE0F)    next track button..last track button\n                                    // E1.0   [1] (\u23EF\uFE0F)       play or pause button\n                                    // E0.6   [1] (\u23F0)       alarm clock\n                                    // E1.0   [2] (\u23F1\uFE0F..\u23F2\uFE0F)    stopwatch..timer clock\n                                    // E0.6   [1] (\u23F3)       hourglass not done\n                                    if (0x23e9 <= code && code <= 0x23f3) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.7   [3] (\u23F8\uFE0F..\u23FA\uFE0F)    pause button..record button\n                                    if (0x23f8 <= code && code <= 0x23fa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x25b6) {\n                            if (code < 0x25aa) {\n                                // E0.6   [1] (\u24C2\uFE0F)       circled M\n                                if (0x24c2 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\u25AA\uFE0F..\u25AB\uFE0F)    black small square..white small square\n                                if (0x25aa <= code && code <= 0x25ab) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x25c0) {\n                                // E0.6   [1] (\u25B6\uFE0F)       play button\n                                if (0x25b6 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x25fb) {\n                                    // E0.6   [1] (\u25C0\uFE0F)       reverse button\n                                    if (0x25c0 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [4] (\u25FB\uFE0F..\u25FE)    white medium square..black medium-small square\n                                    if (0x25fb <= code && code <= 0x25fe) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x2733) {\n                    if (code < 0x2714) {\n                        if (code < 0x2614) {\n                            if (code < 0x2607) {\n                                // E0.6   [2] (\u2600\uFE0F..\u2601\uFE0F)    sun..cloud\n                                // E0.7   [2] (\u2602\uFE0F..\u2603\uFE0F)    umbrella..snowman\n                                // E1.0   [1] (\u2604\uFE0F)       comet\n                                // E0.0   [1] (\u2605)       BLACK STAR\n                                if (0x2600 <= code && code <= 0x2605) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [7] (\u2607..\u260D)    LIGHTNING..OPPOSITION\n                                // E0.6   [1] (\u260E\uFE0F)       telephone\n                                // E0.0   [2] (\u260F..\u2610)    WHITE TELEPHONE..BALLOT BOX\n                                // E0.6   [1] (\u2611\uFE0F)       check box with check\n                                // E0.0   [1] (\u2612)       BALLOT BOX WITH X\n                                if (0x2607 <= code && code <= 0x2612) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2690) {\n                                // E0.6   [2] (\u2614..\u2615)    umbrella with rain drops..hot beverage\n                                // E0.0   [2] (\u2616..\u2617)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n                                // E1.0   [1] (\u2618\uFE0F)       shamrock\n                                // E0.0   [4] (\u2619..\u261C)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n                                // E0.6   [1] (\u261D\uFE0F)       index pointing up\n                                // E0.0   [2] (\u261E..\u261F)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n                                // E1.0   [1] (\u2620\uFE0F)       skull and crossbones\n                                // E0.0   [1] (\u2621)       CAUTION SIGN\n                                // E1.0   [2] (\u2622\uFE0F..\u2623\uFE0F)    radioactive..biohazard\n                                // E0.0   [2] (\u2624..\u2625)    CADUCEUS..ANKH\n                                // E1.0   [1] (\u2626\uFE0F)       orthodox cross\n                                // E0.0   [3] (\u2627..\u2629)    CHI RHO..CROSS OF JERUSALEM\n                                // E0.7   [1] (\u262A\uFE0F)       star and crescent\n                                // E0.0   [3] (\u262B..\u262D)    FARSI SYMBOL..HAMMER AND SICKLE\n                                // E1.0   [1] (\u262E\uFE0F)       peace symbol\n                                // E0.7   [1] (\u262F\uFE0F)       yin yang\n                                // E0.0   [8] (\u2630..\u2637)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n                                // E0.7   [2] (\u2638\uFE0F..\u2639\uFE0F)    wheel of dharma..frowning face\n                                // E0.6   [1] (\u263A\uFE0F)       smiling face\n                                // E0.0   [5] (\u263B..\u263F)    BLACK SMILING FACE..MERCURY\n                                // E4.0   [1] (\u2640\uFE0F)       female sign\n                                // E0.0   [1] (\u2641)       EARTH\n                                // E4.0   [1] (\u2642\uFE0F)       male sign\n                                // E0.0   [5] (\u2643..\u2647)    JUPITER..PLUTO\n                                // E0.6  [12] (\u2648..\u2653)    Aries..Pisces\n                                // E0.0  [11] (\u2654..\u265E)    WHITE CHESS KING..BLACK CHESS KNIGHT\n                                // E11.0  [1] (\u265F\uFE0F)       chess pawn\n                                // E0.6   [1] (\u2660\uFE0F)       spade suit\n                                // E0.0   [2] (\u2661..\u2662)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n                                // E0.6   [1] (\u2663\uFE0F)       club suit\n                                // E0.0   [1] (\u2664)       WHITE SPADE SUIT\n                                // E0.6   [2] (\u2665\uFE0F..\u2666\uFE0F)    heart suit..diamond suit\n                                // E0.0   [1] (\u2667)       WHITE CLUB SUIT\n                                // E0.6   [1] (\u2668\uFE0F)       hot springs\n                                // E0.0  [18] (\u2669..\u267A)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n                                // E0.6   [1] (\u267B\uFE0F)       recycling symbol\n                                // E0.0   [2] (\u267C..\u267D)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n                                // E11.0  [1] (\u267E\uFE0F)       infinity\n                                // E0.6   [1] (\u267F)       wheelchair symbol\n                                // E0.0   [6] (\u2680..\u2685)    DIE FACE-1..DIE FACE-6\n                                if (0x2614 <= code && code <= 0x2685) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x2708) {\n                                    // E0.0   [2] (\u2690..\u2691)    WHITE FLAG..BLACK FLAG\n                                    // E1.0   [1] (\u2692\uFE0F)       hammer and pick\n                                    // E0.6   [1] (\u2693)       anchor\n                                    // E1.0   [1] (\u2694\uFE0F)       crossed swords\n                                    // E4.0   [1] (\u2695\uFE0F)       medical symbol\n                                    // E1.0   [2] (\u2696\uFE0F..\u2697\uFE0F)    balance scale..alembic\n                                    // E0.0   [1] (\u2698)       FLOWER\n                                    // E1.0   [1] (\u2699\uFE0F)       gear\n                                    // E0.0   [1] (\u269A)       STAFF OF HERMES\n                                    // E1.0   [2] (\u269B\uFE0F..\u269C\uFE0F)    atom symbol..fleur-de-lis\n                                    // E0.0   [3] (\u269D..\u269F)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n                                    // E0.6   [2] (\u26A0\uFE0F..\u26A1)    warning..high voltage\n                                    // E0.0   [5] (\u26A2..\u26A6)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n                                    // E13.0  [1] (\u26A7\uFE0F)       transgender symbol\n                                    // E0.0   [2] (\u26A8..\u26A9)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n                                    // E0.6   [2] (\u26AA..\u26AB)    white circle..black circle\n                                    // E0.0   [4] (\u26AC..\u26AF)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n                                    // E1.0   [2] (\u26B0\uFE0F..\u26B1\uFE0F)    coffin..funeral urn\n                                    // E0.0  [11] (\u26B2..\u26BC)    NEUTER..SESQUIQUADRATE\n                                    // E0.6   [2] (\u26BD..\u26BE)    soccer ball..baseball\n                                    // E0.0   [5] (\u26BF..\u26C3)    SQUARED KEY..BLACK DRAUGHTS KING\n                                    // E0.6   [2] (\u26C4..\u26C5)    snowman without snow..sun behind cloud\n                                    // E0.0   [2] (\u26C6..\u26C7)    RAIN..BLACK SNOWMAN\n                                    // E0.7   [1] (\u26C8\uFE0F)       cloud with lightning and rain\n                                    // E0.0   [5] (\u26C9..\u26CD)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n                                    // E0.6   [1] (\u26CE)       Ophiuchus\n                                    // E0.7   [1] (\u26CF\uFE0F)       pick\n                                    // E0.0   [1] (\u26D0)       CAR SLIDING\n                                    // E0.7   [1] (\u26D1\uFE0F)       rescue worker\u2019s helmet\n                                    // E0.0   [1] (\u26D2)       CIRCLED CROSSING LANES\n                                    // E0.7   [1] (\u26D3\uFE0F)       chains\n                                    // E0.6   [1] (\u26D4)       no entry\n                                    // E0.0  [20] (\u26D5..\u26E8)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n                                    // E0.7   [1] (\u26E9\uFE0F)       shinto shrine\n                                    // E0.6   [1] (\u26EA)       church\n                                    // E0.0   [5] (\u26EB..\u26EF)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n                                    // E0.7   [2] (\u26F0\uFE0F..\u26F1\uFE0F)    mountain..umbrella on ground\n                                    // E0.6   [2] (\u26F2..\u26F3)    fountain..flag in hole\n                                    // E0.7   [1] (\u26F4\uFE0F)       ferry\n                                    // E0.6   [1] (\u26F5)       sailboat\n                                    // E0.0   [1] (\u26F6)       SQUARE FOUR CORNERS\n                                    // E0.7   [3] (\u26F7\uFE0F..\u26F9\uFE0F)    skier..person bouncing ball\n                                    // E0.6   [1] (\u26FA)       tent\n                                    // E0.0   [2] (\u26FB..\u26FC)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n                                    // E0.6   [1] (\u26FD)       fuel pump\n                                    // E0.0   [4] (\u26FE..\u2701)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n                                    // E0.6   [1] (\u2702\uFE0F)       scissors\n                                    // E0.0   [2] (\u2703..\u2704)    LOWER BLADE SCISSORS..WHITE SCISSORS\n                                    // E0.6   [1] (\u2705)       check mark button\n                                    if (0x2690 <= code && code <= 0x2705) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [5] (\u2708\uFE0F..\u270C\uFE0F)    airplane..victory hand\n                                    // E0.7   [1] (\u270D\uFE0F)       writing hand\n                                    // E0.0   [1] (\u270E)       LOWER RIGHT PENCIL\n                                    // E0.6   [1] (\u270F\uFE0F)       pencil\n                                    // E0.0   [2] (\u2710..\u2711)    UPPER RIGHT PENCIL..WHITE NIB\n                                    // E0.6   [1] (\u2712\uFE0F)       black nib\n                                    if (0x2708 <= code && code <= 0x2712) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x271d) {\n                            // E0.6   [1] (\u2714\uFE0F)       check mark\n                            if (0x2714 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2716\uFE0F)       multiply\n                            if (0x2716 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2721) {\n                                // E0.7   [1] (\u271D\uFE0F)       latin cross\n                                if (0x271d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.7   [1] (\u2721\uFE0F)       star of David\n                                if (0x2721 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u2728)       sparkles\n                                if (0x2728 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x2753) {\n                        if (code < 0x2747) {\n                            if (code < 0x2744) {\n                                // E0.6   [2] (\u2733\uFE0F..\u2734\uFE0F)    eight-spoked asterisk..eight-pointed star\n                                if (0x2733 <= code && code <= 0x2734) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2744\uFE0F)       snowflake\n                                if (0x2744 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x274c) {\n                                // E0.6   [1] (\u2747\uFE0F)       sparkle\n                                if (0x2747 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u274C)       cross mark\n                                if (0x274c === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u274E)       cross mark button\n                                if (0x274e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2763) {\n                            if (code < 0x2757) {\n                                // E0.6   [3] (\u2753..\u2755)    red question mark..white exclamation mark\n                                if (0x2753 <= code && code <= 0x2755) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2757)       red exclamation mark\n                                if (0x2757 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2795) {\n                                // E1.0   [1] (\u2763\uFE0F)       heart exclamation\n                                // E0.6   [1] (\u2764\uFE0F)       red heart\n                                // E0.0   [3] (\u2765..\u2767)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n                                if (0x2763 <= code && code <= 0x2767) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x27a1) {\n                                    // E0.6   [3] (\u2795..\u2797)    plus..divide\n                                    if (0x2795 <= code && code <= 0x2797) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [1] (\u27A1\uFE0F)       right arrow\n                                    if (0x27a1 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0x1f201) {\n                if (code < 0x3297) {\n                    if (code < 0x2b1b) {\n                        if (code < 0x2934) {\n                            // E0.6   [1] (\u27B0)       curly loop\n                            if (0x27b0 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E1.0   [1] (\u27BF)       double curly loop\n                            if (0x27bf === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2b05) {\n                                // E0.6   [2] (\u2934\uFE0F..\u2935\uFE0F)    right arrow curving up..right arrow curving down\n                                if (0x2934 <= code && code <= 0x2935) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [3] (\u2B05\uFE0F..\u2B07\uFE0F)    left arrow..down arrow\n                                if (0x2b05 <= code && code <= 0x2b07) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2b55) {\n                            if (code < 0x2b50) {\n                                // E0.6   [2] (\u2B1B..\u2B1C)    black large square..white large square\n                                if (0x2b1b <= code && code <= 0x2b1c) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2B50)       star\n                                if (0x2b50 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x3030) {\n                                // E0.6   [1] (\u2B55)       hollow red circle\n                                if (0x2b55 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u3030\uFE0F)       wavy dash\n                                if (0x3030 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u303D\uFE0F)       part alternation mark\n                                if (0x303d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f16c) {\n                        if (code < 0x1f000) {\n                            // E0.6   [1] (\u3297\uFE0F)       Japanese \u201Ccongratulations\u201D button\n                            if (0x3297 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u3299\uFE0F)       Japanese \u201Csecret\u201D button\n                            if (0x3299 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x1f10d) {\n                                // E0.0   [4] (\uD83C\uDC00..\uD83C\uDC03)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n                                // E0.6   [1] (\uD83C\uDC04)       mahjong red dragon\n                                // E0.0 [202] (\uD83C\uDC05..\uD83C\uDCCE)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n                                // E0.6   [1] (\uD83C\uDCCF)       joker\n                                // E0.0  [48] (\uD83C\uDCD0..\uD83C\uDCFF)    <reserved-1F0D0>..<reserved-1F0FF>\n                                if (0x1f000 <= code && code <= 0x1f0ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f12f) {\n                                    // E0.0   [3] (\uD83C\uDD0D..\uD83C\uDD0F)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n                                    if (0x1f10d <= code && code <= 0x1f10f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [1] (\uD83C\uDD2F)       COPYLEFT SYMBOL\n                                    if (0x1f12f === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f18e) {\n                            if (code < 0x1f17e) {\n                                // E0.0   [4] (\uD83C\uDD6C..\uD83C\uDD6F)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n                                // E0.6   [2] (\uD83C\uDD70\uFE0F..\uD83C\uDD71\uFE0F)    A button (blood type)..B button (blood type)\n                                if (0x1f16c <= code && code <= 0x1f171) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\uD83C\uDD7E\uFE0F..\uD83C\uDD7F\uFE0F)    O button (blood type)..P button\n                                if (0x1f17e <= code && code <= 0x1f17f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f191) {\n                                // E0.6   [1] (\uD83C\uDD8E)       AB button (blood type)\n                                if (0x1f18e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f1ad) {\n                                    // E0.6  [10] (\uD83C\uDD91..\uD83C\uDD9A)    CL button..VS button\n                                    if (0x1f191 <= code && code <= 0x1f19a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [57] (\uD83C\uDDAD..\uD83C\uDDE5)    MASK WORK SYMBOL..<reserved-1F1E5>\n                                    if (0x1f1ad <= code && code <= 0x1f1e5) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1f7d5) {\n                    if (code < 0x1f249) {\n                        if (code < 0x1f22f) {\n                            if (code < 0x1f21a) {\n                                // E0.6   [2] (\uD83C\uDE01..\uD83C\uDE02\uFE0F)    Japanese \u201Chere\u201D button..Japanese \u201Cservice charge\u201D button\n                                // E0.0  [13] (\uD83C\uDE03..\uD83C\uDE0F)    <reserved-1F203>..<reserved-1F20F>\n                                if (0x1f201 <= code && code <= 0x1f20f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\uD83C\uDE1A)       Japanese \u201Cfree of charge\u201D button\n                                if (0x1f21a === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f232) {\n                                // E0.6   [1] (\uD83C\uDE2F)       Japanese \u201Creserved\u201D button\n                                if (0x1f22f === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f23c) {\n                                    // E0.6   [9] (\uD83C\uDE32..\uD83C\uDE3A)    Japanese \u201Cprohibited\u201D button..Japanese \u201Copen for business\u201D button\n                                    if (0x1f232 <= code && code <= 0x1f23a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [4] (\uD83C\uDE3C..\uD83C\uDE3F)    <reserved-1F23C>..<reserved-1F23F>\n                                    if (0x1f23c <= code && code <= 0x1f23f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f546) {\n                            if (code < 0x1f400) {\n                                // E0.0   [7] (\uD83C\uDE49..\uD83C\uDE4F)    <reserved-1F249>..<reserved-1F24F>\n                                // E0.6   [2] (\uD83C\uDE50..\uD83C\uDE51)    Japanese \u201Cbargain\u201D button..Japanese \u201Cacceptable\u201D button\n                                // E0.0 [174] (\uD83C\uDE52..\uD83C\uDEFF)    <reserved-1F252>..<reserved-1F2FF>\n                                // E0.6  [13] (\uD83C\uDF00..\uD83C\uDF0C)    cyclone..milky way\n                                // E0.7   [2] (\uD83C\uDF0D..\uD83C\uDF0E)    globe showing Europe-Africa..globe showing Americas\n                                // E0.6   [1] (\uD83C\uDF0F)       globe showing Asia-Australia\n                                // E1.0   [1] (\uD83C\uDF10)       globe with meridians\n                                // E0.6   [1] (\uD83C\uDF11)       new moon\n                                // E1.0   [1] (\uD83C\uDF12)       waxing crescent moon\n                                // E0.6   [3] (\uD83C\uDF13..\uD83C\uDF15)    first quarter moon..full moon\n                                // E1.0   [3] (\uD83C\uDF16..\uD83C\uDF18)    waning gibbous moon..waning crescent moon\n                                // E0.6   [1] (\uD83C\uDF19)       crescent moon\n                                // E1.0   [1] (\uD83C\uDF1A)       new moon face\n                                // E0.6   [1] (\uD83C\uDF1B)       first quarter moon face\n                                // E0.7   [1] (\uD83C\uDF1C)       last quarter moon face\n                                // E1.0   [2] (\uD83C\uDF1D..\uD83C\uDF1E)    full moon face..sun with face\n                                // E0.6   [2] (\uD83C\uDF1F..\uD83C\uDF20)    glowing star..shooting star\n                                // E0.7   [1] (\uD83C\uDF21\uFE0F)       thermometer\n                                // E0.0   [2] (\uD83C\uDF22..\uD83C\uDF23)    BLACK DROPLET..WHITE SUN\n                                // E0.7   [9] (\uD83C\uDF24\uFE0F..\uD83C\uDF2C\uFE0F)    sun behind small cloud..wind face\n                                // E1.0   [3] (\uD83C\uDF2D..\uD83C\uDF2F)    hot dog..burrito\n                                // E0.6   [2] (\uD83C\uDF30..\uD83C\uDF31)    chestnut..seedling\n                                // E1.0   [2] (\uD83C\uDF32..\uD83C\uDF33)    evergreen tree..deciduous tree\n                                // E0.6   [2] (\uD83C\uDF34..\uD83C\uDF35)    palm tree..cactus\n                                // E0.7   [1] (\uD83C\uDF36\uFE0F)       hot pepper\n                                // E0.6  [20] (\uD83C\uDF37..\uD83C\uDF4A)    tulip..tangerine\n                                // E1.0   [1] (\uD83C\uDF4B)       lemon\n                                // E0.6   [4] (\uD83C\uDF4C..\uD83C\uDF4F)    banana..green apple\n                                // E1.0   [1] (\uD83C\uDF50)       pear\n                                // E0.6  [43] (\uD83C\uDF51..\uD83C\uDF7B)    peach..clinking beer mugs\n                                // E1.0   [1] (\uD83C\uDF7C)       baby bottle\n                                // E0.7   [1] (\uD83C\uDF7D\uFE0F)       fork and knife with plate\n                                // E1.0   [2] (\uD83C\uDF7E..\uD83C\uDF7F)    bottle with popping cork..popcorn\n                                // E0.6  [20] (\uD83C\uDF80..\uD83C\uDF93)    ribbon..graduation cap\n                                // E0.0   [2] (\uD83C\uDF94..\uD83C\uDF95)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n                                // E0.7   [2] (\uD83C\uDF96\uFE0F..\uD83C\uDF97\uFE0F)    military medal..reminder ribbon\n                                // E0.0   [1] (\uD83C\uDF98)       MUSICAL KEYBOARD WITH JACKS\n                                // E0.7   [3] (\uD83C\uDF99\uFE0F..\uD83C\uDF9B\uFE0F)    studio microphone..control knobs\n                                // E0.0   [2] (\uD83C\uDF9C..\uD83C\uDF9D)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n                                // E0.7   [2] (\uD83C\uDF9E\uFE0F..\uD83C\uDF9F\uFE0F)    film frames..admission tickets\n                                // E0.6  [37] (\uD83C\uDFA0..\uD83C\uDFC4)    carousel horse..person surfing\n                                // E1.0   [1] (\uD83C\uDFC5)       sports medal\n                                // E0.6   [1] (\uD83C\uDFC6)       trophy\n                                // E1.0   [1] (\uD83C\uDFC7)       horse racing\n                                // E0.6   [1] (\uD83C\uDFC8)       american football\n                                // E1.0   [1] (\uD83C\uDFC9)       rugby football\n                                // E0.6   [1] (\uD83C\uDFCA)       person swimming\n                                // E0.7   [4] (\uD83C\uDFCB\uFE0F..\uD83C\uDFCE\uFE0F)    person lifting weights..racing car\n                                // E1.0   [5] (\uD83C\uDFCF..\uD83C\uDFD3)    cricket game..ping pong\n                                // E0.7  [12] (\uD83C\uDFD4\uFE0F..\uD83C\uDFDF\uFE0F)    snow-capped mountain..stadium\n                                // E0.6   [4] (\uD83C\uDFE0..\uD83C\uDFE3)    house..Japanese post office\n                                // E1.0   [1] (\uD83C\uDFE4)       post office\n                                // E0.6  [12] (\uD83C\uDFE5..\uD83C\uDFF0)    hospital..castle\n                                // E0.0   [2] (\uD83C\uDFF1..\uD83C\uDFF2)    WHITE PENNANT..BLACK PENNANT\n                                // E0.7   [1] (\uD83C\uDFF3\uFE0F)       white flag\n                                // E1.0   [1] (\uD83C\uDFF4)       black flag\n                                // E0.7   [1] (\uD83C\uDFF5\uFE0F)       rosette\n                                // E0.0   [1] (\uD83C\uDFF6)       BLACK ROSETTE\n                                // E0.7   [1] (\uD83C\uDFF7\uFE0F)       label\n                                // E1.0   [3] (\uD83C\uDFF8..\uD83C\uDFFA)    badminton..amphora\n                                if (0x1f249 <= code && code <= 0x1f3fa) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E1.0   [8] (\uD83D\uDC00..\uD83D\uDC07)    rat..rabbit\n                                // E0.7   [1] (\uD83D\uDC08)       cat\n                                // E1.0   [3] (\uD83D\uDC09..\uD83D\uDC0B)    dragon..whale\n                                // E0.6   [3] (\uD83D\uDC0C..\uD83D\uDC0E)    snail..horse\n                                // E1.0   [2] (\uD83D\uDC0F..\uD83D\uDC10)    ram..goat\n                                // E0.6   [2] (\uD83D\uDC11..\uD83D\uDC12)    ewe..monkey\n                                // E1.0   [1] (\uD83D\uDC13)       rooster\n                                // E0.6   [1] (\uD83D\uDC14)       chicken\n                                // E0.7   [1] (\uD83D\uDC15)       dog\n                                // E1.0   [1] (\uD83D\uDC16)       pig\n                                // E0.6  [19] (\uD83D\uDC17..\uD83D\uDC29)    boar..poodle\n                                // E1.0   [1] (\uD83D\uDC2A)       camel\n                                // E0.6  [20] (\uD83D\uDC2B..\uD83D\uDC3E)    two-hump camel..paw prints\n                                // E0.7   [1] (\uD83D\uDC3F\uFE0F)       chipmunk\n                                // E0.6   [1] (\uD83D\uDC40)       eyes\n                                // E0.7   [1] (\uD83D\uDC41\uFE0F)       eye\n                                // E0.6  [35] (\uD83D\uDC42..\uD83D\uDC64)    ear..bust in silhouette\n                                // E1.0   [1] (\uD83D\uDC65)       busts in silhouette\n                                // E0.6   [6] (\uD83D\uDC66..\uD83D\uDC6B)    boy..woman and man holding hands\n                                // E1.0   [2] (\uD83D\uDC6C..\uD83D\uDC6D)    men holding hands..women holding hands\n                                // E0.6  [63] (\uD83D\uDC6E..\uD83D\uDCAC)    police officer..speech balloon\n                                // E1.0   [1] (\uD83D\uDCAD)       thought balloon\n                                // E0.6   [8] (\uD83D\uDCAE..\uD83D\uDCB5)    white flower..dollar banknote\n                                // E1.0   [2] (\uD83D\uDCB6..\uD83D\uDCB7)    euro banknote..pound banknote\n                                // E0.6  [52] (\uD83D\uDCB8..\uD83D\uDCEB)    money with wings..closed mailbox with raised flag\n                                // E0.7   [2] (\uD83D\uDCEC..\uD83D\uDCED)    open mailbox with raised flag..open mailbox with lowered flag\n                                // E0.6   [1] (\uD83D\uDCEE)       postbox\n                                // E1.0   [1] (\uD83D\uDCEF)       postal horn\n                                // E0.6   [5] (\uD83D\uDCF0..\uD83D\uDCF4)    newspaper..mobile phone off\n                                // E1.0   [1] (\uD83D\uDCF5)       no mobile phones\n                                // E0.6   [2] (\uD83D\uDCF6..\uD83D\uDCF7)    antenna bars..camera\n                                // E1.0   [1] (\uD83D\uDCF8)       camera with flash\n                                // E0.6   [4] (\uD83D\uDCF9..\uD83D\uDCFC)    video camera..videocassette\n                                // E0.7   [1] (\uD83D\uDCFD\uFE0F)       film projector\n                                // E0.0   [1] (\uD83D\uDCFE)       PORTABLE STEREO\n                                // E1.0   [4] (\uD83D\uDCFF..\uD83D\uDD02)    prayer beads..repeat single button\n                                // E0.6   [1] (\uD83D\uDD03)       clockwise vertical arrows\n                                // E1.0   [4] (\uD83D\uDD04..\uD83D\uDD07)    counterclockwise arrows button..muted speaker\n                                // E0.7   [1] (\uD83D\uDD08)       speaker low volume\n                                // E1.0   [1] (\uD83D\uDD09)       speaker medium volume\n                                // E0.6  [11] (\uD83D\uDD0A..\uD83D\uDD14)    speaker high volume..bell\n                                // E1.0   [1] (\uD83D\uDD15)       bell with slash\n                                // E0.6  [22] (\uD83D\uDD16..\uD83D\uDD2B)    bookmark..water pistol\n                                // E1.0   [2] (\uD83D\uDD2C..\uD83D\uDD2D)    microscope..telescope\n                                // E0.6  [16] (\uD83D\uDD2E..\uD83D\uDD3D)    crystal ball..downwards button\n                                if (0x1f400 <= code && code <= 0x1f53d) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f680) {\n                                // E0.0   [3] (\uD83D\uDD46..\uD83D\uDD48)    WHITE LATIN CROSS..CELTIC CROSS\n                                // E0.7   [2] (\uD83D\uDD49\uFE0F..\uD83D\uDD4A\uFE0F)    om..dove\n                                // E1.0   [4] (\uD83D\uDD4B..\uD83D\uDD4E)    kaaba..menorah\n                                // E0.0   [1] (\uD83D\uDD4F)       BOWL OF HYGIEIA\n                                // E0.6  [12] (\uD83D\uDD50..\uD83D\uDD5B)    one o\u2019clock..twelve o\u2019clock\n                                // E0.7  [12] (\uD83D\uDD5C..\uD83D\uDD67)    one-thirty..twelve-thirty\n                                // E0.0   [7] (\uD83D\uDD68..\uD83D\uDD6E)    RIGHT SPEAKER..BOOK\n                                // E0.7   [2] (\uD83D\uDD6F\uFE0F..\uD83D\uDD70\uFE0F)    candle..mantelpiece clock\n                                // E0.0   [2] (\uD83D\uDD71..\uD83D\uDD72)    BLACK SKULL AND CROSSBONES..NO PIRACY\n                                // E0.7   [7] (\uD83D\uDD73\uFE0F..\uD83D\uDD79\uFE0F)    hole..joystick\n                                // E3.0   [1] (\uD83D\uDD7A)       man dancing\n                                // E0.0  [12] (\uD83D\uDD7B..\uD83D\uDD86)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n                                // E0.7   [1] (\uD83D\uDD87\uFE0F)       linked paperclips\n                                // E0.0   [2] (\uD83D\uDD88..\uD83D\uDD89)    BLACK PUSHPIN..LOWER LEFT PENCIL\n                                // E0.7   [4] (\uD83D\uDD8A\uFE0F..\uD83D\uDD8D\uFE0F)    pen..crayon\n                                // E0.0   [2] (\uD83D\uDD8E..\uD83D\uDD8F)    LEFT WRITING HAND..TURNED OK HAND SIGN\n                                // E0.7   [1] (\uD83D\uDD90\uFE0F)       hand with fingers splayed\n                                // E0.0   [4] (\uD83D\uDD91..\uD83D\uDD94)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n                                // E1.0   [2] (\uD83D\uDD95..\uD83D\uDD96)    middle finger..vulcan salute\n                                // E0.0  [13] (\uD83D\uDD97..\uD83D\uDDA3)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n                                // E3.0   [1] (\uD83D\uDDA4)       black heart\n                                // E0.7   [1] (\uD83D\uDDA5\uFE0F)       desktop computer\n                                // E0.0   [2] (\uD83D\uDDA6..\uD83D\uDDA7)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n                                // E0.7   [1] (\uD83D\uDDA8\uFE0F)       printer\n                                // E0.0   [8] (\uD83D\uDDA9..\uD83D\uDDB0)    POCKET CALCULATOR..TWO BUTTON MOUSE\n                                // E0.7   [2] (\uD83D\uDDB1\uFE0F..\uD83D\uDDB2\uFE0F)    computer mouse..trackball\n                                // E0.0   [9] (\uD83D\uDDB3..\uD83D\uDDBB)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n                                // E0.7   [1] (\uD83D\uDDBC\uFE0F)       framed picture\n                                // E0.0   [5] (\uD83D\uDDBD..\uD83D\uDDC1)    FRAME WITH TILES..OPEN FOLDER\n                                // E0.7   [3] (\uD83D\uDDC2\uFE0F..\uD83D\uDDC4\uFE0F)    card index dividers..file cabinet\n                                // E0.0  [12] (\uD83D\uDDC5..\uD83D\uDDD0)    EMPTY NOTE..PAGES\n                                // E0.7   [3] (\uD83D\uDDD1\uFE0F..\uD83D\uDDD3\uFE0F)    wastebasket..spiral calendar\n                                // E0.0   [8] (\uD83D\uDDD4..\uD83D\uDDDB)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n                                // E0.7   [3] (\uD83D\uDDDC\uFE0F..\uD83D\uDDDE\uFE0F)    clamp..rolled-up newspaper\n                                // E0.0   [2] (\uD83D\uDDDF..\uD83D\uDDE0)    PAGE WITH CIRCLED TEXT..STOCK CHART\n                                // E0.7   [1] (\uD83D\uDDE1\uFE0F)       dagger\n                                // E0.0   [1] (\uD83D\uDDE2)       LIPS\n                                // E0.7   [1] (\uD83D\uDDE3\uFE0F)       speaking head\n                                // E0.0   [4] (\uD83D\uDDE4..\uD83D\uDDE7)    THREE RAYS ABOVE..THREE RAYS RIGHT\n                                // E2.0   [1] (\uD83D\uDDE8\uFE0F)       left speech bubble\n                                // E0.0   [6] (\uD83D\uDDE9..\uD83D\uDDEE)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n                                // E0.7   [1] (\uD83D\uDDEF\uFE0F)       right anger bubble\n                                // E0.0   [3] (\uD83D\uDDF0..\uD83D\uDDF2)    MOOD BUBBLE..LIGHTNING MOOD\n                                // E0.7   [1] (\uD83D\uDDF3\uFE0F)       ballot box with ballot\n                                // E0.0   [6] (\uD83D\uDDF4..\uD83D\uDDF9)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n                                // E0.7   [1] (\uD83D\uDDFA\uFE0F)       world map\n                                // E0.6   [5] (\uD83D\uDDFB..\uD83D\uDDFF)    mount fuji..moai\n                                // E1.0   [1] (\uD83D\uDE00)       grinning face\n                                // E0.6   [6] (\uD83D\uDE01..\uD83D\uDE06)    beaming face with smiling eyes..grinning squinting face\n                                // E1.0   [2] (\uD83D\uDE07..\uD83D\uDE08)    smiling face with halo..smiling face with horns\n                                // E0.6   [5] (\uD83D\uDE09..\uD83D\uDE0D)    winking face..smiling face with heart-eyes\n                                // E1.0   [1] (\uD83D\uDE0E)       smiling face with sunglasses\n                                // E0.6   [1] (\uD83D\uDE0F)       smirking face\n                                // E0.7   [1] (\uD83D\uDE10)       neutral face\n                                // E1.0   [1] (\uD83D\uDE11)       expressionless face\n                                // E0.6   [3] (\uD83D\uDE12..\uD83D\uDE14)    unamused face..pensive face\n                                // E1.0   [1] (\uD83D\uDE15)       confused face\n                                // E0.6   [1] (\uD83D\uDE16)       confounded face\n                                // E1.0   [1] (\uD83D\uDE17)       kissing face\n                                // E0.6   [1] (\uD83D\uDE18)       face blowing a kiss\n                                // E1.0   [1] (\uD83D\uDE19)       kissing face with smiling eyes\n                                // E0.6   [1] (\uD83D\uDE1A)       kissing face with closed eyes\n                                // E1.0   [1] (\uD83D\uDE1B)       face with tongue\n                                // E0.6   [3] (\uD83D\uDE1C..\uD83D\uDE1E)    winking face with tongue..disappointed face\n                                // E1.0   [1] (\uD83D\uDE1F)       worried face\n                                // E0.6   [6] (\uD83D\uDE20..\uD83D\uDE25)    angry face..sad but relieved face\n                                // E1.0   [2] (\uD83D\uDE26..\uD83D\uDE27)    frowning face with open mouth..anguished face\n                                // E0.6   [4] (\uD83D\uDE28..\uD83D\uDE2B)    fearful face..tired face\n                                // E1.0   [1] (\uD83D\uDE2C)       grimacing face\n                                // E0.6   [1] (\uD83D\uDE2D)       loudly crying face\n                                // E1.0   [2] (\uD83D\uDE2E..\uD83D\uDE2F)    face with open mouth..hushed face\n                                // E0.6   [4] (\uD83D\uDE30..\uD83D\uDE33)    anxious face with sweat..flushed face\n                                // E1.0   [1] (\uD83D\uDE34)       sleeping face\n                                // E0.6   [1] (\uD83D\uDE35)       face with crossed-out eyes\n                                // E1.0   [1] (\uD83D\uDE36)       face without mouth\n                                // E0.6  [10] (\uD83D\uDE37..\uD83D\uDE40)    face with medical mask..weary cat\n                                // E1.0   [4] (\uD83D\uDE41..\uD83D\uDE44)    slightly frowning face..face with rolling eyes\n                                // E0.6  [11] (\uD83D\uDE45..\uD83D\uDE4F)    person gesturing NO..folded hands\n                                if (0x1f546 <= code && code <= 0x1f64f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f774) {\n                                    // E0.6   [1] (\uD83D\uDE80)       rocket\n                                    // E1.0   [2] (\uD83D\uDE81..\uD83D\uDE82)    helicopter..locomotive\n                                    // E0.6   [3] (\uD83D\uDE83..\uD83D\uDE85)    railway car..bullet train\n                                    // E1.0   [1] (\uD83D\uDE86)       train\n                                    // E0.6   [1] (\uD83D\uDE87)       metro\n                                    // E1.0   [1] (\uD83D\uDE88)       light rail\n                                    // E0.6   [1] (\uD83D\uDE89)       station\n                                    // E1.0   [2] (\uD83D\uDE8A..\uD83D\uDE8B)    tram..tram car\n                                    // E0.6   [1] (\uD83D\uDE8C)       bus\n                                    // E0.7   [1] (\uD83D\uDE8D)       oncoming bus\n                                    // E1.0   [1] (\uD83D\uDE8E)       trolleybus\n                                    // E0.6   [1] (\uD83D\uDE8F)       bus stop\n                                    // E1.0   [1] (\uD83D\uDE90)       minibus\n                                    // E0.6   [3] (\uD83D\uDE91..\uD83D\uDE93)    ambulance..police car\n                                    // E0.7   [1] (\uD83D\uDE94)       oncoming police car\n                                    // E0.6   [1] (\uD83D\uDE95)       taxi\n                                    // E1.0   [1] (\uD83D\uDE96)       oncoming taxi\n                                    // E0.6   [1] (\uD83D\uDE97)       automobile\n                                    // E0.7   [1] (\uD83D\uDE98)       oncoming automobile\n                                    // E0.6   [2] (\uD83D\uDE99..\uD83D\uDE9A)    sport utility vehicle..delivery truck\n                                    // E1.0   [7] (\uD83D\uDE9B..\uD83D\uDEA1)    articulated lorry..aerial tramway\n                                    // E0.6   [1] (\uD83D\uDEA2)       ship\n                                    // E1.0   [1] (\uD83D\uDEA3)       person rowing boat\n                                    // E0.6   [2] (\uD83D\uDEA4..\uD83D\uDEA5)    speedboat..horizontal traffic light\n                                    // E1.0   [1] (\uD83D\uDEA6)       vertical traffic light\n                                    // E0.6   [7] (\uD83D\uDEA7..\uD83D\uDEAD)    construction..no smoking\n                                    // E1.0   [4] (\uD83D\uDEAE..\uD83D\uDEB1)    litter in bin sign..non-potable water\n                                    // E0.6   [1] (\uD83D\uDEB2)       bicycle\n                                    // E1.0   [3] (\uD83D\uDEB3..\uD83D\uDEB5)    no bicycles..person mountain biking\n                                    // E0.6   [1] (\uD83D\uDEB6)       person walking\n                                    // E1.0   [2] (\uD83D\uDEB7..\uD83D\uDEB8)    no pedestrians..children crossing\n                                    // E0.6   [6] (\uD83D\uDEB9..\uD83D\uDEBE)    men\u2019s room..water closet\n                                    // E1.0   [1] (\uD83D\uDEBF)       shower\n                                    // E0.6   [1] (\uD83D\uDEC0)       person taking bath\n                                    // E1.0   [5] (\uD83D\uDEC1..\uD83D\uDEC5)    bathtub..left luggage\n                                    // E0.0   [5] (\uD83D\uDEC6..\uD83D\uDECA)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n                                    // E0.7   [1] (\uD83D\uDECB\uFE0F)       couch and lamp\n                                    // E1.0   [1] (\uD83D\uDECC)       person in bed\n                                    // E0.7   [3] (\uD83D\uDECD\uFE0F..\uD83D\uDECF\uFE0F)    shopping bags..bed\n                                    // E1.0   [1] (\uD83D\uDED0)       place of worship\n                                    // E3.0   [2] (\uD83D\uDED1..\uD83D\uDED2)    stop sign..shopping cart\n                                    // E0.0   [2] (\uD83D\uDED3..\uD83D\uDED4)    STUPA..PAGODA\n                                    // E12.0  [1] (\uD83D\uDED5)       hindu temple\n                                    // E13.0  [2] (\uD83D\uDED6..\uD83D\uDED7)    hut..elevator\n                                    // E0.0   [4] (\uD83D\uDED8..\uD83D\uDEDB)    <reserved-1F6D8>..<reserved-1F6DB>\n                                    // E15.0  [1] (\uD83D\uDEDC)       wireless\n                                    // E14.0  [3] (\uD83D\uDEDD..\uD83D\uDEDF)    playground slide..ring buoy\n                                    // E0.7   [6] (\uD83D\uDEE0\uFE0F..\uD83D\uDEE5\uFE0F)    hammer and wrench..motor boat\n                                    // E0.0   [3] (\uD83D\uDEE6..\uD83D\uDEE8)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n                                    // E0.7   [1] (\uD83D\uDEE9\uFE0F)       small airplane\n                                    // E0.0   [1] (\uD83D\uDEEA)       NORTHEAST-POINTING AIRPLANE\n                                    // E1.0   [2] (\uD83D\uDEEB..\uD83D\uDEEC)    airplane departure..airplane arrival\n                                    // E0.0   [3] (\uD83D\uDEED..\uD83D\uDEEF)    <reserved-1F6ED>..<reserved-1F6EF>\n                                    // E0.7   [1] (\uD83D\uDEF0\uFE0F)       satellite\n                                    // E0.0   [2] (\uD83D\uDEF1..\uD83D\uDEF2)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n                                    // E0.7   [1] (\uD83D\uDEF3\uFE0F)       passenger ship\n                                    // E3.0   [3] (\uD83D\uDEF4..\uD83D\uDEF6)    kick scooter..canoe\n                                    // E5.0   [2] (\uD83D\uDEF7..\uD83D\uDEF8)    sled..flying saucer\n                                    // E11.0  [1] (\uD83D\uDEF9)       skateboard\n                                    // E12.0  [1] (\uD83D\uDEFA)       auto rickshaw\n                                    // E13.0  [2] (\uD83D\uDEFB..\uD83D\uDEFC)    pickup truck..roller skate\n                                    // E0.0   [3] (\uD83D\uDEFD..\uD83D\uDEFF)    <reserved-1F6FD>..<reserved-1F6FF>\n                                    if (0x1f680 <= code && code <= 0x1f6ff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [12] (\uD83D\uDF74..\uD83D\uDF7F)    LOT OF FORTUNE..ORCUS\n                                    if (0x1f774 <= code && code <= 0x1f77f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f8ae) {\n                        if (code < 0x1f848) {\n                            if (code < 0x1f80c) {\n                                // E0.0  [11] (\uD83D\uDFD5..\uD83D\uDFDF)    CIRCLED TRIANGLE..<reserved-1F7DF>\n                                // E12.0 [12] (\uD83D\uDFE0..\uD83D\uDFEB)    orange circle..brown square\n                                // E0.0   [4] (\uD83D\uDFEC..\uD83D\uDFEF)    <reserved-1F7EC>..<reserved-1F7EF>\n                                // E14.0  [1] (\uD83D\uDFF0)       heavy equals sign\n                                // E0.0  [15] (\uD83D\uDFF1..\uD83D\uDFFF)    <reserved-1F7F1>..<reserved-1F7FF>\n                                if (0x1f7d5 <= code && code <= 0x1f7ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [4] (\uD83E\uDC0C..\uD83E\uDC0F)    <reserved-1F80C>..<reserved-1F80F>\n                                if (0x1f80c <= code && code <= 0x1f80f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f85a) {\n                                // E0.0   [8] (\uD83E\uDC48..\uD83E\uDC4F)    <reserved-1F848>..<reserved-1F84F>\n                                if (0x1f848 <= code && code <= 0x1f84f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f888) {\n                                    // E0.0   [6] (\uD83E\uDC5A..\uD83E\uDC5F)    <reserved-1F85A>..<reserved-1F85F>\n                                    if (0x1f85a <= code && code <= 0x1f85f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [8] (\uD83E\uDC88..\uD83E\uDC8F)    <reserved-1F888>..<reserved-1F88F>\n                                    if (0x1f888 <= code && code <= 0x1f88f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f93c) {\n                            if (code < 0x1f90c) {\n                                // E0.0  [82] (\uD83E\uDCAE..\uD83E\uDCFF)    <reserved-1F8AE>..<reserved-1F8FF>\n                                if (0x1f8ae <= code && code <= 0x1f8ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E13.0  [1] (\uD83E\uDD0C)       pinched fingers\n                                // E12.0  [3] (\uD83E\uDD0D..\uD83E\uDD0F)    white heart..pinching hand\n                                // E1.0   [9] (\uD83E\uDD10..\uD83E\uDD18)    zipper-mouth face..sign of the horns\n                                // E3.0   [6] (\uD83E\uDD19..\uD83E\uDD1E)    call me hand..crossed fingers\n                                // E5.0   [1] (\uD83E\uDD1F)       love-you gesture\n                                // E3.0   [8] (\uD83E\uDD20..\uD83E\uDD27)    cowboy hat face..sneezing face\n                                // E5.0   [8] (\uD83E\uDD28..\uD83E\uDD2F)    face with raised eyebrow..exploding head\n                                // E3.0   [1] (\uD83E\uDD30)       pregnant woman\n                                // E5.0   [2] (\uD83E\uDD31..\uD83E\uDD32)    breast-feeding..palms up together\n                                // E3.0   [8] (\uD83E\uDD33..\uD83E\uDD3A)    selfie..person fencing\n                                if (0x1f90c <= code && code <= 0x1f93a) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f947) {\n                                // E3.0   [3] (\uD83E\uDD3C..\uD83E\uDD3E)    people wrestling..person playing handball\n                                // E12.0  [1] (\uD83E\uDD3F)       diving mask\n                                // E3.0   [6] (\uD83E\uDD40..\uD83E\uDD45)    wilted flower..goal net\n                                if (0x1f93c <= code && code <= 0x1f945) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1fc00) {\n                                    // E3.0   [5] (\uD83E\uDD47..\uD83E\uDD4B)    1st place medal..martial arts uniform\n                                    // E5.0   [1] (\uD83E\uDD4C)       curling stone\n                                    // E11.0  [3] (\uD83E\uDD4D..\uD83E\uDD4F)    lacrosse..flying disc\n                                    // E3.0  [15] (\uD83E\uDD50..\uD83E\uDD5E)    croissant..pancakes\n                                    // E5.0  [13] (\uD83E\uDD5F..\uD83E\uDD6B)    dumpling..canned food\n                                    // E11.0  [5] (\uD83E\uDD6C..\uD83E\uDD70)    leafy green..smiling face with hearts\n                                    // E12.0  [1] (\uD83E\uDD71)       yawning face\n                                    // E13.0  [1] (\uD83E\uDD72)       smiling face with tear\n                                    // E11.0  [4] (\uD83E\uDD73..\uD83E\uDD76)    partying face..cold face\n                                    // E13.0  [2] (\uD83E\uDD77..\uD83E\uDD78)    ninja..disguised face\n                                    // E14.0  [1] (\uD83E\uDD79)       face holding back tears\n                                    // E11.0  [1] (\uD83E\uDD7A)       pleading face\n                                    // E12.0  [1] (\uD83E\uDD7B)       sari\n                                    // E11.0  [4] (\uD83E\uDD7C..\uD83E\uDD7F)    lab coat..flat shoe\n                                    // E1.0   [5] (\uD83E\uDD80..\uD83E\uDD84)    crab..unicorn\n                                    // E3.0  [13] (\uD83E\uDD85..\uD83E\uDD91)    eagle..squid\n                                    // E5.0   [6] (\uD83E\uDD92..\uD83E\uDD97)    giraffe..cricket\n                                    // E11.0 [11] (\uD83E\uDD98..\uD83E\uDDA2)    kangaroo..swan\n                                    // E13.0  [2] (\uD83E\uDDA3..\uD83E\uDDA4)    mammoth..dodo\n                                    // E12.0  [6] (\uD83E\uDDA5..\uD83E\uDDAA)    sloth..oyster\n                                    // E13.0  [3] (\uD83E\uDDAB..\uD83E\uDDAD)    beaver..seal\n                                    // E12.0  [2] (\uD83E\uDDAE..\uD83E\uDDAF)    guide dog..white cane\n                                    // E11.0 [10] (\uD83E\uDDB0..\uD83E\uDDB9)    red hair..supervillain\n                                    // E12.0  [6] (\uD83E\uDDBA..\uD83E\uDDBF)    safety vest..mechanical leg\n                                    // E1.0   [1] (\uD83E\uDDC0)       cheese wedge\n                                    // E11.0  [2] (\uD83E\uDDC1..\uD83E\uDDC2)    cupcake..salt\n                                    // E12.0  [8] (\uD83E\uDDC3..\uD83E\uDDCA)    beverage box..ice\n                                    // E13.0  [1] (\uD83E\uDDCB)       bubble tea\n                                    // E14.0  [1] (\uD83E\uDDCC)       troll\n                                    // E12.0  [3] (\uD83E\uDDCD..\uD83E\uDDCF)    person standing..deaf person\n                                    // E5.0  [23] (\uD83E\uDDD0..\uD83E\uDDE6)    face with monocle..socks\n                                    // E11.0 [25] (\uD83E\uDDE7..\uD83E\uDDFF)    red envelope..nazar amulet\n                                    // E0.0 [112] (\uD83E\uDE00..\uD83E\uDE6F)    NEUTRAL CHESS KING..<reserved-1FA6F>\n                                    // E12.0  [4] (\uD83E\uDE70..\uD83E\uDE73)    ballet shoes..shorts\n                                    // E13.0  [1] (\uD83E\uDE74)       thong sandal\n                                    // E15.0  [3] (\uD83E\uDE75..\uD83E\uDE77)    light blue heart..pink heart\n                                    // E12.0  [3] (\uD83E\uDE78..\uD83E\uDE7A)    drop of blood..stethoscope\n                                    // E14.0  [2] (\uD83E\uDE7B..\uD83E\uDE7C)    x-ray..crutch\n                                    // E0.0   [3] (\uD83E\uDE7D..\uD83E\uDE7F)    <reserved-1FA7D>..<reserved-1FA7F>\n                                    // E12.0  [3] (\uD83E\uDE80..\uD83E\uDE82)    yo-yo..parachute\n                                    // E13.0  [4] (\uD83E\uDE83..\uD83E\uDE86)    boomerang..nesting dolls\n                                    // E15.0  [2] (\uD83E\uDE87..\uD83E\uDE88)    maracas..flute\n                                    // E0.0   [7] (\uD83E\uDE89..\uD83E\uDE8F)    <reserved-1FA89>..<reserved-1FA8F>\n                                    // E12.0  [6] (\uD83E\uDE90..\uD83E\uDE95)    ringed planet..banjo\n                                    // E13.0 [19] (\uD83E\uDE96..\uD83E\uDEA8)    military helmet..rock\n                                    // E14.0  [4] (\uD83E\uDEA9..\uD83E\uDEAC)    mirror ball..hamsa\n                                    // E15.0  [3] (\uD83E\uDEAD..\uD83E\uDEAF)    folding hand fan..khanda\n                                    // E13.0  [7] (\uD83E\uDEB0..\uD83E\uDEB6)    fly..feather\n                                    // E14.0  [4] (\uD83E\uDEB7..\uD83E\uDEBA)    lotus..nest with eggs\n                                    // E15.0  [3] (\uD83E\uDEBB..\uD83E\uDEBD)    hyacinth..wing\n                                    // E0.0   [1] (\uD83E\uDEBE)       <reserved-1FABE>\n                                    // E15.0  [1] (\uD83E\uDEBF)       goose\n                                    // E13.0  [3] (\uD83E\uDEC0..\uD83E\uDEC2)    anatomical heart..people hugging\n                                    // E14.0  [3] (\uD83E\uDEC3..\uD83E\uDEC5)    pregnant man..person with crown\n                                    // E0.0   [8] (\uD83E\uDEC6..\uD83E\uDECD)    <reserved-1FAC6>..<reserved-1FACD>\n                                    // E15.0  [2] (\uD83E\uDECE..\uD83E\uDECF)    moose..donkey\n                                    // E13.0  [7] (\uD83E\uDED0..\uD83E\uDED6)    blueberries..teapot\n                                    // E14.0  [3] (\uD83E\uDED7..\uD83E\uDED9)    pouring liquid..jar\n                                    // E15.0  [2] (\uD83E\uDEDA..\uD83E\uDEDB)    ginger root..pea pod\n                                    // E0.0   [4] (\uD83E\uDEDC..\uD83E\uDEDF)    <reserved-1FADC>..<reserved-1FADF>\n                                    // E14.0  [8] (\uD83E\uDEE0..\uD83E\uDEE7)    melting face..bubbles\n                                    // E15.0  [1] (\uD83E\uDEE8)       shaking face\n                                    // E0.0   [7] (\uD83E\uDEE9..\uD83E\uDEEF)    <reserved-1FAE9>..<reserved-1FAEF>\n                                    // E14.0  [7] (\uD83E\uDEF0..\uD83E\uDEF6)    hand with index finger and thumb crossed..heart hands\n                                    // E15.0  [2] (\uD83E\uDEF7..\uD83E\uDEF8)    leftwards pushing hand..rightwards pushing hand\n                                    // E0.0   [7] (\uD83E\uDEF9..\uD83E\uDEFF)    <reserved-1FAF9>..<reserved-1FAFF>\n                                    if (0x1f947 <= code && code <= 0x1faff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0[1022] (\uD83F\uDC00..\uD83F\uDFFD)    <reserved-1FC00>..<reserved-1FFFD>\n                                    if (0x1fc00 <= code && code <= 0x1fffd) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n}\nexports.default = Graphemer;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graphemer_1 = __importDefault(require(\"./Graphemer\"));\nexports.default = Graphemer_1.default;\n", "(()=>{\"use strict\";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};function r(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^(?!0{4}\"+t+\"0{2}\"+t+\"0{2})((?=[0-9]{4}\"+t+\"(((0[^2])|1[0-2])|02(?=\"+t+\"(([0-1][0-9])|2[0-8])))\"+t+\"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))\"+t+\"02\"+t+\"29))([0-9]{4})\"+t+\"(?!((0[469])|11)\"+t+\"31)((0[1,3-9]|1[0-2])|(02(?!\"+t+\"3)))\"+t+\"(0[1-9]|[1-2][0-9]|3[0-1])$\").test(e)}function n(e){var t=/\\D/.exec(e);return t?t[0]:\"\"}function i(e,t,r){void 0===t&&(t=\":\"),void 0===r&&(r=!1);var i=new RegExp(\"^([0-1]|2(?=([0-3])|4\"+t+\"00))[0-9]\"+t+\"[0-5][0-9](\"+t+\"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$\");if(!r||!/[Z+\\-]/.test(e))return i.test(e);if(/Z$/.test(e))return i.test(e.replace(\"Z\",\"\"));var o=e.includes(\"+\"),a=e.split(/[+-]/),u=a[0],d=a[1];return i.test(u)&&function(e,t,r){return void 0===r&&(r=\":\"),new RegExp(t?\"^(0(?!(2\"+r+\"4)|0\"+r+\"3)|1(?=([0-1]|2(?=\"+r+\"[04])|[34](?=\"+r+\"0))))([03469](?=\"+r+\"[03])|[17](?=\"+r+\"0)|2(?=\"+r+\"[04])|5(?=\"+r+\"[034])|8(?=\"+r+\"[04]))\"+r+\"([03](?=0)|4(?=5))[05]$\":\"^(0(?=[^0])|1(?=[0-2]))([39](?=\"+r+\"[03])|[0-24-8](?=\"+r+\"00))\"+r+\"[03]0$\").test(e)}(d,o,n(d))}function o(e){var t=e.split(\"T\"),o=t[0],a=t[1],u=r(o,n(o));if(!a)return!1;var d,s=(d=a.match(/([^Z+\\-\\d])(?=\\d+\\1)/),Array.isArray(d)?d[0]:\"\");return u&&i(a,s,!0)}function a(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^[0-9]{4}\"+t+\"(0(?=[^0])|1(?=[0-2]))[0-9]$\").test(e)}e.r(t),e.d(t,{isValidDate:()=>r,isValidISODateString:()=>o,isValidTime:()=>i,isValidYearMonth:()=>a});var u=exports;for(var d in t)u[d]=t[d];t.__esModule&&Object.defineProperty(u,\"__esModule\",{value:!0})})();", "export { AtUri } from '@atproto/syntax'\nexport {\n  BlobRef,\n  lexToJson,\n  stringifyLex,\n  jsonToLex,\n  jsonStringToLex,\n} from '@atproto/lexicon'\nexport { parseLanguage } from '@atproto/common-web'\nexport * from './types'\nexport * from './client'\nexport * from './agent'\nexport * from './rich-text/rich-text'\nexport * from './rich-text/sanitization'\nexport * from './rich-text/unicode'\nexport * from './moderation'\nexport * from './moderation/types'\nexport { LABELS } from './moderation/const/labels'\nexport { LABEL_GROUPS } from './moderation/const/label-groups'\nexport { BskyAgent } from './bsky-agent'\nexport { AtpAgent as default } from './agent'\n", "export const INVALID_HANDLE = 'handle.invalid'\n\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexport const DISALLOWED_TLDS = [\n  '.local',\n  '.arpa',\n  '.invalid',\n  '.localhost',\n  '.internal',\n  '.example',\n  '.alt',\n  // policy could concievably change on \".onion\" some day\n  '.onion',\n  // NOTE: .test is allowed in testing and devopment. In practical terms\n  // \"should\" \"never\" actually resolve and get registered in production\n]\n\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nexport const ensureValidHandle = (handle: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n    throw new InvalidHandleError(\n      'Disallowed characters in handle (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n  const labels = handle.split('.')\n  if (labels.length < 2) {\n    throw new InvalidHandleError('Handle domain needs at least two parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidHandleError('Handle parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidHandleError('Handle part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidHandleError(\n        'Handle parts can not start or end with hyphens',\n      )\n    }\n    if (i + 1 == labels.length && !/^[a-zA-Z]/.test(l)) {\n      throw new InvalidHandleError(\n        'Handle final component (TLD) must start with ASCII letter',\n      )\n    }\n  }\n}\n\n// simple regex translation of above constraints\nexport const ensureValidHandleRegex = (handle: string): void => {\n  if (\n    !/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(\n      handle,\n    )\n  ) {\n    throw new InvalidHandleError(\"Handle didn't validate via regex\")\n  }\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n}\n\nexport const normalizeHandle = (handle: string): string => {\n  return handle.toLowerCase()\n}\n\nexport const normalizeAndEnsureValidHandle = (handle: string): string => {\n  const normalized = normalizeHandle(handle)\n  ensureValidHandle(normalized)\n  return normalized\n}\n\nexport const isValidHandle = (handle: string): boolean => {\n  try {\n    ensureValidHandle(handle)\n  } catch (err) {\n    if (err instanceof InvalidHandleError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport const isValidTld = (handle: string): boolean => {\n  return !DISALLOWED_TLDS.some((domain) => handle.endsWith(domain))\n}\n\nexport class InvalidHandleError extends Error {}\nexport class ReservedHandleError extends Error {}\nexport class UnsupportedDomainError extends Error {}\nexport class DisallowedDomainError extends Error {}\n", "// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nexport const ensureValidDid = (did: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n    throw new InvalidDidError(\n      'Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)',\n    )\n  }\n\n  const parts = did.split(':')\n  if (parts.length < 3) {\n    throw new InvalidDidError(\n      'DID requires prefix, method, and method-specific content',\n    )\n  }\n\n  if (parts[0] != 'did') {\n    throw new InvalidDidError('DID requires \"did:\" prefix')\n  }\n\n  if (!/^[a-z]+$/.test(parts[1])) {\n    throw new InvalidDidError('DID method must be lower-case letters')\n  }\n\n  if (did.endsWith(':') || did.endsWith('%')) {\n    throw new InvalidDidError('DID can not end with \":\" or \"%\"')\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport const ensureValidDidRegex = (did: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n    throw new InvalidDidError(\"DID didn't validate via regex\")\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport class InvalidDidError extends Error {}\n", "/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\n\nexport class NSID {\n  segments: string[] = []\n\n  static parse(nsid: string): NSID {\n    return new NSID(nsid)\n  }\n\n  static create(authority: string, name: string): NSID {\n    const segments = [...authority.split('.').reverse(), name].join('.')\n    return new NSID(segments)\n  }\n\n  static isValid(nsid: string): boolean {\n    try {\n      NSID.parse(nsid)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  constructor(nsid: string) {\n    ensureValidNsid(nsid)\n    this.segments = nsid.split('.')\n  }\n\n  get authority() {\n    return this.segments\n      .slice(0, this.segments.length - 1)\n      .reverse()\n      .join('.')\n  }\n\n  get name() {\n    return this.segments.at(this.segments.length - 1)\n  }\n\n  toString() {\n    return this.segments.join('.')\n  }\n}\n\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nexport const ensureValidNsid = (nsid: string): void => {\n  const toCheck = nsid\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n    throw new InvalidNsidError(\n      'Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (toCheck.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n  const labels = toCheck.split('.')\n  if (labels.length < 3) {\n    throw new InvalidNsidError('NSID needs at least three parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidNsidError('NSID parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidNsidError('NSID part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidNsidError('NSID parts can not start or end with hyphen')\n    }\n    if (/^[0-9]/.test(l) && i == 0) {\n      throw new InvalidNsidError('NSID first part may not start with a digit')\n    }\n    if (!/^[a-zA-Z]+$/.test(l) && i + 1 == labels.length) {\n      throw new InvalidNsidError('NSID name part must be only letters')\n    }\n  }\n}\n\nexport const ensureValidNsidRegex = (nsid: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (\n    !/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(\n      nsid,\n    )\n  ) {\n    throw new InvalidNsidError(\"NSID didn't validate via regex\")\n  }\n  if (nsid.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n}\n\nexport class InvalidNsidError extends Error {}\n", "import { ensureValidHandle, ensureValidHandleRegex } from './handle'\nimport { ensureValidDid, ensureValidDidRegex } from './did'\nimport { ensureValidNsid, ensureValidNsidRegex } from './nsid'\n\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nexport const ensureValidAtUri = (uri: string) => {\n  // JSON pointer is pretty different from rest of URI, so split that out first\n  const uriParts = uri.split('#')\n  if (uriParts.length > 2) {\n    throw new Error('ATURI can have at most one \"#\", separating fragment out')\n  }\n  const fragmentPart = uriParts[1] || null\n  uri = uriParts[0]\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n    throw new Error('Disallowed characters in ATURI (ASCII)')\n  }\n\n  const parts = uri.split('/')\n  if (parts.length >= 3 && (parts[0] != 'at:' || parts[1].length != 0)) {\n    throw new Error('ATURI must start with \"at://\"')\n  }\n  if (parts.length < 3) {\n    throw new Error('ATURI requires at least method and authority sections')\n  }\n\n  try {\n    if (parts[2].startsWith('did:')) {\n      ensureValidDid(parts[2])\n    } else {\n      ensureValidHandle(parts[2])\n    }\n  } catch {\n    throw new Error('ATURI authority must be a valid handle or DID')\n  }\n\n  if (parts.length >= 4) {\n    if (parts[3].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after authority without a path segment',\n      )\n    }\n    try {\n      ensureValidNsid(parts[3])\n    } catch {\n      throw new Error(\n        'ATURI requires first path segment (if supplied) to be valid NSID',\n      )\n    }\n  }\n\n  if (parts.length >= 5) {\n    if (parts[4].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after collection, unless record key is provided',\n      )\n    }\n    // would validate rkey here, but there are basically no constraints!\n  }\n\n  if (parts.length >= 6) {\n    throw new Error(\n      'ATURI path can have at most two parts, and no trailing slash',\n    )\n  }\n\n  if (uriParts.length >= 2 && fragmentPart == null) {\n    throw new Error('ATURI fragment must be non-empty and start with slash')\n  }\n\n  if (fragmentPart != null) {\n    if (fragmentPart.length == 0 || fragmentPart[0] != '/') {\n      throw new Error('ATURI fragment must be non-empty and start with slash')\n    }\n    // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n    if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n      throw new Error('Disallowed characters in ATURI fragment (ASCII)')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n\nexport const ensureValidAtUriRegex = (uri: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints. whew!\n  const aturiRegex =\n    /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/\n  const rm = uri.match(aturiRegex)\n  if (!rm || !rm.groups) {\n    throw new Error(\"ATURI didn't validate via regex\")\n  }\n  const groups = rm.groups\n\n  try {\n    ensureValidHandleRegex(groups.authority)\n  } catch {\n    try {\n      ensureValidDidRegex(groups.authority)\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (groups.collection) {\n    try {\n      ensureValidNsidRegex(groups.collection)\n    } catch {\n      throw new Error('ATURI collection path segment must be a valid NSID')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n", "export * from './aturi_validation'\n\nexport const ATP_URI_REGEX =\n  // proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n  /^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n\nexport class AtUri {\n  hash: string\n  host: string\n  pathname: string\n  searchParams: URLSearchParams\n\n  constructor(uri: string, base?: string) {\n    let parsed\n    if (base) {\n      parsed = parse(base)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${base}`)\n      }\n      const relativep = parseRelative(uri)\n      if (!relativep) {\n        throw new Error(`Invalid path: ${uri}`)\n      }\n      Object.assign(parsed, relativep)\n    } else {\n      parsed = parse(uri)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${uri}`)\n      }\n    }\n\n    this.hash = parsed.hash\n    this.host = parsed.host\n    this.pathname = parsed.pathname\n    this.searchParams = parsed.searchParams\n  }\n\n  static make(handleOrDid: string, collection?: string, rkey?: string) {\n    let str = handleOrDid\n    if (collection) str += '/' + collection\n    if (rkey) str += '/' + rkey\n    return new AtUri(str)\n  }\n\n  get protocol() {\n    return 'at:'\n  }\n\n  get origin() {\n    return `at://${this.host}`\n  }\n\n  get hostname() {\n    return this.host\n  }\n\n  set hostname(v: string) {\n    this.host = v\n  }\n\n  get search() {\n    return this.searchParams.toString()\n  }\n\n  set search(v: string) {\n    this.searchParams = new URLSearchParams(v)\n  }\n\n  get collection() {\n    return this.pathname.split('/').filter(Boolean)[0] || ''\n  }\n\n  set collection(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    parts[0] = v\n    this.pathname = parts.join('/')\n  }\n\n  get rkey() {\n    return this.pathname.split('/').filter(Boolean)[1] || ''\n  }\n\n  set rkey(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    if (!parts[0]) parts[0] = 'undefined'\n    parts[1] = v\n    this.pathname = parts.join('/')\n  }\n\n  get href() {\n    return this.toString()\n  }\n\n  toString() {\n    let path = this.pathname || '/'\n    if (!path.startsWith('/')) {\n      path = `/${path}`\n    }\n    let qs = this.searchParams.toString()\n    if (qs && !qs.startsWith('?')) {\n      qs = `?${qs}`\n    }\n    let hash = this.hash\n    if (hash && !hash.startsWith('#')) {\n      hash = `#${hash}`\n    }\n    return `at://${this.host}${path}${qs}${hash}`\n  }\n}\n\nfunction parse(str: string) {\n  const match = ATP_URI_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[5] || '',\n      host: match[2] || '',\n      pathname: match[3] || '',\n      searchParams: new URLSearchParams(match[4] || ''),\n    }\n  }\n  return undefined\n}\n\nfunction parseRelative(str: string) {\n  const match = RELATIVE_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[3] || '',\n      pathname: match[1] || '',\n      searchParams: new URLSearchParams(match[2] || ''),\n    }\n  }\n  return undefined\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { ZodError } from 'zod'\n\nexport interface Checkable<T> {\n  parse: (obj: unknown) => T\n  safeParse: (\n    obj: unknown,\n  ) => { success: true; data: T } | { success: false; error: ZodError }\n}\n\nexport interface Def<T> {\n  name: string\n  schema: Checkable<T>\n}\n\nexport const is = <T>(obj: unknown, def: Checkable<T>): obj is T => {\n  return def.safeParse(obj).success\n}\n\nexport const assure = <T>(def: Checkable<T>, obj: unknown): T => {\n  return def.parse(obj)\n}\n\nexport const isObject = (obj: unknown): obj is Record<string, unknown> => {\n  return typeof obj === 'object' && obj !== null\n}\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import { CID } from 'multiformats/cid'\nimport * as ui8 from 'uint8arrays'\n\nexport type JsonValue =\n  | boolean\n  | number\n  | string\n  | null\n  | undefined\n  | unknown\n  | Array<JsonValue>\n  | { [key: string]: JsonValue }\n\nexport type IpldValue =\n  | JsonValue\n  | CID\n  | Uint8Array\n  | Array<IpldValue>\n  | { [key: string]: IpldValue }\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const jsonToIpld = (val: JsonValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => jsonToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // check for dag json values\n    if (typeof val['$link'] === 'string' && Object.keys(val).length === 1) {\n      return CID.parse(val['$link'])\n    }\n    if (typeof val['$bytes'] === 'string' && Object.keys(val).length === 1) {\n      return ui8.fromString(val['$bytes'], 'base64')\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = jsonToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToJson = (val: IpldValue): JsonValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToJson(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert bytes\n    if (val instanceof Uint8Array) {\n      return {\n        $bytes: ui8.toString(val, 'base64'),\n      }\n    }\n    // convert cids\n    if (CID.asCID(val)) {\n      return {\n        $link: (val as CID).toString(),\n      }\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToJson(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val as JsonValue\n}\n\nexport const ipldEquals = (a: IpldValue, b: IpldValue): boolean => {\n  // walk arrays\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (!ipldEquals(a[i], b[i])) return false\n    }\n    return true\n  }\n  // objects\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    // check bytes\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n      return ui8.equals(a, b)\n    }\n    // check cids\n    if (CID.asCID(a) && CID.asCID(b)) {\n      return CID.asCID(a)?.equals(CID.asCID(b))\n    }\n    // walk plain objects\n    if (Object.keys(a).length !== Object.keys(b).length) return false\n    for (const key of Object.keys(a)) {\n      if (!ipldEquals(a[key], b[key])) return false\n    }\n    return true\n  }\n  return a === b\n}\n", "import { CID } from 'multiformats/cid'\nimport { z } from 'zod'\nimport { Def } from './check'\n\nconst cidSchema = z\n  .any()\n  .refine((obj: unknown) => CID.asCID(obj) !== null, {\n    message: 'Not a CID',\n  })\n  .transform((obj: unknown) => CID.asCID(obj) as CID)\n\nexport const schema = {\n  cid: cidSchema,\n  bytes: z.instanceof(Uint8Array),\n  string: z.string(),\n  array: z.array(z.unknown()),\n  map: z.record(z.string(), z.unknown()),\n  unknown: z.unknown(),\n}\n\nexport const def = {\n  cid: {\n    name: 'cid',\n    schema: schema.cid,\n  } as Def<CID>,\n  bytes: {\n    name: 'bytes',\n    schema: schema.bytes,\n  } as Def<Uint8Array>,\n  string: {\n    name: 'string',\n    schema: schema.string,\n  } as Def<string>,\n  map: {\n    name: 'map',\n    schema: schema.map,\n  } as Def<Record<string, unknown>>,\n  unknown: {\n    name: 'unknown',\n    schema: schema.unknown,\n  } as Def<unknown>,\n}\n\nexport type ArrayEl<A> = A extends readonly (infer T)[] ? T : never\n\nexport type NotEmptyArray<T> = [T, ...T[]]\n", "export const SECOND = 1000\nexport const MINUTE = SECOND * 60\nexport const HOUR = MINUTE * 60\nexport const DAY = HOUR * 24\n\nexport const lessThanAgoMs = (time: Date, range: number) => {\n  return Date.now() < time.getTime() + range\n}\n", "import Graphemer from 'graphemer'\nimport * as ui8 from 'uint8arrays'\n\n// counts the number of bytes in a utf8 string\nexport const utf8Len = (str: string): number => {\n  return new TextEncoder().encode(str).byteLength\n}\n\n// counts the number of graphemes (user-displayed characters) in a string\nexport const graphemeLen = (str: string): number => {\n  const splitter = new Graphemer()\n  return splitter.countGraphemes(str)\n}\n\nexport const utf8ToB64Url = (utf8: string): string => {\n  return ui8.toString(ui8.fromString(utf8, 'utf8'), 'base64url')\n}\n\nexport const b64UrlToUtf8 = (b64: string): string => {\n  return ui8.toString(ui8.fromString(b64, 'base64url'), 'utf8')\n}\n\nexport const parseLanguage = (langTag: string): LanguageTag | null => {\n  const parsed = langTag.match(bcp47Regexp)\n  if (!parsed?.groups) return null\n  const parts = parsed.groups\n  return {\n    grandfathered: parts.grandfathered,\n    language: parts.language,\n    extlang: parts.extlang,\n    script: parts.script,\n    region: parts.region,\n    variant: parts.variant,\n    extension: parts.extension,\n    privateUse: parts.privateUseA || parts.privateUseB,\n  }\n}\n\nexport const validateLanguage = (langTag: string): boolean => {\n  return bcp47Regexp.test(langTag)\n}\n\nexport type LanguageTag = {\n  grandfathered?: string\n  language?: string\n  extlang?: string\n  script?: string\n  region?: string\n  variant?: string\n  extension?: string\n  privateUse?: string\n}\n\n// Validates well-formed BCP 47 syntax: https://www.rfc-editor.org/rfc/rfc5646.html#section-2.1\nconst bcp47Regexp =\n  /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/\n", "import { z } from 'zod'\n\n// Parsing atproto data\n// --------\n\nexport const isValidDidDoc = (doc: unknown): doc is DidDocument => {\n  return didDocument.safeParse(doc).success\n}\n\nexport const getDid = (doc: DidDocument): string => {\n  const id = doc.id\n  if (typeof id !== 'string') {\n    throw new Error('No `id` on document')\n  }\n  return id\n}\n\nexport const getHandle = (doc: DidDocument): string | undefined => {\n  const aka = doc.alsoKnownAs\n  if (!aka) return undefined\n  const found = aka.find((name) => name.startsWith('at://'))\n  if (!found) return undefined\n  // strip off at:// prefix\n  return found.slice(5)\n}\n\n// @NOTE we parse to type/publicKeyMultibase to avoid the dependency on @atproto/crypto\nexport const getSigningKey = (\n  doc: DidDocument,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  const did = getDid(doc)\n  let keys = doc.verificationMethod\n  if (!keys) return undefined\n  if (typeof keys !== 'object') return undefined\n  if (!Array.isArray(keys)) {\n    keys = [keys]\n  }\n  const found = keys.find(\n    (key) => key.id === '#atproto' || key.id === `${did}#atproto`,\n  )\n  if (!found?.publicKeyMultibase) return undefined\n  return {\n    type: found.type,\n    publicKeyMultibase: found.publicKeyMultibase,\n  }\n}\n\nexport const getPdsEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#atproto_pds',\n    type: 'AtprotoPersonalDataServer',\n  })\n}\n\nexport const getFeedGenEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_fg',\n    type: 'BskyFeedGenerator',\n  })\n}\n\nexport const getNotifEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_notif',\n    type: 'BskyNotificationService',\n  })\n}\n\nexport const getServiceEndpoint = (\n  doc: DidDocument,\n  opts: { id: string; type: string },\n) => {\n  const did = getDid(doc)\n  let services = doc.service\n  if (!services) return undefined\n  if (typeof services !== 'object') return undefined\n  if (!Array.isArray(services)) {\n    services = [services]\n  }\n  const found = services.find(\n    (service) => service.id === opts.id || service.id === `${did}${opts.id}`,\n  )\n  if (!found) return undefined\n  if (found.type !== opts.type) {\n    return undefined\n  }\n  if (typeof found.serviceEndpoint !== 'string') {\n    return undefined\n  }\n  return validateUrl(found.serviceEndpoint)\n}\n\n// Check protocol and hostname to prevent potential SSRF\nconst validateUrl = (urlStr: string): string | undefined => {\n  let url\n  try {\n    url = new URL(urlStr)\n  } catch {\n    return undefined\n  }\n  if (!['http:', 'https:'].includes(url.protocol)) {\n    return undefined\n  } else if (!url.hostname) {\n    return undefined\n  } else {\n    return urlStr\n  }\n}\n\n// Types\n// --------\n\nconst verificationMethod = z.object({\n  id: z.string(),\n  type: z.string(),\n  controller: z.string(),\n  publicKeyMultibase: z.string().optional(),\n})\n\nconst service = z.object({\n  id: z.string(),\n  type: z.string(),\n  serviceEndpoint: z.union([z.string(), z.record(z.unknown())]),\n})\n\nexport const didDocument = z.object({\n  id: z.string(),\n  alsoKnownAs: z.array(z.string()).optional(),\n  verificationMethod: z.array(verificationMethod).optional(),\n  service: z.array(service).optional(),\n})\n\nexport type DidDocument = z.infer<typeof didDocument>\n", "import { isValidISODateString } from 'iso-datestring-validator'\nimport { CID } from 'multiformats/cid'\nimport { ValidationResult, ValidationError } from '../types'\nimport {\n  ensureValidDid,\n  ensureValidHandle,\n  ensureValidNsid,\n  ensureValidAtUri,\n} from '@atproto/syntax'\nimport { validateLanguage } from '@atproto/common-web'\n\nexport function datetime(path: string, value: string): ValidationResult {\n  try {\n    if (!isValidISODateString(value)) {\n      throw new Error()\n    }\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`,\n      ),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function uri(path: string, value: string): ValidationResult {\n  const isUri = value.match(/^\\w+:(?:\\/\\/)?[^\\s/][^\\s]*$/) !== null\n  if (!isUri) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atUri(path: string, value: string): ValidationResult {\n  try {\n    ensureValidAtUri(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid at-uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function did(path: string, value: string): ValidationResult {\n  try {\n    ensureValidDid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid did`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function handle(path: string, value: string): ValidationResult {\n  try {\n    ensureValidHandle(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid handle`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atIdentifier(path: string, value: string): ValidationResult {\n  const isDid = did(path, value)\n  if (!isDid.success) {\n    const isHandle = handle(path, value)\n    if (!isHandle.success) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be a valid did or a handle`),\n      }\n    }\n  }\n  return { success: true, value }\n}\n\nexport function nsid(path: string, value: string): ValidationResult {\n  try {\n    ensureValidNsid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid nsid`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function cid(path: string, value: string): ValidationResult {\n  try {\n    CID.parse(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a cid string`),\n    }\n  }\n  return { success: true, value }\n}\n\n// The language format validates well-formed BCP 47 language tags: https://www.rfc-editor.org/info/bcp47\nexport function language(path: string, value: string): ValidationResult {\n  if (validateLanguage(value)) {\n    return { success: true, value }\n  }\n  return {\n    success: false,\n    error: new ValidationError(\n      `${path} must be a well-formed BCP 47 language tag`,\n    ),\n  }\n}\n", "import { utf8Len, graphemeLen } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { Lexicons } from '../lexicons'\nimport * as formats from './formats'\nimport {\n  LexUserType,\n  LexBoolean,\n  LexInteger,\n  LexString,\n  ValidationResult,\n  ValidationError,\n  LexBytes,\n} from '../types'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return boolean(lexicons, path, def, value)\n    case 'integer':\n      return integer(lexicons, path, def, value)\n    case 'string':\n      return string(lexicons, path, def, value)\n    case 'bytes':\n      return bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return unknown(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function boolean(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBoolean\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'boolean') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  } else if (type !== 'boolean') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'boolean') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function integer(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexInteger\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'number') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  } else if (!Number.isInteger(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'number') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as number)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maximum\n  if (typeof def.maximum === 'number') {\n    if ((value as number) > def.maximum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be greater than ${def.maximum}`,\n        ),\n      }\n    }\n  }\n\n  // minimum\n  if (typeof def.minimum === 'number') {\n    if ((value as number) < def.minimum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be less than ${def.minimum}`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function string(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexString\n\n  // type\n  if (typeof value === 'undefined') {\n    if (typeof def.default === 'string') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  } else if (typeof value !== 'string') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'string') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as string)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (utf8Len(value) > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (utf8Len(value) < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // maxGraphemes\n  if (typeof def.maxGraphemes === 'number') {\n    if (graphemeLen(value) > def.maxGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  // minGraphemes\n  if (typeof def.minGraphemes === 'number') {\n    if (graphemeLen(value) < def.minGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  if (typeof def.format === 'string') {\n    switch (def.format) {\n      case 'datetime':\n        return formats.datetime(path, value)\n      case 'uri':\n        return formats.uri(path, value)\n      case 'at-uri':\n        return formats.atUri(path, value)\n      case 'did':\n        return formats.did(path, value)\n      case 'handle':\n        return formats.handle(path, value)\n      case 'at-identifier':\n        return formats.atIdentifier(path, value)\n      case 'nsid':\n        return formats.nsid(path, value)\n      case 'cid':\n        return formats.cid(path, value)\n      case 'language':\n        return formats.language(path, value)\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function bytes(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBytes\n\n  if (!value || !(value instanceof Uint8Array)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a byte array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (value.byteLength > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be larger than ${def.maxLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (value.byteLength < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be smaller than ${def.minLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function cidLink(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  if (CID.asCID(value) === null) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a CID`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function unknown(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  return { success: true, value }\n}\n", "import { check, ipldToJson, schema } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { z } from 'zod'\n\nexport const typedJsonBlobRef = z\n  .object({\n    $type: z.literal('blob'),\n    ref: schema.cid,\n    mimeType: z.string(),\n    size: z.number(),\n  })\n  .strict()\nexport type TypedJsonBlobRef = z.infer<typeof typedJsonBlobRef>\n\nexport const untypedJsonBlobRef = z\n  .object({\n    cid: z.string(),\n    mimeType: z.string(),\n  })\n  .strict()\nexport type UntypedJsonBlobRef = z.infer<typeof untypedJsonBlobRef>\n\nexport const jsonBlobRef = z.union([typedJsonBlobRef, untypedJsonBlobRef])\nexport type JsonBlobRef = z.infer<typeof jsonBlobRef>\n\nexport class BlobRef {\n  public original: JsonBlobRef\n\n  constructor(\n    public ref: CID,\n    public mimeType: string,\n    public size: number,\n    original?: JsonBlobRef,\n  ) {\n    this.original = original ?? {\n      $type: 'blob',\n      ref,\n      mimeType,\n      size,\n    }\n  }\n\n  static asBlobRef(obj: unknown): BlobRef | null {\n    if (check.is(obj, jsonBlobRef)) {\n      return BlobRef.fromJsonRef(obj)\n    }\n    return null\n  }\n\n  static fromJsonRef(json: JsonBlobRef): BlobRef {\n    if (check.is(json, typedJsonBlobRef)) {\n      return new BlobRef(json.ref, json.mimeType, json.size)\n    } else {\n      return new BlobRef(CID.parse(json.cid), json.mimeType, -1, json)\n    }\n  }\n\n  ipld(): TypedJsonBlobRef {\n    return {\n      $type: 'blob',\n      ref: this.ref,\n      mimeType: this.mimeType,\n      size: this.size,\n    }\n  }\n\n  toJSON() {\n    return ipldToJson(this.ipld())\n  }\n}\n", "import { BlobRef } from '../blob-refs'\nimport { Lexicons } from '../lexicons'\nimport { LexUserType, ValidationResult, ValidationError } from '../types'\n\nexport function blob(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // check\n  if (!value || !(value instanceof BlobRef)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} should be a blob ref`),\n    }\n  }\n  return { success: true, value }\n}\n", "import { Lexicons } from '../lexicons'\nimport {\n  LexArray,\n  LexObject,\n  LexUserType,\n  ValidationResult,\n  ValidationError,\n} from '../types'\nimport { validateOneOf } from '../util'\n\nimport * as Primitives from './primitives'\nimport * as Blob from './blob'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return Primitives.boolean(lexicons, path, def, value)\n    case 'integer':\n      return Primitives.integer(lexicons, path, def, value)\n    case 'string':\n      return Primitives.string(lexicons, path, def, value)\n    case 'bytes':\n      return Primitives.bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return Primitives.cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return Primitives.unknown(lexicons, path, def, value)\n    case 'object':\n      return object(lexicons, path, def, value)\n    case 'array':\n      return array(lexicons, path, def, value)\n    case 'blob':\n      return Blob.blob(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function array(\n  lexicons: Lexicons,\n  path: string,\n  def: LexArray,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!Array.isArray(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if ((value as Array<unknown>).length > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have more than ${def.maxLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if ((value as Array<unknown>).length < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have fewer than ${def.minLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // items\n  const itemsDef = def.items\n  for (let i = 0; i < (value as Array<unknown>).length; i++) {\n    const itemValue = value[i]\n    const itemPath = `${path}/${i}`\n    const res = validateOneOf(lexicons, itemPath, itemsDef, itemValue)\n    if (!res.success) {\n      return res\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function object(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexObject\n\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  const requiredProps = new Set(def.required)\n  const nullableProps = new Set(def.nullable)\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      if (value[key] === null && nullableProps.has(key)) {\n        continue\n      }\n      const propDef = def.properties[key]\n      const propPath = `${path}/${key}`\n      const validated = validateOneOf(lexicons, propPath, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport * as ComplexValidators from './validators/complex'\nimport {\n  LexUserType,\n  LexRefVariant,\n  ValidationError,\n  ValidationResult,\n  isDiscriminatedObject,\n} from './types'\nimport { z } from 'zod'\n\nexport function toLexUri(str: string, baseUri?: string): string {\n  if (str.split('#').length > 2) {\n    throw new Error('Uri can only have one hash segment')\n  }\n\n  if (str.startsWith('lex:')) {\n    return str\n  }\n  if (str.startsWith('#')) {\n    if (!baseUri) {\n      throw new Error(`Unable to resolve uri without anchor: ${str}`)\n    }\n    return `${baseUri}${str}`\n  }\n  return `lex:${str}`\n}\n\nexport function validateOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false, // this is the only type constraint we need currently (used by xrpc body schema validators)\n): ValidationResult {\n  let error\n\n  let concreteDefs\n  if (def.type === 'union') {\n    if (!isDiscriminatedObject(value)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be an object which includes the \"$type\" property`,\n        ),\n      }\n    }\n    if (!refsContainType(def.refs, value.$type)) {\n      if (def.closed) {\n        return {\n          success: false,\n          error: new ValidationError(\n            `${path} $type must be one of ${def.refs.join(', ')}`,\n          ),\n        }\n      }\n      return { success: true, value }\n    } else {\n      concreteDefs = toConcreteTypes(lexicons, {\n        type: 'ref',\n        ref: value.$type,\n      })\n    }\n  } else {\n    concreteDefs = toConcreteTypes(lexicons, def)\n  }\n\n  for (const concreteDef of concreteDefs) {\n    const result = mustBeObj\n      ? ComplexValidators.object(lexicons, path, concreteDef, value)\n      : ComplexValidators.validate(lexicons, path, concreteDef, value)\n    if (result.success) {\n      return result\n    }\n    error ??= result.error\n  }\n  if (concreteDefs.length > 1) {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} did not match any of the expected definitions`,\n      ),\n    }\n  }\n  return { success: false, error }\n}\n\nexport function assertValidOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false,\n) {\n  const res = validateOneOf(lexicons, path, def, value, mustBeObj)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function toConcreteTypes(\n  lexicons: Lexicons,\n  def: LexRefVariant | LexUserType,\n): LexUserType[] {\n  if (def.type === 'ref') {\n    return [lexicons.getDefOrThrow(def.ref)]\n  } else if (def.type === 'union') {\n    return def.refs.map((ref) => lexicons.getDefOrThrow(ref)).flat()\n  } else {\n    return [def]\n  }\n}\n\nexport function requiredPropertiesRefinement<\n  ObjectType extends {\n    required?: string[]\n    properties?: Record<string, unknown>\n  },\n>(object: ObjectType, ctx: z.RefinementCtx) {\n  // Required fields check\n  if (object.required === undefined) {\n    return\n  }\n\n  if (!Array.isArray(object.required)) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.invalid_type,\n      received: typeof object.required,\n      expected: 'array',\n    })\n    return\n  }\n\n  if (object.properties === undefined) {\n    if (object.required.length > 0) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required fields defined but no properties defined`,\n      })\n    }\n    return\n  }\n\n  for (const field of object.required) {\n    if (object.properties[field] === undefined) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required field \"${field}\" not defined`,\n      })\n    }\n  }\n}\n\n// to avoid bugs like #0189 this needs to handle both\n// explicit and implicit #main\nconst refsContainType = (refs: string[], type: string) => {\n  const lexUri = toLexUri(type)\n  if (refs.includes(lexUri)) {\n    return true\n  }\n\n  if (lexUri.endsWith('#main')) {\n    return refs.includes(lexUri.replace('#main', ''))\n  } else {\n    return refs.includes(lexUri + '#main')\n  }\n}\n", "import { z } from 'zod'\nimport { NSID } from '@atproto/syntax'\nimport { requiredPropertiesRefinement } from './util'\n\n// primitives\n// =\n\nexport const lexBoolean = z\n  .object({\n    type: z.literal('boolean'),\n    description: z.string().optional(),\n    default: z.boolean().optional(),\n    const: z.boolean().optional(),\n  })\n  .strict()\nexport type LexBoolean = z.infer<typeof lexBoolean>\n\nexport const lexInteger = z\n  .object({\n    type: z.literal('integer'),\n    description: z.string().optional(),\n    default: z.number().int().optional(),\n    minimum: z.number().int().optional(),\n    maximum: z.number().int().optional(),\n    enum: z.number().int().array().optional(),\n    const: z.number().int().optional(),\n  })\n  .strict()\nexport type LexInteger = z.infer<typeof lexInteger>\n\nexport const lexStringFormat = z.enum([\n  'datetime',\n  'uri',\n  'at-uri',\n  'did',\n  'handle',\n  'at-identifier',\n  'nsid',\n  'cid',\n  'language',\n])\nexport type LexStringFormat = z.infer<typeof lexStringFormat>\n\nexport const lexString = z\n  .object({\n    type: z.literal('string'),\n    format: lexStringFormat.optional(),\n    description: z.string().optional(),\n    default: z.string().optional(),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n    minGraphemes: z.number().int().optional(),\n    maxGraphemes: z.number().int().optional(),\n    enum: z.string().array().optional(),\n    const: z.string().optional(),\n    knownValues: z.string().array().optional(),\n  })\n  .strict()\nexport type LexString = z.infer<typeof lexString>\n\nexport const lexUnknown = z\n  .object({\n    type: z.literal('unknown'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexUnknown = z.infer<typeof lexUnknown>\n\nexport const lexPrimitive = z.discriminatedUnion('type', [\n  lexBoolean,\n  lexInteger,\n  lexString,\n  lexUnknown,\n])\nexport type LexPrimitive = z.infer<typeof lexPrimitive>\n\n// ipld types\n// =\n\nexport const lexBytes = z\n  .object({\n    type: z.literal('bytes'),\n    description: z.string().optional(),\n    maxLength: z.number().optional(),\n    minLength: z.number().optional(),\n  })\n  .strict()\nexport type LexBytes = z.infer<typeof lexBytes>\n\nexport const lexCidLink = z\n  .object({\n    type: z.literal('cid-link'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexCidLink = z.infer<typeof lexCidLink>\n\nexport const lexIpldType = z.discriminatedUnion('type', [lexBytes, lexCidLink])\nexport type LexIpldType = z.infer<typeof lexIpldType>\n\n// references\n// =\n\nexport const lexRef = z\n  .object({\n    type: z.literal('ref'),\n    description: z.string().optional(),\n    ref: z.string(),\n  })\n  .strict()\nexport type LexRef = z.infer<typeof lexRef>\n\nexport const lexRefUnion = z\n  .object({\n    type: z.literal('union'),\n    description: z.string().optional(),\n    refs: z.string().array(),\n    closed: z.boolean().optional(),\n  })\n  .strict()\nexport type LexRefUnion = z.infer<typeof lexRefUnion>\n\nexport const lexRefVariant = z.discriminatedUnion('type', [lexRef, lexRefUnion])\nexport type LexRefVariant = z.infer<typeof lexRefVariant>\n\n// blobs\n// =\n\nexport const lexBlob = z\n  .object({\n    type: z.literal('blob'),\n    description: z.string().optional(),\n    accept: z.string().array().optional(),\n    maxSize: z.number().optional(),\n  })\n  .strict()\nexport type LexBlob = z.infer<typeof lexBlob>\n\n// complex types\n// =\n\nexport const lexArray = z\n  .object({\n    type: z.literal('array'),\n    description: z.string().optional(),\n    items: z.union([lexPrimitive, lexIpldType, lexBlob, lexRefVariant]),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n  })\n  .strict()\nexport type LexArray = z.infer<typeof lexArray>\n\nexport const lexPrimitiveArray = lexArray.merge(\n  z\n    .object({\n      items: lexPrimitive,\n    })\n    .strict(),\n)\nexport type LexPrimitiveArray = z.infer<typeof lexPrimitiveArray>\n\nexport const lexToken = z\n  .object({\n    type: z.literal('token'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexToken = z.infer<typeof lexToken>\n\nexport const lexObject = z\n  .object({\n    type: z.literal('object'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    nullable: z.string().array().optional(),\n    properties: z.record(\n      z.union([lexRefVariant, lexIpldType, lexArray, lexBlob, lexPrimitive]),\n    ),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexObject = z.infer<typeof lexObject>\n\n// xrpc\n// =\n\nexport const lexXrpcParameters = z\n  .object({\n    type: z.literal('params'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    properties: z.record(z.union([lexPrimitive, lexPrimitiveArray])),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexXrpcParameters = z.infer<typeof lexXrpcParameters>\n\nexport const lexXrpcBody = z\n  .object({\n    description: z.string().optional(),\n    encoding: z.string(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcBody = z.infer<typeof lexXrpcBody>\n\nexport const lexXrpcSubscriptionMessage = z\n  .object({\n    description: z.string().optional(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcSubscriptionMessage = z.infer<\n  typeof lexXrpcSubscriptionMessage\n>\n\nexport const lexXrpcError = z\n  .object({\n    name: z.string(),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexXrpcError = z.infer<typeof lexXrpcError>\n\nexport const lexXrpcQuery = z\n  .object({\n    type: z.literal('query'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcQuery = z.infer<typeof lexXrpcQuery>\n\nexport const lexXrpcProcedure = z\n  .object({\n    type: z.literal('procedure'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    input: lexXrpcBody.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcProcedure = z.infer<typeof lexXrpcProcedure>\n\nexport const lexXrpcSubscription = z\n  .object({\n    type: z.literal('subscription'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    message: lexXrpcSubscriptionMessage.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcSubscription = z.infer<typeof lexXrpcSubscription>\n\n// database\n// =\n\nexport const lexRecord = z\n  .object({\n    type: z.literal('record'),\n    description: z.string().optional(),\n    key: z.string().optional(),\n    record: lexObject,\n  })\n  .strict()\nexport type LexRecord = z.infer<typeof lexRecord>\n\n// core\n// =\n\n// We need to use `z.custom` here because\n// lexXrpcProperty and lexObject are refined\n// `z.union` would work, but it's too slow\n// see #915 for details\nexport const lexUserType = z.custom<\n  | LexRecord\n  | LexXrpcQuery\n  | LexXrpcProcedure\n  | LexXrpcSubscription\n  | LexBlob\n  | LexArray\n  | LexToken\n  | LexObject\n  | LexBoolean\n  | LexInteger\n  | LexString\n  | LexBytes\n  | LexCidLink\n  | LexUnknown\n>(\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return\n    }\n\n    if (val['type'] === undefined) {\n      return\n    }\n\n    switch (val['type']) {\n      case 'record':\n        return lexRecord.parse(val)\n\n      case 'query':\n        return lexXrpcQuery.parse(val)\n      case 'procedure':\n        return lexXrpcProcedure.parse(val)\n      case 'subscription':\n        return lexXrpcSubscription.parse(val)\n\n      case 'blob':\n        return lexBlob.parse(val)\n\n      case 'array':\n        return lexArray.parse(val)\n      case 'token':\n        return lexToken.parse(val)\n      case 'object':\n        return lexObject.parse(val)\n\n      case 'boolean':\n        return lexBoolean.parse(val)\n      case 'integer':\n        return lexInteger.parse(val)\n      case 'string':\n        return lexString.parse(val)\n      case 'bytes':\n        return lexBytes.parse(val)\n      case 'cid-link':\n        return lexCidLink.parse(val)\n      case 'unknown':\n        return lexUnknown.parse(val)\n    }\n  },\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return {\n        message: 'Must be an object',\n        fatal: true,\n      }\n    }\n\n    if (val['type'] === undefined) {\n      return {\n        message: 'Must have a type',\n        fatal: true,\n      }\n    }\n\n    return {\n      message: `Invalid type: ${val['type']} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,\n      fatal: true,\n    }\n  },\n)\nexport type LexUserType = z.infer<typeof lexUserType>\n\nexport const lexiconDoc = z\n  .object({\n    lexicon: z.literal(1),\n    id: z.string().refine((v: string) => NSID.isValid(v), {\n      message: 'Must be a valid NSID',\n    }),\n    revision: z.number().optional(),\n    description: z.string().optional(),\n    defs: z.record(lexUserType),\n  })\n  .strict()\n  .superRefine((doc, ctx) => {\n    for (const defId in doc.defs) {\n      const def = doc.defs[defId]\n      if (\n        defId !== 'main' &&\n        (def.type === 'record' ||\n          def.type === 'procedure' ||\n          def.type === 'query' ||\n          def.type === 'subscription')\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Records, procedures, queries, and subscriptions must be the main definition.`,\n        })\n      }\n    }\n  })\nexport type LexiconDoc = z.infer<typeof lexiconDoc>\n\n// helpers\n// =\n\nexport function isValidLexiconDoc(v: unknown): v is LexiconDoc {\n  return lexiconDoc.safeParse(v).success\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj !== null && typeof obj === 'object'\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n\nexport const discriminatedObject = z.object({ $type: z.string() })\nexport type DiscriminatedObject = z.infer<typeof discriminatedObject>\nexport function isDiscriminatedObject(\n  value: unknown,\n): value is DiscriminatedObject {\n  return discriminatedObject.safeParse(value).success\n}\n\nexport function parseLexiconDoc(v: unknown): LexiconDoc {\n  lexiconDoc.parse(v)\n  return v as LexiconDoc\n}\n\nexport type ValidationResult =\n  | {\n      success: true\n      value: unknown\n    }\n  | {\n      success: false\n      error: ValidationError\n    }\n\nexport class ValidationError extends Error {}\nexport class InvalidLexiconError extends Error {}\nexport class LexiconDefNotFoundError extends Error {}\n", "import { Lexicons } from '../lexicons'\nimport { LexXrpcParameters, ValidationResult, ValidationError } from '../types'\n\nimport * as PrimitiveValidators from './primitives'\nimport { array } from './complex'\n\nexport function params(\n  lexicons: Lexicons,\n  path: string,\n  def: LexXrpcParameters,\n  val: unknown,\n): ValidationResult {\n  // type\n  const value = val && typeof val === 'object' ? val : {}\n\n  const requiredProps = new Set(def.required ?? [])\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      const propDef = def.properties[key]\n      const validated =\n        propDef.type === 'array'\n          ? array(lexicons, key, propDef, value[key])\n          : PrimitiveValidators.validate(lexicons, key, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport {\n  LexRecord,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  LexXrpcSubscription,\n} from './types'\nimport { assertValidOneOf } from './util'\n\nimport * as ComplexValidators from './validators/complex'\nimport * as XrpcValidators from './validators/xrpc'\n\nexport function assertValidRecord(\n  lexicons: Lexicons,\n  def: LexRecord,\n  value: unknown,\n) {\n  const res = ComplexValidators.object(lexicons, 'Record', def.record, value)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function assertValidXrpcParams(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.parameters) {\n    const res = XrpcValidators.params(lexicons, 'Params', def.parameters, value)\n    if (!res.success) throw res.error\n    return res.value\n  }\n}\n\nexport function assertValidXrpcInput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure,\n  value: unknown,\n) {\n  if (def.input?.schema) {\n    // loop: all input schema definitions\n    return assertValidOneOf(lexicons, 'Input', def.input.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcOutput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery,\n  value: unknown,\n) {\n  if (def.output?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(lexicons, 'Output', def.output.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcMessage(\n  lexicons: Lexicons,\n  def: LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.message?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(\n      lexicons,\n      'Message',\n      def.message.schema,\n      value,\n      true,\n    )\n  }\n}\n", "import {\n  LexiconDoc,\n  LexRecord,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  LexUserType,\n  LexiconDefNotFoundError,\n  InvalidLexiconError,\n  ValidationResult,\n  ValidationError,\n  isObj,\n  hasProp,\n  LexXrpcSubscription,\n} from './types'\nimport {\n  assertValidRecord,\n  assertValidXrpcParams,\n  assertValidXrpcInput,\n  assertValidXrpcOutput,\n  assertValidXrpcMessage,\n} from './validation'\nimport { toLexUri } from './util'\nimport * as ComplexValidators from './validators/complex'\n\n/**\n * A collection of compiled lexicons.\n */\nexport class Lexicons {\n  docs: Map<string, LexiconDoc> = new Map()\n  defs: Map<string, LexUserType> = new Map()\n\n  constructor(docs?: LexiconDoc[]) {\n    if (docs?.length) {\n      for (const doc of docs) {\n        this.add(doc)\n      }\n    }\n  }\n\n  /**\n   * Add a lexicon doc.\n   */\n  add(doc: LexiconDoc): void {\n    const uri = toLexUri(doc.id)\n    if (this.docs.has(uri)) {\n      throw new Error(`${uri} has already been registered`)\n    }\n\n    // WARNING\n    // mutates the object\n    // -prf\n    resolveRefUris(doc, uri)\n\n    this.docs.set(uri, doc)\n    for (const [defUri, def] of iterDefs(doc)) {\n      this.defs.set(defUri, def)\n    }\n  }\n\n  /**\n   * Remove a lexicon doc.\n   */\n  remove(uri: string) {\n    uri = toLexUri(uri)\n    const doc = this.docs.get(uri)\n    if (!doc) {\n      throw new Error(`Unable to remove \"${uri}\": does not exist`)\n    }\n    for (const [defUri, _def] of iterDefs(doc)) {\n      this.defs.delete(defUri)\n    }\n    this.docs.delete(uri)\n  }\n\n  /**\n   * Get a lexicon doc.\n   */\n  get(uri: string): LexiconDoc | undefined {\n    uri = toLexUri(uri)\n    return this.docs.get(uri)\n  }\n\n  /**\n   * Get a definition.\n   */\n  getDef(uri: string): LexUserType | undefined {\n    uri = toLexUri(uri)\n    return this.defs.get(uri)\n  }\n\n  /**\n   * Get a def, throw if not found. Throws on not found.\n   */\n  getDefOrThrow(uri: string, types?: string[]): LexUserType {\n    const def = this.getDef(uri)\n    if (!def) {\n      throw new LexiconDefNotFoundError(`Lexicon not found: ${uri}`)\n    }\n    if (types && !types.includes(def.type)) {\n      throw new InvalidLexiconError(\n        `Not a ${types.join(' or ')} lexicon: ${uri}`,\n      )\n    }\n    return def\n  }\n\n  /**\n   * Validate a record or object.\n   */\n  validate(lexUri: string, value: unknown): ValidationResult {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record', 'object'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Value must be an object`)\n    }\n    if (def.type === 'record') {\n      return ComplexValidators.object(this, 'Record', def.record, value)\n    } else if (def.type === 'object') {\n      return ComplexValidators.object(this, 'Object', def, value)\n    } else {\n      // shouldnt happen\n      throw new InvalidLexiconError('Definition must be a record or object')\n    }\n  }\n\n  /**\n   * Validate a record and throw on any error.\n   */\n  assertValidRecord(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Record must be an object`)\n    }\n    if (!hasProp(value, '$type') || typeof value.$type !== 'string') {\n      throw new ValidationError(`Record/$type must be a string`)\n    }\n    const $type = (value as Record<string, string>).$type || ''\n    if (toLexUri($type) !== lexUri) {\n      throw new ValidationError(\n        `Invalid $type: must be ${lexUri}, got ${$type}`,\n      )\n    }\n    return assertValidRecord(this, def as LexRecord, value)\n  }\n\n  /**\n   * Validate xrpc query params and throw on any error.\n   */\n  assertValidXrpcParams(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, [\n      'query',\n      'procedure',\n      'subscription',\n    ])\n    return assertValidXrpcParams(\n      this,\n      def as LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription,\n      value,\n    )\n  }\n\n  /**\n   * Validate xrpc input body and throw on any error.\n   */\n  assertValidXrpcInput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['procedure'])\n    return assertValidXrpcInput(this, def as LexXrpcProcedure, value)\n  }\n\n  /**\n   * Validate xrpc output body and throw on any error.\n   */\n  assertValidXrpcOutput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['query', 'procedure'])\n    return assertValidXrpcOutput(\n      this,\n      def as LexXrpcProcedure | LexXrpcQuery,\n      value,\n    )\n  }\n\n  /**\n   * Validate xrpc subscription message and throw on any error.\n   */\n  assertValidXrpcMessage<T = unknown>(lexUri: string, value: unknown): T {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['subscription'])\n    return assertValidXrpcMessage(this, def as LexXrpcSubscription, value) as T\n  }\n\n  /**\n   * Resolve a lex uri given a ref\n   */\n  resolveLexUri(lexUri: string, ref: string) {\n    lexUri = toLexUri(lexUri)\n    return toLexUri(ref, lexUri)\n  }\n}\n\nfunction* iterDefs(doc: LexiconDoc): Generator<[string, LexUserType]> {\n  for (const defId in doc.defs) {\n    yield [`lex:${doc.id}#${defId}`, doc.defs[defId]]\n    if (defId === 'main') {\n      yield [`lex:${doc.id}`, doc.defs[defId]]\n    }\n  }\n}\n\n// WARNING\n// this method mutates objects\n// -prf\nfunction resolveRefUris(obj: any, baseUri: string): any {\n  for (const k in obj) {\n    if (obj.type === 'ref') {\n      obj.ref = toLexUri(obj.ref, baseUri)\n    } else if (obj.type === 'union') {\n      obj.refs = obj.refs.map((ref) => toLexUri(ref, baseUri))\n    } else if (Array.isArray(obj[k])) {\n      obj[k] = obj[k].map((item: any) => {\n        if (typeof item === 'string') {\n          return item.startsWith('#') ? toLexUri(item, baseUri) : item\n        } else if (item && typeof item === 'object') {\n          return resolveRefUris(item, baseUri)\n        }\n        return item\n      })\n    } else if (obj[k] && typeof obj[k] === 'object') {\n      obj[k] = resolveRefUris(obj[k], baseUri)\n    }\n  }\n  return obj\n}\n", "import {\n  check,\n  IpldValue,\n  ipldToJson,\n  jsonToIpld,\n  JsonValue,\n} from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { BlobRef, jsonBlobRef } from './blob-refs'\n\nexport type LexValue =\n  | IpldValue\n  | BlobRef\n  | Array<LexValue>\n  | { [key: string]: LexValue }\n\nexport type RepoRecord = Record<string, LexValue>\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const lexToIpld = (val: LexValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => lexToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, leaving the original encoding so that we don't change CIDs on re-encode\n    if (val instanceof BlobRef) {\n      return val.original\n    }\n    // retain cids & bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = lexToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToLex = (val: IpldValue): LexValue => {\n  // map arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToLex(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, using hints to avoid expensive is() check\n    if (\n      (val['$type'] === 'blob' ||\n        (typeof val['cid'] === 'string' &&\n          typeof val['mimeType'] === 'string')) &&\n      check.is(val, jsonBlobRef)\n    ) {\n      return BlobRef.fromJsonRef(val)\n    }\n    // retain cids, bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // map plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToLex(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const lexToJson = (val: LexValue): JsonValue => {\n  return ipldToJson(lexToIpld(val))\n}\n\nexport const stringifyLex = (val: LexValue): string => {\n  return JSON.stringify(lexToJson(val))\n}\n\nexport const jsonToLex = (val: JsonValue): LexValue => {\n  return ipldToLex(jsonToIpld(val))\n}\n\nexport const jsonStringToLex = (val: string): LexValue => {\n  return jsonToLex(JSON.parse(val))\n}\n", "import { z } from 'zod'\nimport { ValidationError } from '@atproto/lexicon'\n\nexport type QueryParams = Record<string, any>\nexport type Headers = Record<string, string>\n\nexport interface CallOptions {\n  encoding?: string\n  headers?: Headers\n}\n\nexport interface FetchHandlerResponse {\n  status: number\n  headers: Headers\n  body: ArrayBuffer | undefined\n}\n\nexport type FetchHandler = (\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: any,\n) => Promise<FetchHandlerResponse>\n\nexport const errorResponseBody = z.object({\n  error: z.string().optional(),\n  message: z.string().optional(),\n})\nexport type ErrorResponseBody = z.infer<typeof errorResponseBody>\n\nexport enum ResponseType {\n  Unknown = 1,\n  InvalidResponse = 2,\n  Success = 200,\n  InvalidRequest = 400,\n  AuthRequired = 401,\n  Forbidden = 403,\n  XRPCNotSupported = 404,\n  PayloadTooLarge = 413,\n  RateLimitExceeded = 429,\n  InternalServerError = 500,\n  MethodNotImplemented = 501,\n  UpstreamFailure = 502,\n  NotEnoughResources = 503,\n  UpstreamTimeout = 504,\n}\n\nexport const ResponseTypeNames = {\n  [ResponseType.InvalidResponse]: 'InvalidResponse',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'InvalidRequest',\n  [ResponseType.AuthRequired]: 'AuthenticationRequired',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPCNotSupported',\n  [ResponseType.PayloadTooLarge]: 'PayloadTooLarge',\n  [ResponseType.RateLimitExceeded]: 'RateLimitExceeded',\n  [ResponseType.InternalServerError]: 'InternalServerError',\n  [ResponseType.MethodNotImplemented]: 'MethodNotImplemented',\n  [ResponseType.UpstreamFailure]: 'UpstreamFailure',\n  [ResponseType.NotEnoughResources]: 'NotEnoughResources',\n  [ResponseType.UpstreamTimeout]: 'UpstreamTimeout',\n}\n\nexport const ResponseTypeStrings = {\n  [ResponseType.InvalidResponse]: 'Invalid Response',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'Invalid Request',\n  [ResponseType.AuthRequired]: 'Authentication Required',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPC Not Supported',\n  [ResponseType.PayloadTooLarge]: 'Payload Too Large',\n  [ResponseType.RateLimitExceeded]: 'Rate Limit Exceeded',\n  [ResponseType.InternalServerError]: 'Internal Server Error',\n  [ResponseType.MethodNotImplemented]: 'Method Not Implemented',\n  [ResponseType.UpstreamFailure]: 'Upstream Failure',\n  [ResponseType.NotEnoughResources]: 'Not Enough Resources',\n  [ResponseType.UpstreamTimeout]: 'Upstream Timeout',\n}\n\nexport class XRPCResponse {\n  success = true\n\n  constructor(public data: any, public headers: Headers) {}\n}\n\nexport class XRPCError extends Error {\n  success = false\n  headers?: Headers\n\n  constructor(\n    public status: ResponseType,\n    public error?: string,\n    message?: string,\n    headers?: Headers,\n  ) {\n    super(message || error || ResponseTypeStrings[status])\n    if (!this.error) {\n      this.error = ResponseTypeNames[status]\n    }\n    this.headers = headers\n  }\n}\n\nexport class XRPCInvalidResponseError extends XRPCError {\n  constructor(\n    public lexiconNsid: string,\n    public validationError: ValidationError,\n    public responseBody: unknown,\n  ) {\n    super(\n      ResponseType.InvalidResponse,\n      ResponseTypeStrings[ResponseType.InvalidResponse],\n      `The server gave an invalid response and may be out of date.`,\n    )\n  }\n}\n", "import {\n  jsonStringToLex,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  stringifyLex,\n} from '@atproto/lexicon'\nimport {\n  CallOptions,\n  Headers,\n  QueryParams,\n  ResponseType,\n  XRPCError,\n} from './types'\n\nexport function getMethodSchemaHTTPMethod(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n) {\n  if (schema.type === 'procedure') {\n    return 'post'\n  }\n  return 'get'\n}\n\nexport function constructMethodCallUri(\n  nsid: string,\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  serviceUri: URL,\n  params?: QueryParams,\n): string {\n  const uri = new URL(serviceUri)\n  uri.pathname = `/xrpc/${nsid}`\n\n  // given parameters\n  if (params) {\n    for (const [key, value] of Object.entries(params)) {\n      const paramSchema = schema.parameters?.properties?.[key]\n      if (!paramSchema) {\n        throw new Error(`Invalid query parameter: ${key}`)\n      }\n      if (value !== undefined) {\n        if (paramSchema.type === 'array') {\n          const vals: typeof value[] = []\n          vals.concat(value).forEach((val) => {\n            uri.searchParams.append(\n              key,\n              encodeQueryParam(paramSchema.items.type, val),\n            )\n          })\n        } else {\n          uri.searchParams.set(key, encodeQueryParam(paramSchema.type, value))\n        }\n      }\n    }\n  }\n\n  return uri.toString()\n}\n\nexport function encodeQueryParam(\n  type:\n    | 'string'\n    | 'float'\n    | 'integer'\n    | 'boolean'\n    | 'datetime'\n    | 'array'\n    | 'unknown',\n  value: any,\n): string {\n  if (type === 'string' || type === 'unknown') {\n    return String(value)\n  }\n  if (type === 'float') {\n    return String(Number(value))\n  } else if (type === 'integer') {\n    return String(Number(value) | 0)\n  } else if (type === 'boolean') {\n    return value ? 'true' : 'false'\n  } else if (type === 'datetime') {\n    if (value instanceof Date) {\n      return value.toISOString()\n    }\n    return String(value)\n  }\n  throw new Error(`Unsupported query param type: ${type}`)\n}\n\nexport function normalizeHeaders(headers: Headers): Headers {\n  const normalized: Headers = {}\n  for (const [header, value] of Object.entries(headers)) {\n    normalized[header.toLowerCase()] = value\n  }\n\n  return normalized\n}\n\nexport function constructMethodCallHeaders(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  data?: any,\n  opts?: CallOptions,\n): Headers {\n  const headers: Headers = opts?.headers || {}\n  if (schema.type === 'procedure') {\n    if (opts?.encoding) {\n      headers['Content-Type'] = opts.encoding\n    }\n    if (data && typeof data === 'object') {\n      if (!headers['Content-Type']) {\n        headers['Content-Type'] = 'application/json'\n      }\n    }\n  }\n  return headers\n}\n\nexport function encodeMethodCallBody(\n  headers: Headers,\n  data?: any,\n): ArrayBuffer | undefined {\n  if (!headers['content-type'] || typeof data === 'undefined') {\n    return undefined\n  }\n  if (data instanceof ArrayBuffer) {\n    return data\n  }\n  if (headers['content-type'].startsWith('text/')) {\n    return new TextEncoder().encode(data.toString())\n  }\n  if (headers['content-type'].startsWith('application/json')) {\n    return new TextEncoder().encode(stringifyLex(data))\n  }\n  return data\n}\n\nexport function httpResponseCodeToEnum(status: number): ResponseType {\n  let resCode: ResponseType\n  if (status in ResponseType) {\n    resCode = status\n  } else if (status >= 100 && status < 200) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 200 && status < 300) {\n    resCode = ResponseType.Success\n  } else if (status >= 300 && status < 400) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 400 && status < 500) {\n    resCode = ResponseType.InvalidRequest\n  } else {\n    resCode = ResponseType.InternalServerError\n  }\n  return resCode\n}\n\nexport function httpResponseBodyParse(\n  mimeType: string | null,\n  data: ArrayBuffer | undefined,\n): any {\n  if (mimeType) {\n    if (mimeType.includes('application/json') && data?.byteLength) {\n      try {\n        const str = new TextDecoder().decode(data)\n        return jsonStringToLex(str)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n    if (mimeType.startsWith('text/') && data?.byteLength) {\n      try {\n        return new TextDecoder().decode(data)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n  }\n  if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  }\n  return data\n}\n", "import { LexiconDoc, Lexicons, ValidationError } from '@atproto/lexicon'\nimport {\n  getMethodSchemaHTTPMethod,\n  constructMethodCallUri,\n  constructMethodCallHeaders,\n  encodeMethodCallBody,\n  httpResponseCodeToEnum,\n  httpResponseBodyParse,\n  normalizeHeaders,\n} from './util'\nimport {\n  FetchHandler,\n  FetchHandlerResponse,\n  Headers,\n  CallOptions,\n  QueryParams,\n  ResponseType,\n  errorResponseBody,\n  ErrorResponseBody,\n  XRPCResponse,\n  XRPCError,\n  XRPCInvalidResponseError,\n} from './types'\n\nexport class Client {\n  fetch: FetchHandler = defaultFetchHandler\n  lex = new Lexicons()\n\n  // method calls\n  //\n\n  async call(\n    serviceUri: string | URL,\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    return this.service(serviceUri).call(methodNsid, params, data, opts)\n  }\n\n  service(serviceUri: string | URL) {\n    return new ServiceClient(this, serviceUri)\n  }\n\n  // schemas\n  // =\n\n  addLexicon(doc: LexiconDoc) {\n    this.lex.add(doc)\n  }\n\n  addLexicons(docs: LexiconDoc[]) {\n    for (const doc of docs) {\n      this.addLexicon(doc)\n    }\n  }\n\n  removeLexicon(uri: string) {\n    this.lex.remove(uri)\n  }\n}\n\nexport class ServiceClient {\n  baseClient: Client\n  uri: URL\n  headers: Record<string, string> = {}\n\n  constructor(baseClient: Client, serviceUri: string | URL) {\n    this.baseClient = baseClient\n    this.uri = typeof serviceUri === 'string' ? new URL(serviceUri) : serviceUri\n  }\n\n  setHeader(key: string, value: string): void {\n    this.headers[key] = value\n  }\n\n  unsetHeader(key: string): void {\n    delete this.headers[key]\n  }\n\n  async call(\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    const def = this.baseClient.lex.getDefOrThrow(methodNsid)\n    if (!def || (def.type !== 'query' && def.type !== 'procedure')) {\n      throw new Error(\n        `Invalid lexicon: ${methodNsid}. Must be a query or procedure.`,\n      )\n    }\n\n    const httpMethod = getMethodSchemaHTTPMethod(def)\n    const httpUri = constructMethodCallUri(methodNsid, def, this.uri, params)\n    const httpHeaders = constructMethodCallHeaders(def, data, {\n      headers: {\n        ...this.headers,\n        ...opts?.headers,\n      },\n      encoding: opts?.encoding,\n    })\n\n    const res = await this.baseClient.fetch(\n      httpUri,\n      httpMethod,\n      httpHeaders,\n      data,\n    )\n\n    const resCode = httpResponseCodeToEnum(res.status)\n    if (resCode === ResponseType.Success) {\n      try {\n        this.baseClient.lex.assertValidXrpcOutput(methodNsid, res.body)\n      } catch (e: any) {\n        if (e instanceof ValidationError) {\n          throw new XRPCInvalidResponseError(methodNsid, e, res.body)\n        } else {\n          throw e\n        }\n      }\n      return new XRPCResponse(res.body, res.headers)\n    } else {\n      if (res.body && isErrorResponseBody(res.body)) {\n        throw new XRPCError(\n          resCode,\n          res.body.error,\n          res.body.message,\n          res.headers,\n        )\n      } else {\n        throw new XRPCError(resCode)\n      }\n    }\n  }\n}\n\nexport async function defaultFetchHandler(\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: unknown,\n): Promise<FetchHandlerResponse> {\n  try {\n    // The duplex field is now required for streaming bodies, but not yet reflected\n    // anywhere in docs or types. See whatwg/fetch#1438, nodejs/node#46221.\n    const headers = normalizeHeaders(httpHeaders)\n    const reqInit: RequestInit & { duplex: string } = {\n      method: httpMethod,\n      headers,\n      body: encodeMethodCallBody(headers, httpReqBody),\n      duplex: 'half',\n    }\n    const res = await fetch(httpUri, reqInit)\n    const resBody = await res.arrayBuffer()\n    return {\n      status: res.status,\n      headers: Object.fromEntries(res.headers.entries()),\n      body: httpResponseBodyParse(res.headers.get('content-type'), resBody),\n    }\n  } catch (e) {\n    throw new XRPCError(ResponseType.Unknown, String(e))\n  }\n}\n\nfunction isErrorResponseBody(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n", "export * from './types'\nexport * from './client'\n\nimport { Client } from './client'\nconst defaultInst = new Client()\nexport default defaultInst\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { LexiconDoc, Lexicons } from '@atproto/lexicon'\n\nexport const schemaDict = {\n  ComAtprotoAdminDefs: {\n    lexicon: 1,\n    id: 'com.atproto.admin.defs',\n    defs: {\n      statusAttr: {\n        type: 'object',\n        required: ['applied'],\n        properties: {\n          applied: {\n            type: 'boolean',\n          },\n          ref: {\n            type: 'string',\n          },\n        },\n      },\n      modEventView: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobCids',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#modEventTakedown',\n              'lex:com.atproto.admin.defs#modEventReverseTakedown',\n              'lex:com.atproto.admin.defs#modEventComment',\n              'lex:com.atproto.admin.defs#modEventReport',\n              'lex:com.atproto.admin.defs#modEventLabel',\n              'lex:com.atproto.admin.defs#modEventAcknowledge',\n              'lex:com.atproto.admin.defs#modEventEscalate',\n              'lex:com.atproto.admin.defs#modEventMute',\n              'lex:com.atproto.admin.defs#modEventEmail',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          creatorHandle: {\n            type: 'string',\n          },\n          subjectHandle: {\n            type: 'string',\n          },\n        },\n      },\n      modEventViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobs',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#modEventTakedown',\n              'lex:com.atproto.admin.defs#modEventReverseTakedown',\n              'lex:com.atproto.admin.defs#modEventComment',\n              'lex:com.atproto.admin.defs#modEventReport',\n              'lex:com.atproto.admin.defs#modEventLabel',\n              'lex:com.atproto.admin.defs#modEventAcknowledge',\n              'lex:com.atproto.admin.defs#modEventEscalate',\n              'lex:com.atproto.admin.defs#modEventMute',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoView',\n              'lex:com.atproto.admin.defs#repoViewNotFound',\n              'lex:com.atproto.admin.defs#recordView',\n              'lex:com.atproto.admin.defs#recordViewNotFound',\n            ],\n          },\n          subjectBlobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#blobView',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reportView: {\n        type: 'object',\n        required: [\n          'id',\n          'reasonType',\n          'subject',\n          'reportedBy',\n          'createdAt',\n          'resolvedByActionIds',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          reasonType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n          comment: {\n            type: 'string',\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          reportedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          resolvedByActionIds: {\n            type: 'array',\n            items: {\n              type: 'integer',\n            },\n          },\n        },\n      },\n      subjectStatusView: {\n        type: 'object',\n        required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the last update was made to the moderation status of the subject',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n          },\n          reviewState: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectReviewState',\n          },\n          comment: {\n            type: 'string',\n            description: 'Sticky comment on the subject.',\n          },\n          muteUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReviewedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastReviewedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReportedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          takendown: {\n            type: 'boolean',\n          },\n          suspendUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reportViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'reasonType',\n          'subject',\n          'reportedBy',\n          'createdAt',\n          'resolvedByActions',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          reasonType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n          comment: {\n            type: 'string',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoView',\n              'lex:com.atproto.admin.defs#repoViewNotFound',\n              'lex:com.atproto.admin.defs#recordView',\n              'lex:com.atproto.admin.defs#recordViewNotFound',\n            ],\n          },\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n          reportedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          resolvedByActions: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#modEventView',\n            },\n          },\n        },\n      },\n      repoView: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoViewDetail: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderationDetail',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      accountView: {\n        type: 'object',\n        required: ['did', 'handle', 'indexedAt'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoViewNotFound: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoRef: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoBlobRef: {\n        type: 'object',\n        required: ['did', 'cid'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      recordView: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobCids',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoView',\n          },\n        },\n      },\n      recordViewDetail: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobs',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#blobView',\n            },\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderationDetail',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoView',\n          },\n        },\n      },\n      recordViewNotFound: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      moderation: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n        },\n      },\n      moderationDetail: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n        },\n      },\n      blobView: {\n        type: 'object',\n        required: ['cid', 'mimeType', 'size', 'createdAt'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          mimeType: {\n            type: 'string',\n          },\n          size: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          details: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#imageDetails',\n              'lex:com.atproto.admin.defs#videoDetails',\n            ],\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n        },\n      },\n      imageDetails: {\n        type: 'object',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n        },\n      },\n      videoDetails: {\n        type: 'object',\n        required: ['width', 'height', 'length'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n          length: {\n            type: 'integer',\n          },\n        },\n      },\n      subjectReviewState: {\n        type: 'string',\n        knownValues: [\n          'lex:com.atproto.admin.defs#reviewOpen',\n          'lex:com.atproto.admin.defs#reviewEscalated',\n          'lex:com.atproto.admin.defs#reviewClosed',\n        ],\n      },\n      reviewOpen: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n      },\n      reviewEscalated: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n      },\n      reviewClosed: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n      },\n      modEventTakedown: {\n        type: 'object',\n        description: 'Take down a subject permanently or temporarily',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the takedown should be in effect before automatically expiring.',\n          },\n        },\n      },\n      modEventReverseTakedown: {\n        type: 'object',\n        description: 'Revert take down action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventComment: {\n        type: 'object',\n        description: 'Add a comment to a subject',\n        required: ['comment'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          sticky: {\n            type: 'boolean',\n            description: 'Make the comment persistent on the subject',\n          },\n        },\n      },\n      modEventReport: {\n        type: 'object',\n        description: 'Report a subject',\n        required: ['reportType'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          reportType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n        },\n      },\n      modEventLabel: {\n        type: 'object',\n        description: 'Apply/Negate labels on a subject',\n        required: ['createLabelVals', 'negateLabelVals'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          createLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          negateLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      modEventAcknowledge: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventEscalate: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventMute: {\n        type: 'object',\n        description: 'Mute incoming reports on a subject',\n        required: ['durationInHours'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description: 'Indicates how long the subject should remain muted.',\n          },\n        },\n      },\n      modEventUnmute: {\n        type: 'object',\n        description: 'Unmute action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventEmail: {\n        type: 'object',\n        description: 'Keep a log of outgoing email to a user',\n        required: ['subjectLine'],\n        properties: {\n          subjectLine: {\n            type: 'string',\n            description: 'The subject line of the email sent to the user.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for disabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable some set of codes and/or all codes associated with a set of users.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminEmitModerationEvent: {\n    lexicon: 1,\n    id: 'com.atproto.admin.emitModerationEvent',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Take a moderation action on an actor.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['event', 'subject', 'createdBy'],\n            properties: {\n              event: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#modEventTakedown',\n                  'lex:com.atproto.admin.defs#modEventAcknowledge',\n                  'lex:com.atproto.admin.defs#modEventEscalate',\n                  'lex:com.atproto.admin.defs#modEventComment',\n                  'lex:com.atproto.admin.defs#modEventLabel',\n                  'lex:com.atproto.admin.defs#modEventReport',\n                  'lex:com.atproto.admin.defs#modEventMute',\n                  'lex:com.atproto.admin.defs#modEventReverseTakedown',\n                  'lex:com.atproto.admin.defs#modEventUnmute',\n                  'lex:com.atproto.admin.defs#modEventEmail',\n                ],\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              subjectBlobCids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#modEventView',\n          },\n        },\n        errors: [\n          {\n            name: 'SubjectHasAction',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminEnableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.enableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Re-enable an account's ability to receive invite codes.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for enabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about an account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get an admin view of invite codes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            sort: {\n              type: 'string',\n              knownValues: ['recent', 'usage'],\n              default: 'recent',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 500,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetModerationEvent: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getModerationEvent',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a moderation event.',\n        parameters: {\n          type: 'params',\n          required: ['id'],\n          properties: {\n            id: {\n              type: 'integer',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#modEventViewDetail',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a record.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#recordViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a repository.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminGetSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getSubjectStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the service-specific admin status of a subject (account, record, or blob).',\n        parameters: {\n          type: 'params',\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            blob: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminQueryModerationEvents: {\n    lexicon: 1,\n    id: 'com.atproto.admin.queryModerationEvents',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List moderation events related to a subject.',\n        parameters: {\n          type: 'params',\n          properties: {\n            types: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'The types of events (fully qualified string in the format of com.atproto.admin#modEvent<name>) to filter by. If not specified, all events are returned.',\n            },\n            createdBy: {\n              type: 'string',\n              format: 'did',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n              description:\n                'Sort direction for the events. Defaults to descending order of created at timestamp.',\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              default: false,\n              description:\n                'If true, events on all record types (posts, lists, profile etc.) owned by the did are returned',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['events'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              events: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#modEventView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminQueryModerationStatuses: {\n    lexicon: 1,\n    id: 'com.atproto.admin.queryModerationStatuses',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'View moderation statuses of subjects (record or repo).',\n        parameters: {\n          type: 'params',\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            comment: {\n              type: 'string',\n              description: 'Search subjects by keyword from comments',\n            },\n            reportedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported after a given timestamp',\n            },\n            reportedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported before a given timestamp',\n            },\n            reviewedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed after a given timestamp',\n            },\n            reviewedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed before a given timestamp',\n            },\n            includeMuted: {\n              type: 'boolean',\n              description:\n                \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n            },\n            reviewState: {\n              type: 'string',\n              description: 'Specify when fetching subjects in a certain state',\n            },\n            ignoreSubjects: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uri',\n              },\n            },\n            lastReviewedBy: {\n              type: 'string',\n              format: 'did',\n              description:\n                'Get all subject statuses that were reviewed by a specific moderator',\n            },\n            sortField: {\n              type: 'string',\n              default: 'lastReportedAt',\n              enum: ['lastReviewedAt', 'lastReportedAt'],\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n            },\n            takendown: {\n              type: 'boolean',\n              description: 'Get subjects that were taken down',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subjectStatuses'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              subjectStatuses: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSearchRepos: {\n    lexicon: 1,\n    id: 'com.atproto.admin.searchRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find repositories based on a search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead\",\n            },\n            q: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#repoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSendEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.sendEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Send email to a user's account email address.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['recipientDid', 'content', 'senderDid'],\n            properties: {\n              recipientDid: {\n                type: 'string',\n                format: 'did',\n              },\n              content: {\n                type: 'string',\n              },\n              subject: {\n                type: 'string',\n              },\n              senderDid: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sent'],\n            properties: {\n              sent: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account', 'email'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountHandle: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's handle.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'handle'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateSubjectStatus',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the service-specific admin status of a subject (account, record, or blob).',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityResolveHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.resolveHandle',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Provides the DID of a repo.',\n        parameters: {\n          type: 'params',\n          required: ['handle'],\n          properties: {\n            handle: {\n              type: 'string',\n              format: 'handle',\n              description: 'The handle to resolve.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityUpdateHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.updateHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Updates the handle of the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelDefs: {\n    lexicon: 1,\n    id: 'com.atproto.label.defs',\n    defs: {\n      label: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto resource (eg, repo or record).',\n        required: ['src', 'uri', 'val', 'cts'],\n        properties: {\n          src: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the actor who created this label.',\n          },\n          uri: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'AT URI of the record, repository (account), or other resource that this label applies to.',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n            description:\n              \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n          },\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n          neg: {\n            type: 'boolean',\n            description:\n              'If true, this is a negation label, overwriting a previous label.',\n          },\n          cts: {\n            type: 'string',\n            format: 'datetime',\n            description: 'Timestamp when this label was created.',\n          },\n        },\n      },\n      selfLabels: {\n        type: 'object',\n        description:\n          'Metadata tags on an atproto record, published by the author within the record.',\n        required: ['values'],\n        properties: {\n          values: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#selfLabel',\n            },\n            maxLength: 10,\n          },\n        },\n      },\n      selfLabel: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n        required: ['val'],\n        properties: {\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelQueryLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.queryLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find labels relevant to the provided URI patterns.',\n        parameters: {\n          type: 'params',\n          required: ['uriPatterns'],\n          properties: {\n            uriPatterns: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n            },\n            sources: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n              description:\n                'Optional list of label sources (DIDs) to filter on.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelSubscribeLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.subscribeLabels',\n    defs: {\n      main: {\n        type: 'subscription',\n        description: 'Subscribe to label updates.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.label.subscribeLabels#labels',\n              'lex:com.atproto.label.subscribeLabels#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n        ],\n      },\n      labels: {\n        type: 'object',\n        required: ['seq', 'labels'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationCreateReport: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.createReport',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Report a repo or a record.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['reasonType', 'subject'],\n            properties: {\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'id',\n              'reasonType',\n              'subject',\n              'reportedBy',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'integer',\n              },\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              reportedBy: {\n                type: 'string',\n                format: 'did',\n              },\n              createdAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationDefs: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.defs',\n    defs: {\n      reasonType: {\n        type: 'string',\n        knownValues: [\n          'com.atproto.moderation.defs#reasonSpam',\n          'com.atproto.moderation.defs#reasonViolation',\n          'com.atproto.moderation.defs#reasonMisleading',\n          'com.atproto.moderation.defs#reasonSexual',\n          'com.atproto.moderation.defs#reasonRude',\n          'com.atproto.moderation.defs#reasonOther',\n        ],\n      },\n      reasonSpam: {\n        type: 'token',\n        description: 'Spam: frequent unwanted promotion, replies, mentions',\n      },\n      reasonViolation: {\n        type: 'token',\n        description: 'Direct violation of server rules, laws, terms of service',\n      },\n      reasonMisleading: {\n        type: 'token',\n        description: 'Misleading identity, affiliation, or content',\n      },\n      reasonSexual: {\n        type: 'token',\n        description: 'Unwanted or mislabeled sexual content',\n      },\n      reasonRude: {\n        type: 'token',\n        description:\n          'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n      },\n      reasonOther: {\n        type: 'token',\n        description: 'Other: reports not falling under another report category',\n      },\n    },\n  },\n  ComAtprotoRepoApplyWrites: {\n    lexicon: 1,\n    id: 'com.atproto.repo.applyWrites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Apply a batch transaction of creates, updates, and deletes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'writes'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the records.',\n              },\n              writes: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#create',\n                    'lex:com.atproto.repo.applyWrites#update',\n                    'lex:com.atproto.repo.applyWrites#delete',\n                  ],\n                  closed: true,\n                },\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n      create: {\n        type: 'object',\n        description: 'Create a new record.',\n        required: ['collection', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            maxLength: 15,\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      update: {\n        type: 'object',\n        description: 'Update an existing record.',\n        required: ['collection', 'rkey', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      delete: {\n        type: 'object',\n        description: 'Delete an existing record.',\n        required: ['collection', 'rkey'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoCreateRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.createRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create a new record.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'record'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the record.',\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to create.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDeleteRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.deleteRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Delete a record, or ensure it doesn't exist.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDescribeRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.describeRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about the repo, including the list of collections.',\n        parameters: {\n          type: 'params',\n          required: ['repo'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'handle',\n              'did',\n              'didDoc',\n              'collections',\n              'handleIsCorrect',\n            ],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              collections: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              handleIsCorrect: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a record.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection', 'rkey'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record collection.',\n            },\n            rkey: {\n              type: 'string',\n              description: 'The key of the record.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'The CID of the version of the record. If not specified, then return the most recent version.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'value'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              value: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListRecords: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List a range of records in a collection.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record type.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n              description: 'The number of records to return.',\n            },\n            cursor: {\n              type: 'string',\n            },\n            rkeyStart: {\n              type: 'string',\n              description:\n                'DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)',\n            },\n            rkeyEnd: {\n              type: 'string',\n              description:\n                'DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)',\n            },\n            reverse: {\n              type: 'boolean',\n              description: 'Flag to reverse the order of the returned records.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              records: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listRecords#record',\n                },\n              },\n            },\n          },\n        },\n      },\n      record: {\n        type: 'object',\n        required: ['uri', 'cid', 'value'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoPutRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.putRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Write a record, creating or updating it as needed.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey', 'record'],\n            nullable: ['swapRecord'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the record.',\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to write.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoStrongRef: {\n    lexicon: 1,\n    id: 'com.atproto.repo.strongRef',\n    description: 'A URI with a content-hash fingerprint.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoUploadBlob: {\n    lexicon: 1,\n    id: 'com.atproto.repo.uploadBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Upload a new blob to be added to repo in a later request.',\n        input: {\n          encoding: '*/*',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blob'],\n            properties: {\n              blob: {\n                type: 'blob',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerConfirmEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.confirmEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email', 'token'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountNotFound',\n          },\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'InvalidEmail',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              inviteCode: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n              recoveryKey: {\n                type: 'string',\n              },\n              plcOp: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an App Password.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'password', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          password: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCode: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCode',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an invite code.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['useCount'],\n            properties: {\n              useCount: {\n                type: 'integer',\n              },\n              forAccount: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['code'],\n            properties: {\n              code: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create invite codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codeCount', 'useCount'],\n            properties: {\n              codeCount: {\n                type: 'integer',\n                default: 1,\n              },\n              useCount: {\n                type: 'integer',\n              },\n              forAccounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'did',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                },\n              },\n            },\n          },\n        },\n      },\n      accountCodes: {\n        type: 'object',\n        required: ['account', 'codes'],\n        properties: {\n          account: {\n            type: 'string',\n          },\n          codes: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.createSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an authentication session.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['identifier', 'password'],\n            properties: {\n              identifier: {\n                type: 'string',\n                description:\n                  'Handle or other identifier supported by the server for the authenticating user.',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDefs: {\n    lexicon: 1,\n    id: 'com.atproto.server.defs',\n    defs: {\n      inviteCode: {\n        type: 'object',\n        required: [\n          'code',\n          'available',\n          'disabled',\n          'forAccount',\n          'createdBy',\n          'createdAt',\n          'uses',\n        ],\n        properties: {\n          code: {\n            type: 'string',\n          },\n          available: {\n            type: 'integer',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          forAccount: {\n            type: 'string',\n          },\n          createdBy: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          uses: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n            },\n          },\n        },\n      },\n      inviteCodeUse: {\n        type: 'object',\n        required: ['usedBy', 'usedAt'],\n        properties: {\n          usedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          usedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Delete an actor's account with a token and password.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password', 'token'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeleteSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete the current session.',\n      },\n    },\n  },\n  ComAtprotoServerDescribeServer: {\n    lexicon: 1,\n    id: 'com.atproto.server.describeServer',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a document describing the service's accounts configuration.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['availableUserDomains'],\n            properties: {\n              inviteCodeRequired: {\n                type: 'boolean',\n              },\n              availableUserDomains: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:com.atproto.server.describeServer#links',\n              },\n            },\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetAccountInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.getAccountInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get all invite codes for a given account.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeUsed: {\n              type: 'boolean',\n              default: true,\n            },\n            createAvailable: {\n              type: 'boolean',\n              default: true,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateCreate',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.getSession',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about the current session.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerListAppPasswords: {\n    lexicon: 1,\n    id: 'com.atproto.server.listAppPasswords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all App Passwords.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['passwords'],\n            properties: {\n              passwords: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRefreshSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.refreshSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Refresh an authentication session.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRequestAccountDelete: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestAccountDelete',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account deletion via email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailConfirmation: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailConfirmation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to confirm ownership of email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a token in order to update email.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['tokenRequired'],\n            properties: {\n              tokenRequired: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRequestPasswordReset: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestPasswordReset',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account password reset via email.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerReserveSigningKey: {\n    lexicon: 1,\n    id: 'com.atproto.server.reserveSigningKey',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reserve a repo signing key for account creation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              did: {\n                type: 'string',\n                description: 'The did to reserve a new did:key for',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['signingKey'],\n            properties: {\n              signingKey: {\n                type: 'string',\n                description: 'Public signing key in the form of a did:key.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerResetPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.resetPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reset a user account password using a token.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token', 'password'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRevokeAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.revokeAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Revoke an App Password by name.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerUpdateEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.updateEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n                description:\n                  \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'TokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlob: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlob',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a blob associated with a given repo.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cid'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description: 'The CID of the blob to fetch',\n            },\n          },\n        },\n        output: {\n          encoding: '*/*',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetBlocks: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get blocks from a given repo.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cids'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetCheckout: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getCheckout',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetHead: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getHead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'HeadNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetLatestCommit: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getLatestCommit',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the current commit CID & revision of the repo.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cid', 'rev'],\n            properties: {\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get blocks needed for existence or non-existence of record.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'collection', 'rkey'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            rkey: {\n              type: 'string',\n            },\n            commit: {\n              type: 'string',\n              format: 'cid',\n              description: 'An optional past commit CID.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets the DID's repo, optionally catching up from a specific revision.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'The revision of the repo to catch up from.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List blob CIDs since some revision.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'Optional revision of the repo to list blobs since.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cids'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              cids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List DIDs and root CIDs of hosted repos.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listRepos#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did', 'head', 'rev'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          head: {\n            type: 'string',\n            format: 'cid',\n          },\n          rev: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncNotifyOfUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.sync.notifyOfUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify a crawling service of a recent update; often when a long break between updates causes the connection with the crawling service to break.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the service that is notifying of update.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncRequestCrawl: {\n    lexicon: 1,\n    id: 'com.atproto.sync.requestCrawl',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a service to persistently crawl hosted repos.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the service that is requesting to be crawled.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncSubscribeRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.subscribeRepos',\n    defs: {\n      main: {\n        type: 'subscription',\n        description: 'Subscribe to repo updates.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.sync.subscribeRepos#commit',\n              'lex:com.atproto.sync.subscribeRepos#handle',\n              'lex:com.atproto.sync.subscribeRepos#migrate',\n              'lex:com.atproto.sync.subscribeRepos#tombstone',\n              'lex:com.atproto.sync.subscribeRepos#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n          {\n            name: 'ConsumerTooSlow',\n          },\n        ],\n      },\n      commit: {\n        type: 'object',\n        required: [\n          'seq',\n          'rebase',\n          'tooBig',\n          'repo',\n          'commit',\n          'rev',\n          'since',\n          'blocks',\n          'ops',\n          'blobs',\n          'time',\n        ],\n        nullable: ['prev', 'since'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          rebase: {\n            type: 'boolean',\n          },\n          tooBig: {\n            type: 'boolean',\n          },\n          repo: {\n            type: 'string',\n            format: 'did',\n          },\n          commit: {\n            type: 'cid-link',\n          },\n          prev: {\n            type: 'cid-link',\n          },\n          rev: {\n            type: 'string',\n            description: 'The rev of the emitted commit.',\n          },\n          since: {\n            type: 'string',\n            description: 'The rev of the last emitted commit from this repo.',\n          },\n          blocks: {\n            type: 'bytes',\n            description: 'CAR file containing relevant blocks.',\n            maxLength: 1000000,\n          },\n          ops: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n            },\n            maxLength: 200,\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'cid-link',\n            },\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      handle: {\n        type: 'object',\n        required: ['seq', 'did', 'handle', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      migrate: {\n        type: 'object',\n        required: ['seq', 'did', 'migrateTo', 'time'],\n        nullable: ['migrateTo'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          migrateTo: {\n            type: 'string',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      tombstone: {\n        type: 'object',\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n      repoOp: {\n        type: 'object',\n        description:\n          \"A repo operation, ie a write of a single record. For creates and updates, CID is the record's CID as of this operation. For deletes, it's null.\",\n        required: ['action', 'path', 'cid'],\n        nullable: ['cid'],\n        properties: {\n          action: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          path: {\n            type: 'string',\n          },\n          cid: {\n            type: 'cid-link',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempFetchLabels: {\n    lexicon: 1,\n    id: 'com.atproto.temp.fetchLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Fetch all labels from a labeler created after a certain date.',\n        parameters: {\n          type: 'params',\n          properties: {\n            since: {\n              type: 'integer',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorDefs: {\n    lexicon: 1,\n    id: 'app.bsky.actor.defs',\n    description: 'A reference to an actor in the network.',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileView: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileViewDetailed: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          banner: {\n            type: 'string',\n          },\n          followersCount: {\n            type: 'integer',\n          },\n          followsCount: {\n            type: 'integer',\n          },\n          postsCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          mutedByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          blockedBy: {\n            type: 'boolean',\n          },\n          blocking: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blockingByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      preferences: {\n        type: 'array',\n        items: {\n          type: 'union',\n          refs: [\n            'lex:app.bsky.actor.defs#adultContentPref',\n            'lex:app.bsky.actor.defs#contentLabelPref',\n            'lex:app.bsky.actor.defs#savedFeedsPref',\n            'lex:app.bsky.actor.defs#personalDetailsPref',\n            'lex:app.bsky.actor.defs#feedViewPref',\n            'lex:app.bsky.actor.defs#threadViewPref',\n          ],\n        },\n      },\n      adultContentPref: {\n        type: 'object',\n        required: ['enabled'],\n        properties: {\n          enabled: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n      },\n      contentLabelPref: {\n        type: 'object',\n        required: ['label', 'visibility'],\n        properties: {\n          label: {\n            type: 'string',\n          },\n          visibility: {\n            type: 'string',\n            knownValues: ['show', 'warn', 'hide'],\n          },\n        },\n      },\n      savedFeedsPref: {\n        type: 'object',\n        required: ['pinned', 'saved'],\n        properties: {\n          pinned: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          saved: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n        },\n      },\n      personalDetailsPref: {\n        type: 'object',\n        properties: {\n          birthDate: {\n            type: 'string',\n            format: 'datetime',\n            description: 'The birth date of account owner.',\n          },\n        },\n      },\n      feedViewPref: {\n        type: 'object',\n        required: ['feed'],\n        properties: {\n          feed: {\n            type: 'string',\n            description:\n              'The URI of the feed, or an identifier which describes the feed.',\n          },\n          hideReplies: {\n            type: 'boolean',\n            description: 'Hide replies in the feed.',\n          },\n          hideRepliesByUnfollowed: {\n            type: 'boolean',\n            description:\n              'Hide replies in the feed if they are not by followed users.',\n          },\n          hideRepliesByLikeCount: {\n            type: 'integer',\n            description:\n              'Hide replies in the feed if they do not have this number of likes.',\n          },\n          hideReposts: {\n            type: 'boolean',\n            description: 'Hide reposts in the feed.',\n          },\n          hideQuotePosts: {\n            type: 'boolean',\n            description: 'Hide quote posts in the feed.',\n          },\n        },\n      },\n      threadViewPref: {\n        type: 'object',\n        properties: {\n          sort: {\n            type: 'string',\n            description: 'Sorting mode for threads.',\n            knownValues: ['oldest', 'newest', 'most-likes', 'random'],\n          },\n          prioritizeFollowedUsers: {\n            type: 'boolean',\n            description: 'Show followed users at the top of all replies.',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getPreferences',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get private preferences attached to the account.',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfile',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile view of an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfiles: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfiles',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile views of multiple actors.',\n        parameters: {\n          type: 'params',\n          required: ['actors'],\n          properties: {\n            actors: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['profiles'],\n            properties: {\n              profiles: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of suggested actors, used for discovery.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.profile',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a profile.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          properties: {\n            displayName: {\n              type: 'string',\n              maxGraphemes: 64,\n              maxLength: 640,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 256,\n              maxLength: 2560,\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            banner: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Set the private preferences attached to the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActors: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActors',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find actors (profiles) matching search criteria.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActorsTypeahead: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActorsTypeahead',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find actor suggestions for a prefix search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description: 'Search query prefix; not a full query string.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedExternal: {\n    lexicon: 1,\n    id: 'app.bsky.embed.external',\n    description:\n      'A representation of some externally linked content, embedded in another form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#external',\n          },\n        },\n      },\n      external: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#viewExternal',\n          },\n        },\n      },\n      viewExternal: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedImages: {\n    lexicon: 1,\n    id: 'app.bsky.embed.images',\n    description: 'A set of images embedded in some other form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#image',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      image: {\n        type: 'object',\n        required: ['image', 'alt'],\n        properties: {\n          image: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n          alt: {\n            type: 'string',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n      aspectRatio: {\n        type: 'object',\n        description:\n          'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n            minimum: 1,\n          },\n          height: {\n            type: 'integer',\n            minimum: 1,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#viewImage',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      viewImage: {\n        type: 'object',\n        required: ['thumb', 'fullsize', 'alt'],\n        properties: {\n          thumb: {\n            type: 'string',\n          },\n          fullsize: {\n            type: 'string',\n          },\n          alt: {\n            type: 'string',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecord: {\n    lexicon: 1,\n    id: 'app.bsky.embed.record',\n    description:\n      'A representation of a record embedded in another form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.record#viewRecord',\n              'lex:app.bsky.embed.record#viewNotFound',\n              'lex:app.bsky.embed.record#viewBlocked',\n              'lex:app.bsky.feed.defs#generatorView',\n              'lex:app.bsky.graph.defs#listView',\n            ],\n          },\n        },\n      },\n      viewRecord: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          value: {\n            type: 'unknown',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          embeds: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images#view',\n                'lex:app.bsky.embed.external#view',\n                'lex:app.bsky.embed.record#view',\n                'lex:app.bsky.embed.recordWithMedia#view',\n              ],\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      viewNotFound: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      viewBlocked: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecordWithMedia: {\n    lexicon: 1,\n    id: 'app.bsky.embed.recordWithMedia',\n    description:\n      'A representation of a record embedded in another form of content, alongside other compatible embeds.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record',\n          },\n          media: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.images', 'lex:app.bsky.embed.external'],\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record#view',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n            ],\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.feed.defs',\n    defs: {\n      postView: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          record: {\n            type: 'unknown',\n          },\n          embed: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n              'lex:app.bsky.embed.record#view',\n              'lex:app.bsky.embed.recordWithMedia#view',\n            ],\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          threadgate: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadgateView',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          replyDisabled: {\n            type: 'boolean',\n          },\n        },\n      },\n      feedViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          reply: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#replyRef',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#reasonRepost'],\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n        },\n      },\n      reasonRepost: {\n        type: 'object',\n        required: ['by', 'indexedAt'],\n        properties: {\n          by: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      threadViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#threadViewPost',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          replies: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.defs#threadViewPost',\n                'lex:app.bsky.feed.defs#notFoundPost',\n                'lex:app.bsky.feed.defs#blockedPost',\n              ],\n            },\n          },\n        },\n      },\n      notFoundPost: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      blockedPost: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      blockedAuthor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n        },\n      },\n      generatorView: {\n        type: 'object',\n        required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      generatorViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonFeedPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#skeletonReasonRepost'],\n          },\n        },\n      },\n      skeletonReasonRepost: {\n        type: 'object',\n        required: ['repost'],\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      threadgateView: {\n        type: 'object',\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          lists: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listViewBasic',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDescribeFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.describeFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator, including policies and offered feed URIs.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'feeds'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n              },\n            },\n          },\n        },\n      },\n      feed: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.generator',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of the existence of a feed generator.',\n        key: 'any',\n        record: {\n          type: 'object',\n          required: ['did', 'displayName', 'createdAt'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            displayName: {\n              type: 'string',\n              maxGraphemes: 24,\n              maxLength: 240,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of feeds created by the actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of posts liked by an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetAuthorFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getAuthorFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of an actor's feed.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            filter: {\n              type: 'string',\n              knownValues: [\n                'posts_with_replies',\n                'posts_no_replies',\n                'posts_with_media',\n              ],\n              default: 'posts_with_replies',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a hydrated feed from an actor's selected feed generator.\",\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a feed generator.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['view', 'isOnline', 'isValid'],\n            properties: {\n              view: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#generatorView',\n              },\n              isOnline: {\n                type: 'boolean',\n              },\n              isValid: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of feed generators.',\n        parameters: {\n          type: 'params',\n          required: ['feeds'],\n          properties: {\n            feeds: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a skeleton of a feed provided by a feed generator.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the list of likes.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'likes'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              likes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.getLikes#like',\n                },\n              },\n            },\n          },\n        },\n      },\n      like: {\n        type: 'object',\n        required: ['indexedAt', 'createdAt', 'actor'],\n        properties: {\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          actor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetListFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getListFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a view of a recent posts from actors in a list.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownList',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPostThread: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPostThread',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get posts in a thread.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            depth: {\n              type: 'integer',\n              default: 6,\n              minimum: 0,\n              maximum: 1000,\n            },\n            parentHeight: {\n              type: 'integer',\n              default: 80,\n              minimum: 0,\n              maximum: 1000,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['thread'],\n            properties: {\n              thread: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.defs#threadViewPost',\n                  'lex:app.bsky.feed.defs#notFoundPost',\n                  'lex:app.bsky.feed.defs#blockedPost',\n                ],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'NotFound',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of an actor's feed.\",\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetRepostedBy: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getRepostedBy',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of reposts.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'repostedBy'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              repostedBy: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetSuggestedFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getSuggestedFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of suggested feeds for the viewer.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetTimeline: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getTimeline',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of the actor's home timeline.\",\n        parameters: {\n          type: 'params',\n          properties: {\n            algorithm: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedLike: {\n    lexicon: 1,\n    id: 'app.bsky.feed.like',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a like.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.post',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a post.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['text', 'createdAt'],\n          properties: {\n            text: {\n              type: 'string',\n              maxLength: 3000,\n              maxGraphemes: 300,\n            },\n            entities: {\n              type: 'array',\n              description: 'Deprecated: replaced by app.bsky.richtext.facet.',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.post#entity',\n              },\n            },\n            facets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            reply: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.post#replyRef',\n            },\n            embed: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images',\n                'lex:app.bsky.embed.external',\n                'lex:app.bsky.embed.record',\n                'lex:app.bsky.embed.recordWithMedia',\n              ],\n            },\n            langs: {\n              type: 'array',\n              maxLength: 3,\n              items: {\n                type: 'string',\n                format: 'language',\n              },\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            tags: {\n              type: 'array',\n              maxLength: 8,\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description: 'Additional non-inline tags describing this post.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n          parent: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      entity: {\n        type: 'object',\n        description: 'Deprecated: use facets instead.',\n        required: ['index', 'type', 'value'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.post#textSlice',\n          },\n          type: {\n            type: 'string',\n            description: \"Expected values are 'mention' and 'link'.\",\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n      textSlice: {\n        type: 'object',\n        description:\n          'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n        required: ['start', 'end'],\n        properties: {\n          start: {\n            type: 'integer',\n            minimum: 0,\n          },\n          end: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedRepost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.repost',\n    defs: {\n      main: {\n        description: 'A declaration of a repost.',\n        type: 'record',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedSearchPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.searchPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find posts matching search criteria.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedThreadgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.threadgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          \"Defines interaction gating rules for a thread. The rkey of the threadgate record should match the rkey of the thread's root post.\",\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            post: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            allow: {\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.threadgate#mentionRule',\n                  'lex:app.bsky.feed.threadgate#followingRule',\n                  'lex:app.bsky.feed.threadgate#listRule',\n                ],\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      mentionRule: {\n        type: 'object',\n        description: 'Allow replies from actors mentioned in your post.',\n        properties: {},\n      },\n      followingRule: {\n        type: 'object',\n        description: 'Allow replies from actors you follow.',\n        properties: {},\n      },\n      listRule: {\n        type: 'object',\n        description: 'Allow replies from actors on a list.',\n        required: ['list'],\n        properties: {\n          list: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphBlock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.block',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a block.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphDefs: {\n    lexicon: 1,\n    id: 'app.bsky.graph.defs',\n    defs: {\n      listViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'name', 'purpose'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listItemView: {\n        type: 'object',\n        required: ['uri', 'subject'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          subject: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n      listPurpose: {\n        type: 'string',\n        knownValues: [\n          'app.bsky.graph.defs#modlist',\n          'app.bsky.graph.defs#curatelist',\n        ],\n      },\n      modlist: {\n        type: 'token',\n        description:\n          'A list of actors to apply an aggregate moderation action (mute/block) on.',\n      },\n      curatelist: {\n        type: 'token',\n        description:\n          'A list of actors used for curation purposes such as list feeds or interaction gating.',\n      },\n      listViewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          blocked: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphFollow: {\n    lexicon: 1,\n    id: 'app.bsky.graph.follow',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a social follow.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor is blocking.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blocks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blocks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a list of an actor's followers.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollows: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollows',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor follows.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'follows'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              follows: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getList',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of actors.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list', 'items'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              list: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#listView',\n              },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listItemView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get lists that the actor is blocking.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get lists that the actor is muting.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetLists: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getLists',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of lists that belong to an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor mutes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['mutes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              mutes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetSuggestedFollowsByActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getSuggestedFollowsByActor',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get suggested follows related to a given actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.list',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'purpose', 'createdAt'],\n          properties: {\n            purpose: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listPurpose',\n            },\n            name: {\n              type: 'string',\n              maxLength: 64,\n              minLength: 1,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListblock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listblock',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A block of an entire list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListitem: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listitem',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'An item under a declared list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'list', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Mute an actor by DID or handle.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Mute a list of actors.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmute an actor by DID or handle.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmute a list of actors.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationGetUnreadCount: {\n    lexicon: 1,\n    id: 'app.bsky.notification.getUnreadCount',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the count of unread notifications.',\n        parameters: {\n          type: 'params',\n          properties: {\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['count'],\n            properties: {\n              count: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationListNotifications: {\n    lexicon: 1,\n    id: 'app.bsky.notification.listNotifications',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of notifications.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['notifications'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              notifications: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.notification.listNotifications#notification',\n                },\n              },\n            },\n          },\n        },\n      },\n      notification: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'author',\n          'reason',\n          'record',\n          'isRead',\n          'indexedAt',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          reason: {\n            type: 'string',\n            description:\n              \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.\",\n            knownValues: [\n              'like',\n              'repost',\n              'follow',\n              'mention',\n              'reply',\n              'quote',\n            ],\n          },\n          reasonSubject: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          record: {\n            type: 'unknown',\n          },\n          isRead: {\n            type: 'boolean',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationRegisterPush: {\n    lexicon: 1,\n    id: 'app.bsky.notification.registerPush',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Register for push notifications with a service.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['serviceDid', 'token', 'platform', 'appId'],\n            properties: {\n              serviceDid: {\n                type: 'string',\n                format: 'did',\n              },\n              token: {\n                type: 'string',\n              },\n              platform: {\n                type: 'string',\n                knownValues: ['ios', 'android', 'web'],\n              },\n              appId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationUpdateSeen: {\n    lexicon: 1,\n    id: 'app.bsky.notification.updateSeen',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Notify server that the user has seen notifications.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['seenAt'],\n            properties: {\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyRichtextFacet: {\n    lexicon: 1,\n    id: 'app.bsky.richtext.facet',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['index', 'features'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.richtext.facet#byteSlice',\n          },\n          features: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.richtext.facet#mention',\n                'lex:app.bsky.richtext.facet#link',\n                'lex:app.bsky.richtext.facet#tag',\n              ],\n            },\n          },\n        },\n      },\n      mention: {\n        type: 'object',\n        description: 'A facet feature for actor mentions.',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      link: {\n        type: 'object',\n        description: 'A facet feature for links.',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      tag: {\n        type: 'object',\n        description: 'A hashtag.',\n        required: ['tag'],\n        properties: {\n          tag: {\n            type: 'string',\n            maxLength: 640,\n            maxGraphemes: 64,\n          },\n        },\n      },\n      byteSlice: {\n        type: 'object',\n        description:\n          'A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings.',\n        required: ['byteStart', 'byteEnd'],\n        properties: {\n          byteStart: {\n            type: 'integer',\n            minimum: 0,\n          },\n          byteEnd: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.defs',\n    defs: {\n      skeletonSearchPost: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonSearchActor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopular: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopular',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: will be removed soon. Use a feed generator alternative.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeNsfw: {\n              type: 'boolean',\n              default: false,\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopularFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopularFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'An unspecced view of globally popular feed generators.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            query: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTimelineSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTimelineSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: a skeleton of a timeline. Unspecced and will be unavailable soon.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchActorsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchActorsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Actors (profile) search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n            },\n            typeahead: {\n              type: 'boolean',\n              description: \"If true, acts as fast/simple 'typeahead' query.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchPostsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchPostsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Posts search, returns only skeleton',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n}\nexport const schemas: LexiconDoc[] = Object.values(schemaDict) as LexiconDoc[]\nexport const lexicons: Lexicons = new Lexicons(schemas)\nexport const ids = {\n  ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n  ComAtprotoAdminDisableAccountInvites:\n    'com.atproto.admin.disableAccountInvites',\n  ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n  ComAtprotoAdminEmitModerationEvent: 'com.atproto.admin.emitModerationEvent',\n  ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n  ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n  ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n  ComAtprotoAdminGetModerationEvent: 'com.atproto.admin.getModerationEvent',\n  ComAtprotoAdminGetRecord: 'com.atproto.admin.getRecord',\n  ComAtprotoAdminGetRepo: 'com.atproto.admin.getRepo',\n  ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n  ComAtprotoAdminQueryModerationEvents:\n    'com.atproto.admin.queryModerationEvents',\n  ComAtprotoAdminQueryModerationStatuses:\n    'com.atproto.admin.queryModerationStatuses',\n  ComAtprotoAdminSearchRepos: 'com.atproto.admin.searchRepos',\n  ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n  ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n  ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n  ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n  ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n  ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n  ComAtprotoLabelDefs: 'com.atproto.label.defs',\n  ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n  ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n  ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n  ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n  ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n  ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n  ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n  ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n  ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n  ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n  ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n  ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n  ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n  ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n  ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n  ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n  ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n  ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n  ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n  ComAtprotoServerDefs: 'com.atproto.server.defs',\n  ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n  ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n  ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n  ComAtprotoServerGetAccountInviteCodes:\n    'com.atproto.server.getAccountInviteCodes',\n  ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n  ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n  ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n  ComAtprotoServerRequestAccountDelete:\n    'com.atproto.server.requestAccountDelete',\n  ComAtprotoServerRequestEmailConfirmation:\n    'com.atproto.server.requestEmailConfirmation',\n  ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n  ComAtprotoServerRequestPasswordReset:\n    'com.atproto.server.requestPasswordReset',\n  ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n  ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n  ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n  ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n  ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n  ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n  ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n  ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n  ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n  ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n  ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n  ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n  ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n  ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n  ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n  ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n  ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n  AppBskyActorDefs: 'app.bsky.actor.defs',\n  AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n  AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n  AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n  AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n  AppBskyActorProfile: 'app.bsky.actor.profile',\n  AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n  AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n  AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n  AppBskyEmbedExternal: 'app.bsky.embed.external',\n  AppBskyEmbedImages: 'app.bsky.embed.images',\n  AppBskyEmbedRecord: 'app.bsky.embed.record',\n  AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n  AppBskyFeedDefs: 'app.bsky.feed.defs',\n  AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n  AppBskyFeedGenerator: 'app.bsky.feed.generator',\n  AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n  AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n  AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n  AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n  AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n  AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n  AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n  AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n  AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n  AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n  AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n  AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n  AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n  AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n  AppBskyFeedLike: 'app.bsky.feed.like',\n  AppBskyFeedPost: 'app.bsky.feed.post',\n  AppBskyFeedRepost: 'app.bsky.feed.repost',\n  AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n  AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n  AppBskyGraphBlock: 'app.bsky.graph.block',\n  AppBskyGraphDefs: 'app.bsky.graph.defs',\n  AppBskyGraphFollow: 'app.bsky.graph.follow',\n  AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n  AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n  AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n  AppBskyGraphGetList: 'app.bsky.graph.getList',\n  AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n  AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n  AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n  AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n  AppBskyGraphGetSuggestedFollowsByActor:\n    'app.bsky.graph.getSuggestedFollowsByActor',\n  AppBskyGraphList: 'app.bsky.graph.list',\n  AppBskyGraphListblock: 'app.bsky.graph.listblock',\n  AppBskyGraphListitem: 'app.bsky.graph.listitem',\n  AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n  AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n  AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n  AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n  AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n  AppBskyNotificationListNotifications:\n    'app.bsky.notification.listNotifications',\n  AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n  AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n  AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n  AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n  AppBskyUnspeccedGetPopular: 'app.bsky.unspecced.getPopular',\n  AppBskyUnspeccedGetPopularFeedGenerators:\n    'app.bsky.unspecced.getPopularFeedGenerators',\n  AppBskyUnspeccedGetTimelineSkeleton: 'app.bsky.unspecced.getTimelineSkeleton',\n  AppBskyUnspeccedSearchActorsSkeleton:\n    'app.bsky.unspecced.searchActorsSkeleton',\n  AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for disabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codes?: string[]\n  accounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  event:\n    | ComAtprotoAdminDefs.ModEventTakedown\n    | ComAtprotoAdminDefs.ModEventAcknowledge\n    | ComAtprotoAdminDefs.ModEventEscalate\n    | ComAtprotoAdminDefs.ModEventComment\n    | ComAtprotoAdminDefs.ModEventLabel\n    | ComAtprotoAdminDefs.ModEventReport\n    | ComAtprotoAdminDefs.ModEventMute\n    | ComAtprotoAdminDefs.ModEventReverseTakedown\n    | ComAtprotoAdminDefs.ModEventUnmute\n    | ComAtprotoAdminDefs.ModEventEmail\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  createdBy: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ComAtprotoAdminDefs.ModEventView\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class SubjectHasActionError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SubjectHasAction') return new SubjectHasActionError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for enabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.AccountView\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface QueryParams {\n  sort?: 'recent' | 'usage' | (string & {})\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  id: number\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.ModEventViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.RecordViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.RepoViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {\n  did?: string\n  uri?: string\n  blob?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  /** The types of events (fully qualified string in the format of com.atproto.admin#modEvent<name>) to filter by. If not specified, all events are returned. */\n  types?: string[]\n  createdBy?: string\n  /** Sort direction for the events. Defaults to descending order of created at timestamp. */\n  sortDirection?: 'asc' | 'desc'\n  subject?: string\n  /** If true, events on all record types (posts, lists, profile etc.) owned by the did are returned */\n  includeAllUserRecords?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  events: ComAtprotoAdminDefs.ModEventView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  subject?: string\n  /** Search subjects by keyword from comments */\n  comment?: string\n  /** Search subjects reported after a given timestamp */\n  reportedAfter?: string\n  /** Search subjects reported before a given timestamp */\n  reportedBefore?: string\n  /** Search subjects reviewed after a given timestamp */\n  reviewedAfter?: string\n  /** Search subjects reviewed before a given timestamp */\n  reviewedBefore?: string\n  /** By default, we don't include muted subjects in the results. Set this to true to include them. */\n  includeMuted?: boolean\n  /** Specify when fetching subjects in a certain state */\n  reviewState?: string\n  ignoreSubjects?: string[]\n  /** Get all subject statuses that were reviewed by a specific moderator */\n  lastReviewedBy?: string\n  sortField?: 'lastReviewedAt' | 'lastReportedAt'\n  sortDirection?: 'asc' | 'desc'\n  /** Get subjects that were taken down */\n  takendown?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  subjectStatuses: ComAtprotoAdminDefs.SubjectStatusView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead */\n  term?: string\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: ComAtprotoAdminDefs.RepoView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  recipientDid: string\n  content: string\n  subject?: string\n  senderDid: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  sent: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  account: string\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle to resolve. */\n  handle: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface QueryParams {\n  /** List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI. */\n  uriPatterns: string[]\n  /** Optional list of label sources (DIDs) to filter on. */\n  sources?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** Flag for validating the records. */\n  validate?: boolean\n  writes: (Create | Update | Delete)[]\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n\n/** Create a new record. */\nexport interface Create {\n  collection: string\n  rkey?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isCreate(v: unknown): v is Create {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#create'\n  )\n}\n\nexport function validateCreate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#create', v)\n}\n\n/** Update an existing record. */\nexport interface Update {\n  collection: string\n  rkey: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isUpdate(v: unknown): v is Update {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#update'\n  )\n}\n\nexport function validateUpdate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#update', v)\n}\n\n/** Delete an existing record. */\nexport interface Delete {\n  collection: string\n  rkey: string\n  [k: string]: unknown\n}\n\nexport function isDelete(v: unknown): v is Delete {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#delete'\n  )\n}\n\nexport function validateDelete(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#delete', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nexport function isObj(v: unknown): v is Record<string, unknown> {\n  return typeof v === 'object' && v !== null\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey?: string\n  /** Flag for validating the record. */\n  validate?: boolean\n  /** The record to create. */\n  record: {}\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  didDoc: {}\n  collections: string[]\n  handleIsCorrect: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** The CID of the version of the record. If not specified, then return the most recent version. */\n  cid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record type. */\n  collection: string\n  /** The number of records to return. */\n  limit?: number\n  cursor?: string\n  /** DEPRECATED: The lowest sort-ordered rkey to start from (exclusive) */\n  rkeyStart?: string\n  /** DEPRECATED: The highest sort-ordered rkey to stop at (exclusive) */\n  rkeyEnd?: string\n  /** Flag to reverse the order of the returned records. */\n  reverse?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  records: Record[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Record {\n  uri: string\n  cid: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listRecords#record'\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listRecords#record', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** Flag for validating the record. */\n  validate?: boolean\n  /** The record to write. */\n  record: {}\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string | null\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface OutputSchema {\n  blob: BlobRef\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class AccountNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidEmailError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountNotFound') return new AccountNotFoundError(e)\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'InvalidEmail') return new InvalidEmailError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email?: string\n  handle: string\n  did?: string\n  inviteCode?: string\n  password?: string\n  recoveryKey?: string\n  plcOp?: {}\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = AppPassword\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  password: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createAppPassword#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createAppPassword#appPassword',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  useCount: number\n  forAccount?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  code: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface AccountCodes {\n  account: string\n  codes: string[]\n  [k: string]: unknown\n}\n\nexport function isAccountCodes(v: unknown): v is AccountCodes {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createInviteCodes#accountCodes'\n  )\n}\n\nexport function validateAccountCodes(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createInviteCodes#accountCodes',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Handle or other identifier supported by the server for the authenticating user. */\n  identifier: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  email?: string\n  emailConfirmed?: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  inviteCodeRequired?: boolean\n  availableUserDomains: string[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#links', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from './defs'\n\nexport interface QueryParams {\n  includeUsed?: boolean\n  createAvailable?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class DuplicateCreateError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateCreate') return new DuplicateCreateError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  passwords: AppPassword[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.listAppPasswords#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.listAppPasswords#appPassword', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  tokenRequired: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The did to reserve a new did:key for */\n  did?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** Public signing key in the form of a did:key. */\n  signingKey: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  token: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  /** Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed. */\n  token?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class TokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'TokenRequired') return new TokenRequiredError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The CID of the blob to fetch */\n  cid: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  cids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class HeadNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'HeadNotFound') return new HeadNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cid: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  collection: string\n  rkey: string\n  /** An optional past commit CID. */\n  commit?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The revision of the repo to catch up from. */\n  since?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** Optional revision of the repo to list blobs since. */\n  since?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  cids: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Repo {\n  did: string\n  head: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport function isRepo(v: unknown): v is Repo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.listRepos#repo'\n  )\n}\n\nexport function validateRepo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.listRepos#repo', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the service that is notifying of update. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the service that is requesting to be crawled. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface QueryParams {\n  since?: number\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = AppBskyActorDefs.ProfileViewDetailed\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actors: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  profiles: AppBskyActorDefs.ProfileViewDetailed[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query prefix; not a full query string. */\n  q?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actors: AppBskyActorDefs.ProfileViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Feed {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isFeed(v: unknown): v is Feed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#feed'\n  )\n}\n\nexport function validateFeed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#feed', v)\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#links', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n  filter?:\n    | 'posts_with_replies'\n    | 'posts_no_replies'\n    | 'posts_with_media'\n    | (string & {})\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  view: AppBskyFeedDefs.GeneratorView\n  isOnline: boolean\n  isValid: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feeds: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  likes: Like[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Like {\n  indexedAt: string\n  createdAt: string\n  actor: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isLike(v: unknown): v is Like {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.getLikes#like'\n  )\n}\n\nexport function validateLike(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.getLikes#like', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownListError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownList') return new UnknownListError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  depth?: number\n  parentHeight?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  thread:\n    | AppBskyFeedDefs.ThreadViewPost\n    | AppBskyFeedDefs.NotFoundPost\n    | AppBskyFeedDefs.BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class NotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'NotFound') return new NotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  repostedBy: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  algorithm?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blocks: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  follows: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  list: AppBskyGraphDefs.ListView\n  items: AppBskyGraphDefs.ListItemView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  mutes: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  count: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Notification {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | (string & {})\n  reasonSubject?: string\n  record: {}\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isNotification(v: unknown): v is Notification {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.notification.listNotifications#notification'\n  )\n}\n\nexport function validateNotification(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.notification.listNotifications#notification',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  serviceDid: string\n  token: string\n  platform: 'ios' | 'android' | 'web' | (string & {})\n  appId: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  seenAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  includeNsfw?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  query?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax. */\n  q: string\n  /** If true, acts as fast/simple 'typeahead' query. */\n  typeahead?: boolean\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyUnspeccedDefs.SkeletonSearchPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\nimport * as ComAtprotoModerationDefs from '../moderation/defs'\nimport * as ComAtprotoServerDefs from '../server/defs'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface StatusAttr {\n  applied: boolean\n  ref?: string\n  [k: string]: unknown\n}\n\nexport function isStatusAttr(v: unknown): v is StatusAttr {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#statusAttr'\n  )\n}\n\nexport function validateStatusAttr(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#statusAttr', v)\n}\n\nexport interface ModEventView {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventEmail\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids: string[]\n  createdBy: string\n  createdAt: string\n  creatorHandle?: string\n  subjectHandle?: string\n  [k: string]: unknown\n}\n\nexport function isModEventView(v: unknown): v is ModEventView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventView'\n  )\n}\n\nexport function validateModEventView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventView', v)\n}\n\nexport interface ModEventViewDetail {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectBlobs: BlobView[]\n  createdBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isModEventViewDetail(v: unknown): v is ModEventViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventViewDetail'\n  )\n}\n\nexport function validateModEventViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventViewDetail', v)\n}\n\nexport interface ReportView {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  comment?: string\n  subjectRepoHandle?: string\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  resolvedByActionIds: number[]\n  [k: string]: unknown\n}\n\nexport function isReportView(v: unknown): v is ReportView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#reportView'\n  )\n}\n\nexport function validateReportView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#reportView', v)\n}\n\nexport interface SubjectStatusView {\n  id: number\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  subjectRepoHandle?: string\n  /** Timestamp referencing when the last update was made to the moderation status of the subject */\n  updatedAt: string\n  /** Timestamp referencing the first moderation status impacting event was emitted on the subject */\n  createdAt: string\n  reviewState: SubjectReviewState\n  /** Sticky comment on the subject. */\n  comment?: string\n  muteUntil?: string\n  lastReviewedBy?: string\n  lastReviewedAt?: string\n  lastReportedAt?: string\n  takendown?: boolean\n  suspendUntil?: string\n  [k: string]: unknown\n}\n\nexport function isSubjectStatusView(v: unknown): v is SubjectStatusView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#subjectStatusView'\n  )\n}\n\nexport function validateSubjectStatusView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#subjectStatusView', v)\n}\n\nexport interface ReportViewDetail {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  comment?: string\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectStatus?: SubjectStatusView\n  reportedBy: string\n  createdAt: string\n  resolvedByActions: ModEventView[]\n  [k: string]: unknown\n}\n\nexport function isReportViewDetail(v: unknown): v is ReportViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#reportViewDetail'\n  )\n}\n\nexport function validateReportViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#reportViewDetail', v)\n}\n\nexport interface RepoView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: Moderation\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invitesDisabled?: boolean\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isRepoView(v: unknown): v is RepoView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoView'\n  )\n}\n\nexport function validateRepoView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoView', v)\n}\n\nexport interface RepoViewDetail {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: ModerationDetail\n  labels?: ComAtprotoLabelDefs.Label[]\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  inviteNote?: string\n  emailConfirmedAt?: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewDetail(v: unknown): v is RepoViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoViewDetail'\n  )\n}\n\nexport function validateRepoViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoViewDetail', v)\n}\n\nexport interface AccountView {\n  did: string\n  handle: string\n  email?: string\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isAccountView(v: unknown): v is AccountView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#accountView'\n  )\n}\n\nexport function validateAccountView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#accountView', v)\n}\n\nexport interface RepoViewNotFound {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewNotFound(v: unknown): v is RepoViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoViewNotFound'\n  )\n}\n\nexport function validateRepoViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoViewNotFound', v)\n}\n\nexport interface RepoRef {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoRef(v: unknown): v is RepoRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoRef'\n  )\n}\n\nexport function validateRepoRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoRef', v)\n}\n\nexport interface RepoBlobRef {\n  did: string\n  cid: string\n  recordUri?: string\n  [k: string]: unknown\n}\n\nexport function isRepoBlobRef(v: unknown): v is RepoBlobRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoBlobRef'\n  )\n}\n\nexport function validateRepoBlobRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoBlobRef', v)\n}\n\nexport interface RecordView {\n  uri: string\n  cid: string\n  value: {}\n  blobCids: string[]\n  indexedAt: string\n  moderation: Moderation\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordView(v: unknown): v is RecordView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordView'\n  )\n}\n\nexport function validateRecordView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordView', v)\n}\n\nexport interface RecordViewDetail {\n  uri: string\n  cid: string\n  value: {}\n  blobs: BlobView[]\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  moderation: ModerationDetail\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordViewDetail(v: unknown): v is RecordViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordViewDetail'\n  )\n}\n\nexport function validateRecordViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordViewDetail', v)\n}\n\nexport interface RecordViewNotFound {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isRecordViewNotFound(v: unknown): v is RecordViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordViewNotFound'\n  )\n}\n\nexport function validateRecordViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordViewNotFound', v)\n}\n\nexport interface Moderation {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModeration(v: unknown): v is Moderation {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#moderation'\n  )\n}\n\nexport function validateModeration(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#moderation', v)\n}\n\nexport interface ModerationDetail {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModerationDetail(v: unknown): v is ModerationDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#moderationDetail'\n  )\n}\n\nexport function validateModerationDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#moderationDetail', v)\n}\n\nexport interface BlobView {\n  cid: string\n  mimeType: string\n  size: number\n  createdAt: string\n  details?:\n    | ImageDetails\n    | VideoDetails\n    | { $type: string; [k: string]: unknown }\n  moderation?: Moderation\n  [k: string]: unknown\n}\n\nexport function isBlobView(v: unknown): v is BlobView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#blobView'\n  )\n}\n\nexport function validateBlobView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#blobView', v)\n}\n\nexport interface ImageDetails {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isImageDetails(v: unknown): v is ImageDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#imageDetails'\n  )\n}\n\nexport function validateImageDetails(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#imageDetails', v)\n}\n\nexport interface VideoDetails {\n  width: number\n  height: number\n  length: number\n  [k: string]: unknown\n}\n\nexport function isVideoDetails(v: unknown): v is VideoDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#videoDetails'\n  )\n}\n\nexport function validateVideoDetails(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#videoDetails', v)\n}\n\nexport type SubjectReviewState =\n  | 'lex:com.atproto.admin.defs#reviewOpen'\n  | 'lex:com.atproto.admin.defs#reviewEscalated'\n  | 'lex:com.atproto.admin.defs#reviewClosed'\n  | (string & {})\n\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexport const REVIEWOPEN = 'com.atproto.admin.defs#reviewOpen'\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexport const REVIEWESCALATED = 'com.atproto.admin.defs#reviewEscalated'\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexport const REVIEWCLOSED = 'com.atproto.admin.defs#reviewClosed'\n\n/** Take down a subject permanently or temporarily */\nexport interface ModEventTakedown {\n  comment?: string\n  /** Indicates how long the takedown should be in effect before automatically expiring. */\n  durationInHours?: number\n  [k: string]: unknown\n}\n\nexport function isModEventTakedown(v: unknown): v is ModEventTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventTakedown'\n  )\n}\n\nexport function validateModEventTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventTakedown', v)\n}\n\n/** Revert take down action on a subject */\nexport interface ModEventReverseTakedown {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventReverseTakedown(\n  v: unknown,\n): v is ModEventReverseTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventReverseTakedown'\n  )\n}\n\nexport function validateModEventReverseTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventReverseTakedown', v)\n}\n\n/** Add a comment to a subject */\nexport interface ModEventComment {\n  comment: string\n  /** Make the comment persistent on the subject */\n  sticky?: boolean\n  [k: string]: unknown\n}\n\nexport function isModEventComment(v: unknown): v is ModEventComment {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventComment'\n  )\n}\n\nexport function validateModEventComment(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventComment', v)\n}\n\n/** Report a subject */\nexport interface ModEventReport {\n  comment?: string\n  reportType: ComAtprotoModerationDefs.ReasonType\n  [k: string]: unknown\n}\n\nexport function isModEventReport(v: unknown): v is ModEventReport {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventReport'\n  )\n}\n\nexport function validateModEventReport(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventReport', v)\n}\n\n/** Apply/Negate labels on a subject */\nexport interface ModEventLabel {\n  comment?: string\n  createLabelVals: string[]\n  negateLabelVals: string[]\n  [k: string]: unknown\n}\n\nexport function isModEventLabel(v: unknown): v is ModEventLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventLabel'\n  )\n}\n\nexport function validateModEventLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventLabel', v)\n}\n\nexport interface ModEventAcknowledge {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventAcknowledge(v: unknown): v is ModEventAcknowledge {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventAcknowledge'\n  )\n}\n\nexport function validateModEventAcknowledge(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventAcknowledge', v)\n}\n\nexport interface ModEventEscalate {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEscalate(v: unknown): v is ModEventEscalate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventEscalate'\n  )\n}\n\nexport function validateModEventEscalate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventEscalate', v)\n}\n\n/** Mute incoming reports on a subject */\nexport interface ModEventMute {\n  comment?: string\n  /** Indicates how long the subject should remain muted. */\n  durationInHours: number\n  [k: string]: unknown\n}\n\nexport function isModEventMute(v: unknown): v is ModEventMute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventMute'\n  )\n}\n\nexport function validateModEventMute(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventMute', v)\n}\n\n/** Unmute action on a subject */\nexport interface ModEventUnmute {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventUnmute(v: unknown): v is ModEventUnmute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventUnmute'\n  )\n}\n\nexport function validateModEventUnmute(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventUnmute', v)\n}\n\n/** Keep a log of outgoing email to a user */\nexport interface ModEventEmail {\n  /** The subject line of the email sent to the user. */\n  subjectLine: string\n  [k: string]: unknown\n}\n\nexport function isModEventEmail(v: unknown): v is ModEventEmail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventEmail'\n  )\n}\n\nexport function validateModEventEmail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventEmail', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Metadata tag on an atproto resource (eg, repo or record). */\nexport interface Label {\n  /** DID of the actor who created this label. */\n  src: string\n  /** AT URI of the record, repository (account), or other resource that this label applies to. */\n  uri: string\n  /** Optionally, CID specifying the specific version of 'uri' resource this label applies to. */\n  cid?: string\n  /** The short string name of the value or type of this label. */\n  val: string\n  /** If true, this is a negation label, overwriting a previous label. */\n  neg?: boolean\n  /** Timestamp when this label was created. */\n  cts: string\n  [k: string]: unknown\n}\n\nexport function isLabel(v: unknown): v is Label {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#label'\n  )\n}\n\nexport function validateLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#label', v)\n}\n\n/** Metadata tags on an atproto record, published by the author within the record. */\nexport interface SelfLabels {\n  values: SelfLabel[]\n  [k: string]: unknown\n}\n\nexport function isSelfLabels(v: unknown): v is SelfLabels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabels'\n  )\n}\n\nexport function validateSelfLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabels', v)\n}\n\n/** Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel. */\nexport interface SelfLabel {\n  /** The short string name of the value or type of this label. */\n  val: string\n  [k: string]: unknown\n}\n\nexport function isSelfLabel(v: unknown): v is SelfLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabel'\n  )\n}\n\nexport function validateSelfLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabel', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface Labels {\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabels(v: unknown): v is Labels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#labels'\n  )\n}\n\nexport function validateLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#labels', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#info', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport type ReasonType =\n  | 'com.atproto.moderation.defs#reasonSpam'\n  | 'com.atproto.moderation.defs#reasonViolation'\n  | 'com.atproto.moderation.defs#reasonMisleading'\n  | 'com.atproto.moderation.defs#reasonSexual'\n  | 'com.atproto.moderation.defs#reasonRude'\n  | 'com.atproto.moderation.defs#reasonOther'\n  | (string & {})\n\n/** Spam: frequent unwanted promotion, replies, mentions */\nexport const REASONSPAM = 'com.atproto.moderation.defs#reasonSpam'\n/** Direct violation of server rules, laws, terms of service */\nexport const REASONVIOLATION = 'com.atproto.moderation.defs#reasonViolation'\n/** Misleading identity, affiliation, or content */\nexport const REASONMISLEADING = 'com.atproto.moderation.defs#reasonMisleading'\n/** Unwanted or mislabeled sexual content */\nexport const REASONSEXUAL = 'com.atproto.moderation.defs#reasonSexual'\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexport const REASONRUDE = 'com.atproto.moderation.defs#reasonRude'\n/** Other: reports not falling under another report category */\nexport const REASONOTHER = 'com.atproto.moderation.defs#reasonOther'\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'com.atproto.repo.strongRef#main' ||\n      v.$type === 'com.atproto.repo.strongRef')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.strongRef#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface InviteCode {\n  code: string\n  available: number\n  disabled: boolean\n  forAccount: string\n  createdBy: string\n  createdAt: string\n  uses: InviteCodeUse[]\n  [k: string]: unknown\n}\n\nexport function isInviteCode(v: unknown): v is InviteCode {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCode'\n  )\n}\n\nexport function validateInviteCode(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCode', v)\n}\n\nexport interface InviteCodeUse {\n  usedBy: string\n  usedAt: string\n  [k: string]: unknown\n}\n\nexport function isInviteCodeUse(v: unknown): v is InviteCodeUse {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCodeUse'\n  )\n}\n\nexport function validateInviteCodeUse(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCodeUse', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Commit {\n  seq: number\n  rebase: boolean\n  tooBig: boolean\n  repo: string\n  commit: CID\n  prev?: CID | null\n  /** The rev of the emitted commit. */\n  rev: string\n  /** The rev of the last emitted commit from this repo. */\n  since: string | null\n  /** CAR file containing relevant blocks. */\n  blocks: Uint8Array\n  ops: RepoOp[]\n  blobs: CID[]\n  time: string\n  [k: string]: unknown\n}\n\nexport function isCommit(v: unknown): v is Commit {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#commit'\n  )\n}\n\nexport function validateCommit(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#commit', v)\n}\n\nexport interface Handle {\n  seq: number\n  did: string\n  handle: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isHandle(v: unknown): v is Handle {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#handle'\n  )\n}\n\nexport function validateHandle(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#handle', v)\n}\n\nexport interface Migrate {\n  seq: number\n  did: string\n  migrateTo: string | null\n  time: string\n  [k: string]: unknown\n}\n\nexport function isMigrate(v: unknown): v is Migrate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#migrate'\n  )\n}\n\nexport function validateMigrate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#migrate', v)\n}\n\nexport interface Tombstone {\n  seq: number\n  did: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isTombstone(v: unknown): v is Tombstone {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#tombstone'\n  )\n}\n\nexport function validateTombstone(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#tombstone', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#info', v)\n}\n\n/** A repo operation, ie a write of a single record. For creates and updates, CID is the record's CID as of this operation. For deletes, it's null. */\nexport interface RepoOp {\n  action: 'create' | 'update' | 'delete' | (string & {})\n  path: string\n  cid: CID | null\n  [k: string]: unknown\n}\n\nexport function isRepoOp(v: unknown): v is RepoOp {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#repoOp'\n  )\n}\n\nexport function validateRepoOp(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#repoOp', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface ProfileViewBasic {\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewBasic(v: unknown): v is ProfileViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewBasic'\n  )\n}\n\nexport function validateProfileViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewBasic', v)\n}\n\nexport interface ProfileView {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileView(v: unknown): v is ProfileView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileView'\n  )\n}\n\nexport function validateProfileView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileView', v)\n}\n\nexport interface ProfileViewDetailed {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  banner?: string\n  followersCount?: number\n  followsCount?: number\n  postsCount?: number\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewDetailed(v: unknown): v is ProfileViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewDetailed'\n  )\n}\n\nexport function validateProfileViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewDetailed', v)\n}\n\nexport interface ViewerState {\n  muted?: boolean\n  mutedByList?: AppBskyGraphDefs.ListViewBasic\n  blockedBy?: boolean\n  blocking?: string\n  blockingByList?: AppBskyGraphDefs.ListViewBasic\n  following?: string\n  followedBy?: string\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#viewerState', v)\n}\n\nexport type Preferences = (\n  | AdultContentPref\n  | ContentLabelPref\n  | SavedFeedsPref\n  | PersonalDetailsPref\n  | FeedViewPref\n  | ThreadViewPref\n  | { $type: string; [k: string]: unknown }\n)[]\n\nexport interface AdultContentPref {\n  enabled: boolean\n  [k: string]: unknown\n}\n\nexport function isAdultContentPref(v: unknown): v is AdultContentPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#adultContentPref'\n  )\n}\n\nexport function validateAdultContentPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#adultContentPref', v)\n}\n\nexport interface ContentLabelPref {\n  label: string\n  visibility: 'show' | 'warn' | 'hide' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isContentLabelPref(v: unknown): v is ContentLabelPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#contentLabelPref'\n  )\n}\n\nexport function validateContentLabelPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#contentLabelPref', v)\n}\n\nexport interface SavedFeedsPref {\n  pinned: string[]\n  saved: string[]\n  [k: string]: unknown\n}\n\nexport function isSavedFeedsPref(v: unknown): v is SavedFeedsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeedsPref'\n  )\n}\n\nexport function validateSavedFeedsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeedsPref', v)\n}\n\nexport interface PersonalDetailsPref {\n  /** The birth date of account owner. */\n  birthDate?: string\n  [k: string]: unknown\n}\n\nexport function isPersonalDetailsPref(v: unknown): v is PersonalDetailsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#personalDetailsPref'\n  )\n}\n\nexport function validatePersonalDetailsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#personalDetailsPref', v)\n}\n\nexport interface FeedViewPref {\n  /** The URI of the feed, or an identifier which describes the feed. */\n  feed: string\n  /** Hide replies in the feed. */\n  hideReplies?: boolean\n  /** Hide replies in the feed if they are not by followed users. */\n  hideRepliesByUnfollowed?: boolean\n  /** Hide replies in the feed if they do not have this number of likes. */\n  hideRepliesByLikeCount?: number\n  /** Hide reposts in the feed. */\n  hideReposts?: boolean\n  /** Hide quote posts in the feed. */\n  hideQuotePosts?: boolean\n  [k: string]: unknown\n}\n\nexport function isFeedViewPref(v: unknown): v is FeedViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#feedViewPref'\n  )\n}\n\nexport function validateFeedViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#feedViewPref', v)\n}\n\nexport interface ThreadViewPref {\n  /** Sorting mode for threads. */\n  sort?: 'oldest' | 'newest' | 'most-likes' | 'random' | (string & {})\n  /** Show followed users at the top of all replies. */\n  prioritizeFollowedUsers?: boolean\n  [k: string]: unknown\n}\n\nexport function isThreadViewPref(v: unknown): v is ThreadViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#threadViewPref'\n  )\n}\n\nexport function validateThreadViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#threadViewPref', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  displayName?: string\n  description?: string\n  avatar?: BlobRef\n  banner?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.actor.profile#main' ||\n      v.$type === 'app.bsky.actor.profile')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.profile#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  external: External\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.external#main' ||\n      v.$type === 'app.bsky.embed.external')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#main', v)\n}\n\nexport interface External {\n  uri: string\n  title: string\n  description: string\n  thumb?: BlobRef\n  [k: string]: unknown\n}\n\nexport function isExternal(v: unknown): v is External {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#external'\n  )\n}\n\nexport function validateExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#external', v)\n}\n\nexport interface View {\n  external: ViewExternal\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#view', v)\n}\n\nexport interface ViewExternal {\n  uri: string\n  title: string\n  description: string\n  thumb?: string\n  [k: string]: unknown\n}\n\nexport function isViewExternal(v: unknown): v is ViewExternal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#viewExternal'\n  )\n}\n\nexport function validateViewExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#viewExternal', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  images: Image[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.images#main' ||\n      v.$type === 'app.bsky.embed.images')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#main', v)\n}\n\nexport interface Image {\n  image: BlobRef\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isImage(v: unknown): v is Image {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#image'\n  )\n}\n\nexport function validateImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#image', v)\n}\n\n/** width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit. */\nexport interface AspectRatio {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isAspectRatio(v: unknown): v is AspectRatio {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#aspectRatio'\n  )\n}\n\nexport function validateAspectRatio(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#aspectRatio', v)\n}\n\nexport interface View {\n  images: ViewImage[]\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#view', v)\n}\n\nexport interface ViewImage {\n  thumb: string\n  fullsize: string\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isViewImage(v: unknown): v is ViewImage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#viewImage'\n  )\n}\n\nexport function validateViewImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#viewImage', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as AppBskyFeedDefs from '../feed/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\nimport * as AppBskyEmbedRecordWithMedia from './recordWithMedia'\n\nexport interface Main {\n  record: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.record#main' ||\n      v.$type === 'app.bsky.embed.record')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#main', v)\n}\n\nexport interface View {\n  record:\n    | ViewRecord\n    | ViewNotFound\n    | ViewBlocked\n    | AppBskyFeedDefs.GeneratorView\n    | AppBskyGraphDefs.ListView\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.record#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#view', v)\n}\n\nexport interface ViewRecord {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  value: {}\n  labels?: ComAtprotoLabelDefs.Label[]\n  embeds?: (\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  )[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isViewRecord(v: unknown): v is ViewRecord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewRecord'\n  )\n}\n\nexport function validateViewRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewRecord', v)\n}\n\nexport interface ViewNotFound {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isViewNotFound(v: unknown): v is ViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewNotFound'\n  )\n}\n\nexport function validateViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewNotFound', v)\n}\n\nexport interface ViewBlocked {\n  uri: string\n  blocked: true\n  author: AppBskyFeedDefs.BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isViewBlocked(v: unknown): v is ViewBlocked {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewBlocked'\n  )\n}\n\nexport function validateViewBlocked(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewBlocked', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedRecord from './record'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\n\nexport interface Main {\n  record: AppBskyEmbedRecord.Main\n  media:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.recordWithMedia#main' ||\n      v.$type === 'app.bsky.embed.recordWithMedia')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#main', v)\n}\n\nexport interface View {\n  record: AppBskyEmbedRecord.View\n  media:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.recordWithMedia#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#view', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface PostView {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  record: {}\n  embed?:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | AppBskyEmbedRecord.View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  indexedAt: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  threadgate?: ThreadgateView\n  [k: string]: unknown\n}\n\nexport function isPostView(v: unknown): v is PostView {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#postView'\n  )\n}\n\nexport function validatePostView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#postView', v)\n}\n\nexport interface ViewerState {\n  repost?: string\n  like?: string\n  replyDisabled?: boolean\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#viewerState', v)\n}\n\nexport interface FeedViewPost {\n  post: PostView\n  reply?: ReplyRef\n  reason?: ReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isFeedViewPost(v: unknown): v is FeedViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#feedViewPost'\n  )\n}\n\nexport function validateFeedViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#feedViewPost', v)\n}\n\nexport interface ReplyRef {\n  root:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  parent:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#replyRef', v)\n}\n\nexport interface ReasonRepost {\n  by: AppBskyActorDefs.ProfileViewBasic\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isReasonRepost(v: unknown): v is ReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#reasonRepost'\n  )\n}\n\nexport function validateReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#reasonRepost', v)\n}\n\nexport interface ThreadViewPost {\n  post: PostView\n  parent?:\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  replies?: (\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport function isThreadViewPost(v: unknown): v is ThreadViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadViewPost'\n  )\n}\n\nexport function validateThreadViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadViewPost', v)\n}\n\nexport interface NotFoundPost {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundPost(v: unknown): v is NotFoundPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#notFoundPost'\n  )\n}\n\nexport function validateNotFoundPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#notFoundPost', v)\n}\n\nexport interface BlockedPost {\n  uri: string\n  blocked: true\n  author: BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isBlockedPost(v: unknown): v is BlockedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedPost'\n  )\n}\n\nexport function validateBlockedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedPost', v)\n}\n\nexport interface BlockedAuthor {\n  did: string\n  viewer?: AppBskyActorDefs.ViewerState\n  [k: string]: unknown\n}\n\nexport function isBlockedAuthor(v: unknown): v is BlockedAuthor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedAuthor'\n  )\n}\n\nexport function validateBlockedAuthor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedAuthor', v)\n}\n\nexport interface GeneratorView {\n  uri: string\n  cid: string\n  did: string\n  creator: AppBskyActorDefs.ProfileView\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  likeCount?: number\n  viewer?: GeneratorViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorView(v: unknown): v is GeneratorView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorView'\n  )\n}\n\nexport function validateGeneratorView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorView', v)\n}\n\nexport interface GeneratorViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorViewerState(v: unknown): v is GeneratorViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorViewerState'\n  )\n}\n\nexport function validateGeneratorViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorViewerState', v)\n}\n\nexport interface SkeletonFeedPost {\n  post: string\n  reason?: SkeletonReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isSkeletonFeedPost(v: unknown): v is SkeletonFeedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonFeedPost'\n  )\n}\n\nexport function validateSkeletonFeedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonFeedPost', v)\n}\n\nexport interface SkeletonReasonRepost {\n  repost: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonReasonRepost(v: unknown): v is SkeletonReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonReasonRepost'\n  )\n}\n\nexport function validateSkeletonReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonReasonRepost', v)\n}\n\nexport interface ThreadgateView {\n  uri?: string\n  cid?: string\n  record?: {}\n  lists?: AppBskyGraphDefs.ListViewBasic[]\n  [k: string]: unknown\n}\n\nexport function isThreadgateView(v: unknown): v is ThreadgateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadgateView'\n  )\n}\n\nexport function validateThreadgateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadgateView', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  did: string\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.generator#main' ||\n      v.$type === 'app.bsky.feed.generator')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.generator#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.like#main' || v.$type === 'app.bsky.feed.like')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.like#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  text: string\n  /** Deprecated: replaced by app.bsky.richtext.facet. */\n  entities?: Entity[]\n  facets?: AppBskyRichtextFacet.Main[]\n  reply?: ReplyRef\n  embed?:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | AppBskyEmbedRecord.Main\n    | AppBskyEmbedRecordWithMedia.Main\n    | { $type: string; [k: string]: unknown }\n  langs?: string[]\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  /** Additional non-inline tags describing this post. */\n  tags?: string[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.post#main' || v.$type === 'app.bsky.feed.post')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#main', v)\n}\n\nexport interface ReplyRef {\n  root: ComAtprotoRepoStrongRef.Main\n  parent: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#replyRef', v)\n}\n\n/** Deprecated: use facets instead. */\nexport interface Entity {\n  index: TextSlice\n  /** Expected values are 'mention' and 'link'. */\n  type: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isEntity(v: unknown): v is Entity {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#entity'\n  )\n}\n\nexport function validateEntity(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#entity', v)\n}\n\n/** Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings. */\nexport interface TextSlice {\n  start: number\n  end: number\n  [k: string]: unknown\n}\n\nexport function isTextSlice(v: unknown): v is TextSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.post#textSlice'\n  )\n}\n\nexport function validateTextSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#textSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.repost#main' ||\n      v.$type === 'app.bsky.feed.repost')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.repost#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  post: string\n  allow?: (\n    | MentionRule\n    | FollowingRule\n    | ListRule\n    | { $type: string; [k: string]: unknown }\n  )[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.threadgate#main' ||\n      v.$type === 'app.bsky.feed.threadgate')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#main', v)\n}\n\n/** Allow replies from actors mentioned in your post. */\nexport interface MentionRule {\n  [k: string]: unknown\n}\n\nexport function isMentionRule(v: unknown): v is MentionRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#mentionRule'\n  )\n}\n\nexport function validateMentionRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#mentionRule', v)\n}\n\n/** Allow replies from actors you follow. */\nexport interface FollowingRule {\n  [k: string]: unknown\n}\n\nexport function isFollowingRule(v: unknown): v is FollowingRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#followingRule'\n  )\n}\n\nexport function validateFollowingRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#followingRule', v)\n}\n\n/** Allow replies from actors on a list. */\nexport interface ListRule {\n  list: string\n  [k: string]: unknown\n}\n\nexport function isListRule(v: unknown): v is ListRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#listRule'\n  )\n}\n\nexport function validateListRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#listRule', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.block#main' ||\n      v.$type === 'app.bsky.graph.block')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.block#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\n\nexport interface ListViewBasic {\n  uri: string\n  cid: string\n  name: string\n  purpose: ListPurpose\n  avatar?: string\n  viewer?: ListViewerState\n  indexedAt?: string\n  [k: string]: unknown\n}\n\nexport function isListViewBasic(v: unknown): v is ListViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewBasic'\n  )\n}\n\nexport function validateListViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewBasic', v)\n}\n\nexport interface ListView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  name: string\n  purpose: ListPurpose\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  viewer?: ListViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isListView(v: unknown): v is ListView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listView'\n  )\n}\n\nexport function validateListView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listView', v)\n}\n\nexport interface ListItemView {\n  uri: string\n  subject: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isListItemView(v: unknown): v is ListItemView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listItemView'\n  )\n}\n\nexport function validateListItemView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listItemView', v)\n}\n\nexport type ListPurpose =\n  | 'app.bsky.graph.defs#modlist'\n  | 'app.bsky.graph.defs#curatelist'\n  | (string & {})\n\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexport const MODLIST = 'app.bsky.graph.defs#modlist'\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexport const CURATELIST = 'app.bsky.graph.defs#curatelist'\n\nexport interface ListViewerState {\n  muted?: boolean\n  blocked?: string\n  [k: string]: unknown\n}\n\nexport function isListViewerState(v: unknown): v is ListViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewerState'\n  )\n}\n\nexport function validateListViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewerState', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.follow#main' ||\n      v.$type === 'app.bsky.graph.follow')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.follow#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  purpose: AppBskyGraphDefs.ListPurpose\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.list#main' ||\n      v.$type === 'app.bsky.graph.list')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.list#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listblock#main' ||\n      v.$type === 'app.bsky.graph.listblock')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listblock#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  list: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listitem#main' ||\n      v.$type === 'app.bsky.graph.listitem')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listitem#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  index: ByteSlice\n  features: (Mention | Link | Tag | { $type: string; [k: string]: unknown })[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.richtext.facet#main' ||\n      v.$type === 'app.bsky.richtext.facet')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#main', v)\n}\n\n/** A facet feature for actor mentions. */\nexport interface Mention {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isMention(v: unknown): v is Mention {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#mention'\n  )\n}\n\nexport function validateMention(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#mention', v)\n}\n\n/** A facet feature for links. */\nexport interface Link {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isLink(v: unknown): v is Link {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#link'\n  )\n}\n\nexport function validateLink(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#link', v)\n}\n\n/** A hashtag. */\nexport interface Tag {\n  tag: string\n  [k: string]: unknown\n}\n\nexport function isTag(v: unknown): v is Tag {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.richtext.facet#tag'\n  )\n}\n\nexport function validateTag(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#tag', v)\n}\n\n/** A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings. */\nexport interface ByteSlice {\n  byteStart: number\n  byteEnd: number\n  [k: string]: unknown\n}\n\nexport function isByteSlice(v: unknown): v is ByteSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#byteSlice'\n  )\n}\n\nexport function validateByteSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#byteSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface SkeletonSearchPost {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchPost(v: unknown): v is SkeletonSearchPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchPost'\n  )\n}\n\nexport function validateSkeletonSearchPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchPost', v)\n}\n\nexport interface SkeletonSearchActor {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchActor(v: unknown): v is SkeletonSearchActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchActor'\n  )\n}\n\nexport function validateSkeletonSearchActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchActor', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport {\n  Client as XrpcClient,\n  ServiceClient as XrpcServiceClient,\n} from '@atproto/xrpc'\nimport { schemas } from './lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nimport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nimport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nimport * as ComAtprotoAdminEmitModerationEvent from './types/com/atproto/admin/emitModerationEvent'\nimport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nimport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nimport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nimport * as ComAtprotoAdminGetModerationEvent from './types/com/atproto/admin/getModerationEvent'\nimport * as ComAtprotoAdminGetRecord from './types/com/atproto/admin/getRecord'\nimport * as ComAtprotoAdminGetRepo from './types/com/atproto/admin/getRepo'\nimport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nimport * as ComAtprotoAdminQueryModerationEvents from './types/com/atproto/admin/queryModerationEvents'\nimport * as ComAtprotoAdminQueryModerationStatuses from './types/com/atproto/admin/queryModerationStatuses'\nimport * as ComAtprotoAdminSearchRepos from './types/com/atproto/admin/searchRepos'\nimport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nimport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nimport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nimport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nimport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nimport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nimport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nimport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nimport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nimport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nimport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nimport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nimport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nimport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nimport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nimport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nimport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nimport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nimport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nimport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nimport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nimport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nimport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nimport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nimport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nimport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nimport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nimport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nimport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nimport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nimport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nimport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nimport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nimport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nimport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nimport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nimport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nimport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nimport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nimport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nimport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nimport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nimport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nimport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nimport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nimport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nimport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nimport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nimport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nimport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nimport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nimport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nimport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nimport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nimport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nimport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nimport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nimport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nimport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nimport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nimport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nimport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nimport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nimport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nimport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nimport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nimport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nimport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nimport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nimport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nimport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nimport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nimport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nimport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nimport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nimport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nimport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nimport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nimport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nimport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nimport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nimport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nimport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nimport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nimport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nimport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nimport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nimport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nimport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nimport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nimport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nimport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nimport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nimport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nimport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nimport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nimport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nimport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nimport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nimport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nimport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nimport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nimport * as AppBskyGraphList from './types/app/bsky/graph/list'\nimport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nimport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nimport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nimport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nimport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nimport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nimport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nimport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nimport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nimport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nimport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nimport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nimport * as AppBskyUnspeccedGetPopular from './types/app/bsky/unspecced/getPopular'\nimport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nimport * as AppBskyUnspeccedGetTimelineSkeleton from './types/app/bsky/unspecced/getTimelineSkeleton'\nimport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nimport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\n\nexport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nexport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nexport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nexport * as ComAtprotoAdminEmitModerationEvent from './types/com/atproto/admin/emitModerationEvent'\nexport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nexport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nexport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nexport * as ComAtprotoAdminGetModerationEvent from './types/com/atproto/admin/getModerationEvent'\nexport * as ComAtprotoAdminGetRecord from './types/com/atproto/admin/getRecord'\nexport * as ComAtprotoAdminGetRepo from './types/com/atproto/admin/getRepo'\nexport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nexport * as ComAtprotoAdminQueryModerationEvents from './types/com/atproto/admin/queryModerationEvents'\nexport * as ComAtprotoAdminQueryModerationStatuses from './types/com/atproto/admin/queryModerationStatuses'\nexport * as ComAtprotoAdminSearchRepos from './types/com/atproto/admin/searchRepos'\nexport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nexport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nexport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nexport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nexport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nexport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nexport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nexport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nexport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nexport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nexport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nexport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nexport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nexport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nexport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nexport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nexport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nexport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nexport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nexport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nexport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nexport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nexport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nexport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nexport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nexport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nexport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nexport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nexport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nexport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nexport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nexport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nexport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nexport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nexport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nexport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nexport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nexport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nexport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nexport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nexport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nexport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nexport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nexport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nexport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nexport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nexport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nexport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nexport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nexport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nexport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nexport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nexport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nexport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nexport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nexport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nexport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nexport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nexport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nexport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nexport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nexport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nexport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nexport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nexport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nexport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nexport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nexport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nexport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nexport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nexport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nexport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nexport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nexport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nexport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nexport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nexport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nexport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nexport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nexport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nexport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nexport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nexport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nexport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nexport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nexport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nexport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nexport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nexport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nexport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nexport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nexport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nexport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nexport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nexport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nexport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nexport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nexport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nexport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nexport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nexport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nexport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nexport * as AppBskyGraphList from './types/app/bsky/graph/list'\nexport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nexport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nexport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nexport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nexport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nexport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nexport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nexport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nexport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nexport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nexport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nexport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nexport * as AppBskyUnspeccedGetPopular from './types/app/bsky/unspecced/getPopular'\nexport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nexport * as AppBskyUnspeccedGetTimelineSkeleton from './types/app/bsky/unspecced/getTimelineSkeleton'\nexport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nexport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\n\nexport const COM_ATPROTO_ADMIN = {\n  DefsReviewOpen: 'com.atproto.admin.defs#reviewOpen',\n  DefsReviewEscalated: 'com.atproto.admin.defs#reviewEscalated',\n  DefsReviewClosed: 'com.atproto.admin.defs#reviewClosed',\n}\nexport const COM_ATPROTO_MODERATION = {\n  DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n  DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n  DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n  DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n  DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n  DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n}\nexport const APP_BSKY_GRAPH = {\n  DefsModlist: 'app.bsky.graph.defs#modlist',\n  DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n}\n\nexport class AtpBaseClient {\n  xrpc: XrpcClient = new XrpcClient()\n\n  constructor() {\n    this.xrpc.addLexicons(schemas)\n  }\n\n  service(serviceUri: string | URL): AtpServiceClient {\n    return new AtpServiceClient(this, this.xrpc.service(serviceUri))\n  }\n}\n\nexport class AtpServiceClient {\n  _baseClient: AtpBaseClient\n  xrpc: XrpcServiceClient\n  com: ComNS\n  app: AppNS\n\n  constructor(baseClient: AtpBaseClient, xrpcService: XrpcServiceClient) {\n    this._baseClient = baseClient\n    this.xrpc = xrpcService\n    this.com = new ComNS(this)\n    this.app = new AppNS(this)\n  }\n\n  setHeader(key: string, value: string): void {\n    this.xrpc.setHeader(key, value)\n  }\n}\n\nexport class ComNS {\n  _service: AtpServiceClient\n  atproto: AtprotoNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.atproto = new AtprotoNS(service)\n  }\n}\n\nexport class AtprotoNS {\n  _service: AtpServiceClient\n  admin: AdminNS\n  identity: IdentityNS\n  label: LabelNS\n  moderation: ModerationNS\n  repo: RepoNS\n  server: ServerNS\n  sync: SyncNS\n  temp: TempNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.admin = new AdminNS(service)\n    this.identity = new IdentityNS(service)\n    this.label = new LabelNS(service)\n    this.moderation = new ModerationNS(service)\n    this.repo = new RepoNS(service)\n    this.server = new ServerNS(service)\n    this.sync = new SyncNS(service)\n    this.temp = new TempNS(service)\n  }\n}\n\nexport class AdminNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  disableAccountInvites(\n    data?: ComAtprotoAdminDisableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminDisableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminDisableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  disableInviteCodes(\n    data?: ComAtprotoAdminDisableInviteCodes.InputSchema,\n    opts?: ComAtprotoAdminDisableInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminDisableInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableInviteCodes.toKnownErr(e)\n      })\n  }\n\n  emitModerationEvent(\n    data?: ComAtprotoAdminEmitModerationEvent.InputSchema,\n    opts?: ComAtprotoAdminEmitModerationEvent.CallOptions,\n  ): Promise<ComAtprotoAdminEmitModerationEvent.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.emitModerationEvent', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminEmitModerationEvent.toKnownErr(e)\n      })\n  }\n\n  enableAccountInvites(\n    data?: ComAtprotoAdminEnableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminEnableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminEnableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.enableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminEnableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  getAccountInfo(\n    params?: ComAtprotoAdminGetAccountInfo.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfo.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getAccountInfo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetAccountInfo.toKnownErr(e)\n      })\n  }\n\n  getInviteCodes(\n    params?: ComAtprotoAdminGetInviteCodes.QueryParams,\n    opts?: ComAtprotoAdminGetInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminGetInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getModerationEvent(\n    params?: ComAtprotoAdminGetModerationEvent.QueryParams,\n    opts?: ComAtprotoAdminGetModerationEvent.CallOptions,\n  ): Promise<ComAtprotoAdminGetModerationEvent.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getModerationEvent', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetModerationEvent.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoAdminGetRecord.QueryParams,\n    opts?: ComAtprotoAdminGetRecord.CallOptions,\n  ): Promise<ComAtprotoAdminGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoAdminGetRepo.QueryParams,\n    opts?: ComAtprotoAdminGetRepo.CallOptions,\n  ): Promise<ComAtprotoAdminGetRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetRepo.toKnownErr(e)\n      })\n  }\n\n  getSubjectStatus(\n    params?: ComAtprotoAdminGetSubjectStatus.QueryParams,\n    opts?: ComAtprotoAdminGetSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminGetSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getSubjectStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetSubjectStatus.toKnownErr(e)\n      })\n  }\n\n  queryModerationEvents(\n    params?: ComAtprotoAdminQueryModerationEvents.QueryParams,\n    opts?: ComAtprotoAdminQueryModerationEvents.CallOptions,\n  ): Promise<ComAtprotoAdminQueryModerationEvents.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.queryModerationEvents', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminQueryModerationEvents.toKnownErr(e)\n      })\n  }\n\n  queryModerationStatuses(\n    params?: ComAtprotoAdminQueryModerationStatuses.QueryParams,\n    opts?: ComAtprotoAdminQueryModerationStatuses.CallOptions,\n  ): Promise<ComAtprotoAdminQueryModerationStatuses.Response> {\n    return this._service.xrpc\n      .call(\n        'com.atproto.admin.queryModerationStatuses',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw ComAtprotoAdminQueryModerationStatuses.toKnownErr(e)\n      })\n  }\n\n  searchRepos(\n    params?: ComAtprotoAdminSearchRepos.QueryParams,\n    opts?: ComAtprotoAdminSearchRepos.CallOptions,\n  ): Promise<ComAtprotoAdminSearchRepos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.searchRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminSearchRepos.toKnownErr(e)\n      })\n  }\n\n  sendEmail(\n    data?: ComAtprotoAdminSendEmail.InputSchema,\n    opts?: ComAtprotoAdminSendEmail.CallOptions,\n  ): Promise<ComAtprotoAdminSendEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.sendEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminSendEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountEmail(\n    data?: ComAtprotoAdminUpdateAccountEmail.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountHandle(\n    data?: ComAtprotoAdminUpdateAccountHandle.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountHandle.toKnownErr(e)\n      })\n  }\n\n  updateSubjectStatus(\n    data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema,\n    opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateSubjectStatus', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateSubjectStatus.toKnownErr(e)\n      })\n  }\n}\n\nexport class IdentityNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  resolveHandle(\n    params?: ComAtprotoIdentityResolveHandle.QueryParams,\n    opts?: ComAtprotoIdentityResolveHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityResolveHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.resolveHandle', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityResolveHandle.toKnownErr(e)\n      })\n  }\n\n  updateHandle(\n    data?: ComAtprotoIdentityUpdateHandle.InputSchema,\n    opts?: ComAtprotoIdentityUpdateHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityUpdateHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.updateHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityUpdateHandle.toKnownErr(e)\n      })\n  }\n}\n\nexport class LabelNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  queryLabels(\n    params?: ComAtprotoLabelQueryLabels.QueryParams,\n    opts?: ComAtprotoLabelQueryLabels.CallOptions,\n  ): Promise<ComAtprotoLabelQueryLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.label.queryLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoLabelQueryLabels.toKnownErr(e)\n      })\n  }\n}\n\nexport class ModerationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  createReport(\n    data?: ComAtprotoModerationCreateReport.InputSchema,\n    opts?: ComAtprotoModerationCreateReport.CallOptions,\n  ): Promise<ComAtprotoModerationCreateReport.Response> {\n    return this._service.xrpc\n      .call('com.atproto.moderation.createReport', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoModerationCreateReport.toKnownErr(e)\n      })\n  }\n}\n\nexport class RepoNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  applyWrites(\n    data?: ComAtprotoRepoApplyWrites.InputSchema,\n    opts?: ComAtprotoRepoApplyWrites.CallOptions,\n  ): Promise<ComAtprotoRepoApplyWrites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoApplyWrites.toKnownErr(e)\n      })\n  }\n\n  createRecord(\n    data?: ComAtprotoRepoCreateRecord.InputSchema,\n    opts?: ComAtprotoRepoCreateRecord.CallOptions,\n  ): Promise<ComAtprotoRepoCreateRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoCreateRecord.toKnownErr(e)\n      })\n  }\n\n  deleteRecord(\n    data?: ComAtprotoRepoDeleteRecord.InputSchema,\n    opts?: ComAtprotoRepoDeleteRecord.CallOptions,\n  ): Promise<ComAtprotoRepoDeleteRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDeleteRecord.toKnownErr(e)\n      })\n  }\n\n  describeRepo(\n    params?: ComAtprotoRepoDescribeRepo.QueryParams,\n    opts?: ComAtprotoRepoDescribeRepo.CallOptions,\n  ): Promise<ComAtprotoRepoDescribeRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.describeRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDescribeRepo.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoRepoGetRecord.QueryParams,\n    opts?: ComAtprotoRepoGetRecord.CallOptions,\n  ): Promise<ComAtprotoRepoGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoGetRecord.toKnownErr(e)\n      })\n  }\n\n  listRecords(\n    params?: ComAtprotoRepoListRecords.QueryParams,\n    opts?: ComAtprotoRepoListRecords.CallOptions,\n  ): Promise<ComAtprotoRepoListRecords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.listRecords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoListRecords.toKnownErr(e)\n      })\n  }\n\n  putRecord(\n    data?: ComAtprotoRepoPutRecord.InputSchema,\n    opts?: ComAtprotoRepoPutRecord.CallOptions,\n  ): Promise<ComAtprotoRepoPutRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoPutRecord.toKnownErr(e)\n      })\n  }\n\n  uploadBlob(\n    data?: ComAtprotoRepoUploadBlob.InputSchema,\n    opts?: ComAtprotoRepoUploadBlob.CallOptions,\n  ): Promise<ComAtprotoRepoUploadBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.uploadBlob', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoUploadBlob.toKnownErr(e)\n      })\n  }\n}\n\nexport class ServerNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  confirmEmail(\n    data?: ComAtprotoServerConfirmEmail.InputSchema,\n    opts?: ComAtprotoServerConfirmEmail.CallOptions,\n  ): Promise<ComAtprotoServerConfirmEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerConfirmEmail.toKnownErr(e)\n      })\n  }\n\n  createAccount(\n    data?: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAccount.toKnownErr(e)\n      })\n  }\n\n  createAppPassword(\n    data?: ComAtprotoServerCreateAppPassword.InputSchema,\n    opts?: ComAtprotoServerCreateAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerCreateAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAppPassword.toKnownErr(e)\n      })\n  }\n\n  createInviteCode(\n    data?: ComAtprotoServerCreateInviteCode.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCode.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCode.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCode', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCode.toKnownErr(e)\n      })\n  }\n\n  createInviteCodes(\n    data?: ComAtprotoServerCreateInviteCodes.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCodes.toKnownErr(e)\n      })\n  }\n\n  createSession(\n    data?: ComAtprotoServerCreateSession.InputSchema,\n    opts?: ComAtprotoServerCreateSession.CallOptions,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateSession.toKnownErr(e)\n      })\n  }\n\n  deleteAccount(\n    data?: ComAtprotoServerDeleteAccount.InputSchema,\n    opts?: ComAtprotoServerDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeleteAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  deleteSession(\n    data?: ComAtprotoServerDeleteSession.InputSchema,\n    opts?: ComAtprotoServerDeleteSession.CallOptions,\n  ): Promise<ComAtprotoServerDeleteSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteSession.toKnownErr(e)\n      })\n  }\n\n  describeServer(\n    params?: ComAtprotoServerDescribeServer.QueryParams,\n    opts?: ComAtprotoServerDescribeServer.CallOptions,\n  ): Promise<ComAtprotoServerDescribeServer.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.describeServer', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDescribeServer.toKnownErr(e)\n      })\n  }\n\n  getAccountInviteCodes(\n    params?: ComAtprotoServerGetAccountInviteCodes.QueryParams,\n    opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerGetAccountInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getSession(\n    params?: ComAtprotoServerGetSession.QueryParams,\n    opts?: ComAtprotoServerGetSession.CallOptions,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getSession', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetSession.toKnownErr(e)\n      })\n  }\n\n  listAppPasswords(\n    params?: ComAtprotoServerListAppPasswords.QueryParams,\n    opts?: ComAtprotoServerListAppPasswords.CallOptions,\n  ): Promise<ComAtprotoServerListAppPasswords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerListAppPasswords.toKnownErr(e)\n      })\n  }\n\n  refreshSession(\n    data?: ComAtprotoServerRefreshSession.InputSchema,\n    opts?: ComAtprotoServerRefreshSession.CallOptions,\n  ): Promise<ComAtprotoServerRefreshSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRefreshSession.toKnownErr(e)\n      })\n  }\n\n  requestAccountDelete(\n    data?: ComAtprotoServerRequestAccountDelete.InputSchema,\n    opts?: ComAtprotoServerRequestAccountDelete.CallOptions,\n  ): Promise<ComAtprotoServerRequestAccountDelete.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestAccountDelete', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestAccountDelete.toKnownErr(e)\n      })\n  }\n\n  requestEmailConfirmation(\n    data?: ComAtprotoServerRequestEmailConfirmation.InputSchema,\n    opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailConfirmation.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailConfirmation', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailConfirmation.toKnownErr(e)\n      })\n  }\n\n  requestEmailUpdate(\n    data?: ComAtprotoServerRequestEmailUpdate.InputSchema,\n    opts?: ComAtprotoServerRequestEmailUpdate.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailUpdate.toKnownErr(e)\n      })\n  }\n\n  requestPasswordReset(\n    data?: ComAtprotoServerRequestPasswordReset.InputSchema,\n    opts?: ComAtprotoServerRequestPasswordReset.CallOptions,\n  ): Promise<ComAtprotoServerRequestPasswordReset.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestPasswordReset', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestPasswordReset.toKnownErr(e)\n      })\n  }\n\n  reserveSigningKey(\n    data?: ComAtprotoServerReserveSigningKey.InputSchema,\n    opts?: ComAtprotoServerReserveSigningKey.CallOptions,\n  ): Promise<ComAtprotoServerReserveSigningKey.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.reserveSigningKey', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerReserveSigningKey.toKnownErr(e)\n      })\n  }\n\n  resetPassword(\n    data?: ComAtprotoServerResetPassword.InputSchema,\n    opts?: ComAtprotoServerResetPassword.CallOptions,\n  ): Promise<ComAtprotoServerResetPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerResetPassword.toKnownErr(e)\n      })\n  }\n\n  revokeAppPassword(\n    data?: ComAtprotoServerRevokeAppPassword.InputSchema,\n    opts?: ComAtprotoServerRevokeAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerRevokeAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.revokeAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRevokeAppPassword.toKnownErr(e)\n      })\n  }\n\n  updateEmail(\n    data?: ComAtprotoServerUpdateEmail.InputSchema,\n    opts?: ComAtprotoServerUpdateEmail.CallOptions,\n  ): Promise<ComAtprotoServerUpdateEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerUpdateEmail.toKnownErr(e)\n      })\n  }\n}\n\nexport class SyncNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getBlob(\n    params?: ComAtprotoSyncGetBlob.QueryParams,\n    opts?: ComAtprotoSyncGetBlob.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlob', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlob.toKnownErr(e)\n      })\n  }\n\n  getBlocks(\n    params?: ComAtprotoSyncGetBlocks.QueryParams,\n    opts?: ComAtprotoSyncGetBlocks.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlocks.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getCheckout(\n    params?: ComAtprotoSyncGetCheckout.QueryParams,\n    opts?: ComAtprotoSyncGetCheckout.CallOptions,\n  ): Promise<ComAtprotoSyncGetCheckout.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getCheckout', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetCheckout.toKnownErr(e)\n      })\n  }\n\n  getHead(\n    params?: ComAtprotoSyncGetHead.QueryParams,\n    opts?: ComAtprotoSyncGetHead.CallOptions,\n  ): Promise<ComAtprotoSyncGetHead.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getHead', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetHead.toKnownErr(e)\n      })\n  }\n\n  getLatestCommit(\n    params?: ComAtprotoSyncGetLatestCommit.QueryParams,\n    opts?: ComAtprotoSyncGetLatestCommit.CallOptions,\n  ): Promise<ComAtprotoSyncGetLatestCommit.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetLatestCommit.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoSyncGetRecord.QueryParams,\n    opts?: ComAtprotoSyncGetRecord.CallOptions,\n  ): Promise<ComAtprotoSyncGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoSyncGetRepo.QueryParams,\n    opts?: ComAtprotoSyncGetRepo.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepo.toKnownErr(e)\n      })\n  }\n\n  listBlobs(\n    params?: ComAtprotoSyncListBlobs.QueryParams,\n    opts?: ComAtprotoSyncListBlobs.CallOptions,\n  ): Promise<ComAtprotoSyncListBlobs.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListBlobs.toKnownErr(e)\n      })\n  }\n\n  listRepos(\n    params?: ComAtprotoSyncListRepos.QueryParams,\n    opts?: ComAtprotoSyncListRepos.CallOptions,\n  ): Promise<ComAtprotoSyncListRepos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListRepos.toKnownErr(e)\n      })\n  }\n\n  notifyOfUpdate(\n    data?: ComAtprotoSyncNotifyOfUpdate.InputSchema,\n    opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions,\n  ): Promise<ComAtprotoSyncNotifyOfUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.notifyOfUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncNotifyOfUpdate.toKnownErr(e)\n      })\n  }\n\n  requestCrawl(\n    data?: ComAtprotoSyncRequestCrawl.InputSchema,\n    opts?: ComAtprotoSyncRequestCrawl.CallOptions,\n  ): Promise<ComAtprotoSyncRequestCrawl.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.requestCrawl', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncRequestCrawl.toKnownErr(e)\n      })\n  }\n}\n\nexport class TempNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  fetchLabels(\n    params?: ComAtprotoTempFetchLabels.QueryParams,\n    opts?: ComAtprotoTempFetchLabels.CallOptions,\n  ): Promise<ComAtprotoTempFetchLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.fetchLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoTempFetchLabels.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppNS {\n  _service: AtpServiceClient\n  bsky: BskyNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.bsky = new BskyNS(service)\n  }\n}\n\nexport class BskyNS {\n  _service: AtpServiceClient\n  actor: ActorNS\n  embed: EmbedNS\n  feed: FeedNS\n  graph: GraphNS\n  notification: NotificationNS\n  richtext: RichtextNS\n  unspecced: UnspeccedNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.actor = new ActorNS(service)\n    this.embed = new EmbedNS(service)\n    this.feed = new FeedNS(service)\n    this.graph = new GraphNS(service)\n    this.notification = new NotificationNS(service)\n    this.richtext = new RichtextNS(service)\n    this.unspecced = new UnspeccedNS(service)\n  }\n}\n\nexport class ActorNS {\n  _service: AtpServiceClient\n  profile: ProfileRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.profile = new ProfileRecord(service)\n  }\n\n  getPreferences(\n    params?: AppBskyActorGetPreferences.QueryParams,\n    opts?: AppBskyActorGetPreferences.CallOptions,\n  ): Promise<AppBskyActorGetPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getPreferences', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetPreferences.toKnownErr(e)\n      })\n  }\n\n  getProfile(\n    params?: AppBskyActorGetProfile.QueryParams,\n    opts?: AppBskyActorGetProfile.CallOptions,\n  ): Promise<AppBskyActorGetProfile.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfile', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfile.toKnownErr(e)\n      })\n  }\n\n  getProfiles(\n    params?: AppBskyActorGetProfiles.QueryParams,\n    opts?: AppBskyActorGetProfiles.CallOptions,\n  ): Promise<AppBskyActorGetProfiles.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfiles', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfiles.toKnownErr(e)\n      })\n  }\n\n  getSuggestions(\n    params?: AppBskyActorGetSuggestions.QueryParams,\n    opts?: AppBskyActorGetSuggestions.CallOptions,\n  ): Promise<AppBskyActorGetSuggestions.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getSuggestions', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetSuggestions.toKnownErr(e)\n      })\n  }\n\n  putPreferences(\n    data?: AppBskyActorPutPreferences.InputSchema,\n    opts?: AppBskyActorPutPreferences.CallOptions,\n  ): Promise<AppBskyActorPutPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.putPreferences', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyActorPutPreferences.toKnownErr(e)\n      })\n  }\n\n  searchActors(\n    params?: AppBskyActorSearchActors.QueryParams,\n    opts?: AppBskyActorSearchActors.CallOptions,\n  ): Promise<AppBskyActorSearchActors.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActors', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActors.toKnownErr(e)\n      })\n  }\n\n  searchActorsTypeahead(\n    params?: AppBskyActorSearchActorsTypeahead.QueryParams,\n    opts?: AppBskyActorSearchActorsTypeahead.CallOptions,\n  ): Promise<AppBskyActorSearchActorsTypeahead.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActorsTypeahead', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActorsTypeahead.toKnownErr(e)\n      })\n  }\n}\n\nexport class ProfileRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyActorProfile.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyActorProfile.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyActorProfile.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.actor.profile'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', rkey: 'self', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class EmbedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class FeedNS {\n  _service: AtpServiceClient\n  generator: GeneratorRecord\n  like: LikeRecord\n  post: PostRecord\n  repost: RepostRecord\n  threadgate: ThreadgateRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.generator = new GeneratorRecord(service)\n    this.like = new LikeRecord(service)\n    this.post = new PostRecord(service)\n    this.repost = new RepostRecord(service)\n    this.threadgate = new ThreadgateRecord(service)\n  }\n\n  describeFeedGenerator(\n    params?: AppBskyFeedDescribeFeedGenerator.QueryParams,\n    opts?: AppBskyFeedDescribeFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedDescribeFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.describeFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedDescribeFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getActorFeeds(\n    params?: AppBskyFeedGetActorFeeds.QueryParams,\n    opts?: AppBskyFeedGetActorFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetActorFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorFeeds.toKnownErr(e)\n      })\n  }\n\n  getActorLikes(\n    params?: AppBskyFeedGetActorLikes.QueryParams,\n    opts?: AppBskyFeedGetActorLikes.CallOptions,\n  ): Promise<AppBskyFeedGetActorLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorLikes.toKnownErr(e)\n      })\n  }\n\n  getAuthorFeed(\n    params?: AppBskyFeedGetAuthorFeed.QueryParams,\n    opts?: AppBskyFeedGetAuthorFeed.CallOptions,\n  ): Promise<AppBskyFeedGetAuthorFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetAuthorFeed.toKnownErr(e)\n      })\n  }\n\n  getFeed(\n    params?: AppBskyFeedGetFeed.QueryParams,\n    opts?: AppBskyFeedGetFeed.CallOptions,\n  ): Promise<AppBskyFeedGetFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeed.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerator(\n    params?: AppBskyFeedGetFeedGenerator.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerators(\n    params?: AppBskyFeedGetFeedGenerators.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerators.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerators.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerators', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getFeedSkeleton(\n    params?: AppBskyFeedGetFeedSkeleton.QueryParams,\n    opts?: AppBskyFeedGetFeedSkeleton.CallOptions,\n  ): Promise<AppBskyFeedGetFeedSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedSkeleton.toKnownErr(e)\n      })\n  }\n\n  getLikes(\n    params?: AppBskyFeedGetLikes.QueryParams,\n    opts?: AppBskyFeedGetLikes.CallOptions,\n  ): Promise<AppBskyFeedGetLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetLikes.toKnownErr(e)\n      })\n  }\n\n  getListFeed(\n    params?: AppBskyFeedGetListFeed.QueryParams,\n    opts?: AppBskyFeedGetListFeed.CallOptions,\n  ): Promise<AppBskyFeedGetListFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getListFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetListFeed.toKnownErr(e)\n      })\n  }\n\n  getPostThread(\n    params?: AppBskyFeedGetPostThread.QueryParams,\n    opts?: AppBskyFeedGetPostThread.CallOptions,\n  ): Promise<AppBskyFeedGetPostThread.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPostThread', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPostThread.toKnownErr(e)\n      })\n  }\n\n  getPosts(\n    params?: AppBskyFeedGetPosts.QueryParams,\n    opts?: AppBskyFeedGetPosts.CallOptions,\n  ): Promise<AppBskyFeedGetPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPosts.toKnownErr(e)\n      })\n  }\n\n  getRepostedBy(\n    params?: AppBskyFeedGetRepostedBy.QueryParams,\n    opts?: AppBskyFeedGetRepostedBy.CallOptions,\n  ): Promise<AppBskyFeedGetRepostedBy.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getRepostedBy', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetRepostedBy.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFeeds(\n    params?: AppBskyFeedGetSuggestedFeeds.QueryParams,\n    opts?: AppBskyFeedGetSuggestedFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetSuggestedFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getSuggestedFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetSuggestedFeeds.toKnownErr(e)\n      })\n  }\n\n  getTimeline(\n    params?: AppBskyFeedGetTimeline.QueryParams,\n    opts?: AppBskyFeedGetTimeline.CallOptions,\n  ): Promise<AppBskyFeedGetTimeline.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getTimeline', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetTimeline.toKnownErr(e)\n      })\n  }\n\n  searchPosts(\n    params?: AppBskyFeedSearchPosts.QueryParams,\n    opts?: AppBskyFeedSearchPosts.CallOptions,\n  ): Promise<AppBskyFeedSearchPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.searchPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedSearchPosts.toKnownErr(e)\n      })\n  }\n}\n\nexport class GeneratorRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedGenerator.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedGenerator.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedGenerator.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.generator'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class LikeRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedLike.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedLike.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedLike.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.like'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedPost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.post'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class RepostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedRepost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedRepost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedRepost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.repost'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ThreadgateRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedThreadgate.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyFeedThreadgate.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedThreadgate.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.threadgate'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class GraphNS {\n  _service: AtpServiceClient\n  block: BlockRecord\n  follow: FollowRecord\n  list: ListRecord\n  listblock: ListblockRecord\n  listitem: ListitemRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.block = new BlockRecord(service)\n    this.follow = new FollowRecord(service)\n    this.list = new ListRecord(service)\n    this.listblock = new ListblockRecord(service)\n    this.listitem = new ListitemRecord(service)\n  }\n\n  getBlocks(\n    params?: AppBskyGraphGetBlocks.QueryParams,\n    opts?: AppBskyGraphGetBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getFollowers(\n    params?: AppBskyGraphGetFollowers.QueryParams,\n    opts?: AppBskyGraphGetFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetFollowers.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollowers', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollowers.toKnownErr(e)\n      })\n  }\n\n  getFollows(\n    params?: AppBskyGraphGetFollows.QueryParams,\n    opts?: AppBskyGraphGetFollows.CallOptions,\n  ): Promise<AppBskyGraphGetFollows.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollows', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollows.toKnownErr(e)\n      })\n  }\n\n  getList(\n    params?: AppBskyGraphGetList.QueryParams,\n    opts?: AppBskyGraphGetList.CallOptions,\n  ): Promise<AppBskyGraphGetList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getList', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetList.toKnownErr(e)\n      })\n  }\n\n  getListBlocks(\n    params?: AppBskyGraphGetListBlocks.QueryParams,\n    opts?: AppBskyGraphGetListBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetListBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListBlocks.toKnownErr(e)\n      })\n  }\n\n  getListMutes(\n    params?: AppBskyGraphGetListMutes.QueryParams,\n    opts?: AppBskyGraphGetListMutes.CallOptions,\n  ): Promise<AppBskyGraphGetListMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListMutes.toKnownErr(e)\n      })\n  }\n\n  getLists(\n    params?: AppBskyGraphGetLists.QueryParams,\n    opts?: AppBskyGraphGetLists.CallOptions,\n  ): Promise<AppBskyGraphGetLists.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getLists', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetLists.toKnownErr(e)\n      })\n  }\n\n  getMutes(\n    params?: AppBskyGraphGetMutes.QueryParams,\n    opts?: AppBskyGraphGetMutes.CallOptions,\n  ): Promise<AppBskyGraphGetMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetMutes.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFollowsByActor(\n    params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams,\n    opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions,\n  ): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.graph.getSuggestedFollowsByActor',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyGraphGetSuggestedFollowsByActor.toKnownErr(e)\n      })\n  }\n\n  muteActor(\n    data?: AppBskyGraphMuteActor.InputSchema,\n    opts?: AppBskyGraphMuteActor.CallOptions,\n  ): Promise<AppBskyGraphMuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActor.toKnownErr(e)\n      })\n  }\n\n  muteActorList(\n    data?: AppBskyGraphMuteActorList.InputSchema,\n    opts?: AppBskyGraphMuteActorList.CallOptions,\n  ): Promise<AppBskyGraphMuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActorList.toKnownErr(e)\n      })\n  }\n\n  unmuteActor(\n    data?: AppBskyGraphUnmuteActor.InputSchema,\n    opts?: AppBskyGraphUnmuteActor.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActor.toKnownErr(e)\n      })\n  }\n\n  unmuteActorList(\n    data?: AppBskyGraphUnmuteActorList.InputSchema,\n    opts?: AppBskyGraphUnmuteActorList.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActorList.toKnownErr(e)\n      })\n  }\n}\n\nexport class BlockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphBlock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphBlock.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphBlock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.block'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class FollowRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphFollow.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphFollow.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphFollow.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.follow'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphList.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphList.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphList.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.list'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListblockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListblock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphListblock.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListblock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listblock'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListitemRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListitem.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphListitem.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListitem.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listitem'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class NotificationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getUnreadCount(\n    params?: AppBskyNotificationGetUnreadCount.QueryParams,\n    opts?: AppBskyNotificationGetUnreadCount.CallOptions,\n  ): Promise<AppBskyNotificationGetUnreadCount.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.getUnreadCount', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationGetUnreadCount.toKnownErr(e)\n      })\n  }\n\n  listNotifications(\n    params?: AppBskyNotificationListNotifications.QueryParams,\n    opts?: AppBskyNotificationListNotifications.CallOptions,\n  ): Promise<AppBskyNotificationListNotifications.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.listNotifications', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationListNotifications.toKnownErr(e)\n      })\n  }\n\n  registerPush(\n    data?: AppBskyNotificationRegisterPush.InputSchema,\n    opts?: AppBskyNotificationRegisterPush.CallOptions,\n  ): Promise<AppBskyNotificationRegisterPush.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.registerPush', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationRegisterPush.toKnownErr(e)\n      })\n  }\n\n  updateSeen(\n    data?: AppBskyNotificationUpdateSeen.InputSchema,\n    opts?: AppBskyNotificationUpdateSeen.CallOptions,\n  ): Promise<AppBskyNotificationUpdateSeen.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.updateSeen', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationUpdateSeen.toKnownErr(e)\n      })\n  }\n}\n\nexport class RichtextNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class UnspeccedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getPopular(\n    params?: AppBskyUnspeccedGetPopular.QueryParams,\n    opts?: AppBskyUnspeccedGetPopular.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopular.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.getPopular', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedGetPopular.toKnownErr(e)\n      })\n  }\n\n  getPopularFeedGenerators(\n    params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams,\n    opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.unspecced.getPopularFeedGenerators',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyUnspeccedGetPopularFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getTimelineSkeleton(\n    params?: AppBskyUnspeccedGetTimelineSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedGetTimelineSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTimelineSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.getTimelineSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedGetTimelineSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchActorsSkeleton(\n    params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchPostsSkeleton(\n    params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e)\n      })\n  }\n}\n", "import { ErrorResponseBody, errorResponseBody } from '@atproto/xrpc'\nimport { defaultFetchHandler } from '@atproto/xrpc'\nimport { isValidDidDoc, getPdsEndpoint } from '@atproto/common-web'\nimport {\n  AtpBaseClient,\n  AtpServiceClient,\n  ComAtprotoServerCreateAccount,\n  ComAtprotoServerCreateSession,\n  ComAtprotoServerGetSession,\n  ComAtprotoServerRefreshSession,\n} from './client'\nimport {\n  AtpSessionData,\n  AtpAgentCreateAccountOpts,\n  AtpAgentLoginOpts,\n  AtpAgentFetchHandler,\n  AtpAgentFetchHandlerResponse,\n  AtpAgentGlobalOpts,\n  AtpPersistSessionHandler,\n  AtpAgentOpts,\n} from './types'\n\nconst REFRESH_SESSION = 'com.atproto.server.refreshSession'\n\n/**\n * An ATP \"Agent\"\n * Manages session token lifecycles and provides convenience methods.\n */\nexport class AtpAgent {\n  service: URL\n  api: AtpServiceClient\n  session?: AtpSessionData\n\n  /**\n   * The PDS URL, driven by the did doc. May be undefined.\n   */\n  pdsUrl: URL | undefined\n\n  private _baseClient: AtpBaseClient\n  private _persistSession?: AtpPersistSessionHandler\n  private _refreshSessionPromise: Promise<void> | undefined\n\n  get com() {\n    return this.api.com\n  }\n\n  /**\n   * The `fetch` implementation; must be implemented for your platform.\n   */\n  static fetch: AtpAgentFetchHandler | undefined = defaultFetchHandler\n\n  /**\n   * Configures the API globally.\n   */\n  static configure(opts: AtpAgentGlobalOpts) {\n    AtpAgent.fetch = opts.fetch\n  }\n\n  constructor(opts: AtpAgentOpts) {\n    this.service =\n      opts.service instanceof URL ? opts.service : new URL(opts.service)\n    this._persistSession = opts.persistSession\n\n    // create an ATP client instance for this agent\n    this._baseClient = new AtpBaseClient()\n    this._baseClient.xrpc.fetch = this._fetch.bind(this) // patch its fetch implementation\n    this.api = this._baseClient.service(opts.service)\n  }\n\n  /**\n   * Is there any active session?\n   */\n  get hasSession() {\n    return !!this.session\n  }\n\n  /**\n   * Sets the \"Persist Session\" method which can be used to store access tokens\n   * as they change.\n   */\n  setPersistSessionHandler(handler?: AtpPersistSessionHandler) {\n    this._persistSession = handler\n  }\n\n  /**\n   * Create a new account and hydrate its session in this agent.\n   */\n  async createAccount(\n    opts: AtpAgentCreateAccountOpts,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createAccount({\n        handle: opts.handle,\n        password: opts.password,\n        email: opts.email,\n        inviteCode: opts.inviteCode,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: opts.email,\n        emailConfirmed: false,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Start a new session with this agent.\n   */\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createSession({\n        identifier: opts.identifier,\n        password: opts.password,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: res.data.email,\n        emailConfirmed: res.data.emailConfirmed,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Resume a pre-existing session with this agent.\n   */\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    try {\n      this.session = session\n      const res = await this.api.com.atproto.server.getSession()\n      if (!res.success || res.data.did !== this.session.did) {\n        throw new Error('Invalid session')\n      }\n      this.session.email = res.data.email\n      this.session.handle = res.data.handle\n      this.session.emailConfirmed = res.data.emailConfirmed\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Internal helper to add authorization headers to requests.\n   */\n  private _addAuthHeader(reqHeaders: Record<string, string>) {\n    if (!reqHeaders.authorization && this.session?.accessJwt) {\n      return {\n        ...reqHeaders,\n        authorization: `Bearer ${this.session.accessJwt}`,\n      }\n    }\n    return reqHeaders\n  }\n\n  /**\n   * Internal fetch handler which adds access-token management\n   */\n  private async _fetch(\n    reqUri: string,\n    reqMethod: string,\n    reqHeaders: Record<string, string>,\n    reqBody: any,\n  ): Promise<AtpAgentFetchHandlerResponse> {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n\n    // wait for any active session-refreshes to finish\n    await this._refreshSessionPromise\n\n    // send the request\n    let res = await AtpAgent.fetch(\n      reqUri,\n      reqMethod,\n      this._addAuthHeader(reqHeaders),\n      reqBody,\n    )\n\n    // handle session-refreshes as needed\n    if (isErrorResponse(res, ['ExpiredToken']) && this.session?.refreshJwt) {\n      // attempt refresh\n      await this._refreshSession()\n\n      // resend the request with the new access token\n      res = await AtpAgent.fetch(\n        reqUri,\n        reqMethod,\n        this._addAuthHeader(reqHeaders),\n        reqBody,\n      )\n    }\n\n    return res\n  }\n\n  /**\n   * Internal helper to refresh sessions\n   * - Wraps the actual implementation in a promise-guard to ensure only\n   *   one refresh is attempted at a time.\n   */\n  private async _refreshSession() {\n    if (this._refreshSessionPromise) {\n      return this._refreshSessionPromise\n    }\n    this._refreshSessionPromise = this._refreshSessionInner()\n    try {\n      await this._refreshSessionPromise\n    } finally {\n      this._refreshSessionPromise = undefined\n    }\n  }\n\n  /**\n   * Internal helper to refresh sessions (actual behavior)\n   */\n  private async _refreshSessionInner() {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n    if (!this.session?.refreshJwt) {\n      return\n    }\n\n    // send the refresh request\n    const url = new URL((this.pdsUrl || this.service).origin)\n    url.pathname = `/xrpc/${REFRESH_SESSION}`\n    const res = await AtpAgent.fetch(\n      url.toString(),\n      'POST',\n      {\n        authorization: `Bearer ${this.session.refreshJwt}`,\n      },\n      undefined,\n    )\n\n    if (isErrorResponse(res, ['ExpiredToken', 'InvalidToken'])) {\n      // failed due to a bad refresh token\n      this.session = undefined\n      this._persistSession?.('expired', undefined)\n    } else if (isNewSessionObject(this._baseClient, res.body)) {\n      // succeeded, update the session\n      this.session = {\n        ...(this.session || {}),\n        accessJwt: res.body.accessJwt,\n        refreshJwt: res.body.refreshJwt,\n        handle: res.body.handle,\n        did: res.body.did,\n      }\n      this._updateApiEndpoint(res.body.didDoc)\n      this._persistSession?.('update', this.session)\n    }\n    // else: other failures should be ignored - the issue will\n    // propagate in the _fetch() handler's second attempt to run\n    // the request\n  }\n\n  /**\n   * Upload a binary blob to the server\n   */\n  uploadBlob: typeof this.api.com.atproto.repo.uploadBlob = (data, opts) =>\n    this.api.com.atproto.repo.uploadBlob(data, opts)\n\n  /**\n   * Resolve a handle to a DID\n   */\n  resolveHandle: typeof this.api.com.atproto.identity.resolveHandle = (\n    params,\n    opts,\n  ) => this.api.com.atproto.identity.resolveHandle(params, opts)\n\n  /**\n   * Change the user's handle\n   */\n  updateHandle: typeof this.api.com.atproto.identity.updateHandle = (\n    data,\n    opts,\n  ) => this.api.com.atproto.identity.updateHandle(data, opts)\n\n  /**\n   * Create a moderation report\n   */\n  createModerationReport: typeof this.api.com.atproto.moderation.createReport =\n    (data, opts) => this.api.com.atproto.moderation.createReport(data, opts)\n\n  /**\n   * Helper to update the pds endpoint dynamically.\n   *\n   * The session methods (create, resume, refresh) may respond with the user's\n   * did document which contains the user's canonical PDS endpoint. That endpoint\n   * may differ from the endpoint used to contact the server. We capture that\n   * PDS endpoint and update the client to use that given endpoint for future\n   * requests. (This helps ensure smooth migrations between PDSes, especially\n   * when the PDSes are operated by a single org.)\n   */\n  private _updateApiEndpoint(didDoc: unknown) {\n    if (isValidDidDoc(didDoc)) {\n      const endpoint = getPdsEndpoint(didDoc)\n      this.pdsUrl = endpoint ? new URL(endpoint) : undefined\n    }\n    this.api.xrpc.uri = this.pdsUrl || this.service\n  }\n}\n\nfunction isErrorObject(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nfunction isErrorResponse(\n  res: AtpAgentFetchHandlerResponse,\n  errorNames: string[],\n): boolean {\n  if (res.status !== 400) {\n    return false\n  }\n  if (!isErrorObject(res.body)) {\n    return false\n  }\n  return (\n    typeof res.body.error === 'string' && errorNames.includes(res.body.error)\n  )\n}\n\nfunction isNewSessionObject(\n  client: AtpBaseClient,\n  v: unknown,\n): v is ComAtprotoServerRefreshSession.OutputSchema {\n  try {\n    client.xrpc.lex.assertValidXrpcOutput(\n      'com.atproto.server.refreshSession',\n      v,\n    )\n    return true\n  } catch {\n    return false\n  }\n}\n", "/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\n\nimport { graphemeLen } from '@atproto/common-web'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport class UnicodeString {\n  utf16: string\n  utf8: Uint8Array\n  private _graphemeLen?: number | undefined\n\n  constructor(utf16: string) {\n    this.utf16 = utf16\n    this.utf8 = encoder.encode(utf16)\n  }\n\n  get length() {\n    return this.utf8.byteLength\n  }\n\n  get graphemeLength() {\n    if (!this._graphemeLen) {\n      this._graphemeLen = graphemeLen(this.utf16)\n    }\n    return this._graphemeLen\n  }\n\n  slice(start?: number, end?: number): string {\n    return decoder.decode(this.utf8.slice(start, end))\n  }\n\n  utf16IndexToUtf8Index(i: number) {\n    return encoder.encode(this.utf16.slice(0, i)).byteLength\n  }\n\n  toString() {\n    return this.utf16\n  }\n}\n", "import { RichText } from './rich-text'\nimport { UnicodeString } from './unicode'\n\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/\nconst REPLACEMENT_STR = '\\n\\n'\n\nexport function sanitizeRichText(\n  richText: RichText,\n  opts: { cleanNewlines?: boolean },\n) {\n  if (opts.cleanNewlines) {\n    richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR)\n  }\n  return richText\n}\n\nfunction clean(\n  richText: RichText,\n  targetRegexp: RegExp,\n  replacementString: string,\n): RichText {\n  richText = richText.clone()\n\n  let match = richText.unicodeText.utf16.match(targetRegexp)\n  while (match && typeof match.index !== 'undefined') {\n    const oldText = richText.unicodeText\n    const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(\n      match.index,\n    )\n    const removeEndIndex = removeStartIndex + new UnicodeString(match[0]).length\n    richText.delete(removeStartIndex, removeEndIndex)\n    if (richText.unicodeText.utf16 === oldText.utf16) {\n      break // sanity check\n    }\n    richText.insert(removeStartIndex, replacementString)\n    match = richText.unicodeText.utf16.match(targetRegexp)\n  }\n\n  return richText\n}\n", "import TLDs from 'tlds'\nimport { AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\n\nexport type Facet = AppBskyRichtextFacet.Main\n\nexport function detectFacets(text: UnicodeString): Facet[] | undefined {\n  let match\n  const facets: Facet[] = []\n  {\n    // mentions\n    const re = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g\n    while ((match = re.exec(text.utf16))) {\n      if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n        continue // probably not a handle\n      }\n\n      const start = text.utf16.indexOf(match[3], match.index) - 1\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(start),\n          byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#mention',\n            did: match[3], // must be resolved afterwards\n          },\n        ],\n      })\n    }\n  }\n  {\n    // links\n    const re =\n      /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim\n    while ((match = re.exec(text.utf16))) {\n      let uri = match[2]\n      if (!uri.startsWith('http')) {\n        const domain = match.groups?.domain\n        if (!domain || !isValidDomain(domain)) {\n          continue\n        }\n        uri = `https://${uri}`\n      }\n      const start = text.utf16.indexOf(match[2], match.index)\n      const index = { start, end: start + match[2].length }\n      // strip ending puncuation\n      if (/[.,;!?]$/.test(uri)) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      if (/[)]$/.test(uri) && !uri.includes('(')) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index.start),\n          byteEnd: text.utf16IndexToUtf8Index(index.end),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#link',\n            uri,\n          },\n        ],\n      })\n    }\n  }\n  {\n    const re = /(?:^|\\s)(#[^\\d\\s]\\S*)(?=\\s)?/g\n    while ((match = re.exec(text.utf16))) {\n      let [tag] = match\n      const hasLeadingSpace = /^\\s/.test(tag)\n\n      tag = tag.trim().replace(/\\p{P}+$/gu, '') // strip ending punctuation\n\n      // inclusive of #, max of 64 chars\n      if (tag.length > 66) continue\n\n      const index = match.index + (hasLeadingSpace ? 1 : 0)\n\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index),\n          byteEnd: text.utf16IndexToUtf8Index(index + tag.length), // inclusive of last char\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#tag',\n            tag: tag.replace(/^#/, ''),\n          },\n        ],\n      })\n    }\n  }\n  return facets.length > 0 ? facets : undefined\n}\n\nfunction isValidDomain(str: string): boolean {\n  return !!TLDs.find((tld) => {\n    const i = str.lastIndexOf(tld)\n    if (i === -1) {\n      return false\n    }\n    return str.charAt(i - 1) === '.' && i === str.length - tld.length\n  })\n}\n", "/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\n\nimport { AtpAgent } from '../agent'\nimport { AppBskyFeedPost, AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport { sanitizeRichText } from './sanitization'\nimport { detectFacets } from './detection'\n\nexport type Facet = AppBskyRichtextFacet.Main\nexport type FacetLink = AppBskyRichtextFacet.Link\nexport type FacetMention = AppBskyRichtextFacet.Mention\nexport type FacetTag = AppBskyRichtextFacet.Tag\nexport type Entity = AppBskyFeedPost.Entity\n\nexport interface RichTextProps {\n  text: string\n  facets?: Facet[]\n  /**\n   * @deprecated Use facets instead\n   */\n  entities?: Entity[]\n}\n\nexport interface RichTextOpts {\n  cleanNewlines?: boolean\n}\n\nexport class RichTextSegment {\n  constructor(public text: string, public facet?: Facet) {}\n\n  get link(): FacetLink | undefined {\n    const link = this.facet?.features.find(AppBskyRichtextFacet.isLink)\n    if (AppBskyRichtextFacet.isLink(link)) {\n      return link\n    }\n    return undefined\n  }\n\n  isLink() {\n    return !!this.link\n  }\n\n  get mention(): FacetMention | undefined {\n    const mention = this.facet?.features.find(AppBskyRichtextFacet.isMention)\n    if (AppBskyRichtextFacet.isMention(mention)) {\n      return mention\n    }\n    return undefined\n  }\n\n  isMention() {\n    return !!this.mention\n  }\n\n  get tag(): FacetTag | undefined {\n    const tag = this.facet?.features.find(AppBskyRichtextFacet.isTag)\n    if (AppBskyRichtextFacet.isTag(tag)) {\n      return tag\n    }\n    return undefined\n  }\n\n  isTag() {\n    return !!this.tag\n  }\n}\n\nexport class RichText {\n  unicodeText: UnicodeString\n  facets?: Facet[]\n\n  constructor(props: RichTextProps, opts?: RichTextOpts) {\n    this.unicodeText = new UnicodeString(props.text)\n    this.facets = props.facets\n    if (!this.facets?.length && props.entities?.length) {\n      this.facets = entitiesToFacets(this.unicodeText, props.entities)\n    }\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n    if (opts?.cleanNewlines) {\n      sanitizeRichText(this, { cleanNewlines: true }).copyInto(this)\n    }\n  }\n\n  get text() {\n    return this.unicodeText.toString()\n  }\n\n  get length() {\n    return this.unicodeText.length\n  }\n\n  get graphemeLength() {\n    return this.unicodeText.graphemeLength\n  }\n\n  clone() {\n    return new RichText({\n      text: this.unicodeText.utf16,\n      facets: cloneDeep(this.facets),\n    })\n  }\n\n  copyInto(target: RichText) {\n    target.unicodeText = this.unicodeText\n    target.facets = cloneDeep(this.facets)\n  }\n\n  *segments(): Generator<RichTextSegment, void, void> {\n    const facets = this.facets || []\n    if (!facets.length) {\n      yield new RichTextSegment(this.unicodeText.utf16)\n      return\n    }\n\n    let textCursor = 0\n    let facetCursor = 0\n    do {\n      const currFacet = facets[facetCursor]\n      if (textCursor < currFacet.index.byteStart) {\n        yield new RichTextSegment(\n          this.unicodeText.slice(textCursor, currFacet.index.byteStart),\n        )\n      } else if (textCursor > currFacet.index.byteStart) {\n        facetCursor++\n        continue\n      }\n      if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n        const subtext = this.unicodeText.slice(\n          currFacet.index.byteStart,\n          currFacet.index.byteEnd,\n        )\n        if (!subtext.trim()) {\n          // dont empty string entities\n          yield new RichTextSegment(subtext)\n        } else {\n          yield new RichTextSegment(subtext, currFacet)\n        }\n      }\n      textCursor = currFacet.index.byteEnd\n      facetCursor++\n    } while (facetCursor < facets.length)\n    if (textCursor < this.unicodeText.length) {\n      yield new RichTextSegment(\n        this.unicodeText.slice(textCursor, this.unicodeText.length),\n      )\n    }\n  }\n\n  insert(insertIndex: number, insertText: string) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, insertIndex) +\n        insertText +\n        this.unicodeText.slice(insertIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsAdded = insertText.length\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (before)\n      if (insertIndex <= ent.index.byteStart) {\n        // move both by num added\n        ent.index.byteStart += numCharsAdded\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario B (inner)\n      else if (\n        insertIndex >= ent.index.byteStart &&\n        insertIndex < ent.index.byteEnd\n      ) {\n        // move end by num added\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario C (after)\n      // noop\n    }\n    return this\n  }\n\n  delete(removeStartIndex: number, removeEndIndex: number) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, removeStartIndex) +\n        this.unicodeText.slice(removeEndIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsRemoved = removeEndIndex - removeStartIndex\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (entirely outer)\n      if (\n        removeStartIndex <= ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteEnd\n      ) {\n        // delete slice (will get removed in final pass)\n        ent.index.byteStart = 0\n        ent.index.byteEnd = 0\n      }\n      // scenario B (entirely after)\n      else if (removeStartIndex > ent.index.byteEnd) {\n        // noop\n      }\n      // scenario C (partially after)\n      else if (\n        removeStartIndex > ent.index.byteStart &&\n        removeStartIndex <= ent.index.byteEnd &&\n        removeEndIndex > ent.index.byteEnd\n      ) {\n        // move end to remove start\n        ent.index.byteEnd = removeStartIndex\n      }\n      // scenario D (entirely inner)\n      else if (\n        removeStartIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move end by num removed\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario E (partially before)\n      else if (\n        removeStartIndex < ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move start to remove-start index, move end by num removed\n        ent.index.byteStart = removeStartIndex\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario F (entirely before)\n      else if (removeEndIndex < ent.index.byteStart) {\n        // move both by num removed\n        ent.index.byteStart -= numCharsRemoved\n        ent.index.byteEnd -= numCharsRemoved\n      }\n    }\n\n    // filter out any facets that were made irrelevant\n    this.facets = this.facets.filter(\n      (ent) => ent.index.byteStart < ent.index.byteEnd,\n    )\n    return this\n  }\n\n  /**\n   * Detects facets such as links and mentions\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  async detectFacets(agent: AtpAgent) {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      for (const facet of this.facets) {\n        for (const feature of facet.features) {\n          if (AppBskyRichtextFacet.isMention(feature)) {\n            const did = await agent\n              .resolveHandle({ handle: feature.did })\n              .catch((_) => undefined)\n              .then((res) => res?.data.did)\n            feature.did = did || ''\n          }\n        }\n      }\n      this.facets.sort(facetSort)\n    }\n  }\n\n  /**\n   * Detects facets such as links and mentions but does not resolve them\n   * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  detectFacetsWithoutResolution() {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n  }\n}\n\nconst facetSort = (a, b) => a.index.byteStart - b.index.byteStart\n\nfunction entitiesToFacets(text: UnicodeString, entities: Entity[]): Facet[] {\n  const facets: Facet[] = []\n  for (const ent of entities) {\n    if (ent.type === 'link') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n      })\n    } else if (ent.type === 'mention') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [\n          { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n        ],\n      })\n    }\n  }\n  return facets\n}\n\nfunction cloneDeep<T>(v: T): T {\n  if (typeof v === 'undefined') {\n    return v\n  }\n  return JSON.parse(JSON.stringify(v))\n}\n", "import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyGraphDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\n\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\nexport type LabelDefinitionFlag = 'no-override' | 'adult'\nexport type LabelDefinitionOnWarnBehavior =\n  | 'blur'\n  | 'blur-media'\n  | 'alert'\n  | null\n\nexport interface LabelDefinitionLocalizedStrings {\n  name: string\n  description: string\n}\n\nexport type LabelDefinitionLocalizedStringsMap = Record<\n  string,\n  LabelDefinitionLocalizedStrings\n>\n\nexport interface LabelDefinition {\n  id: string\n  groupId: string\n  configurable: boolean\n  preferences: LabelPreference[]\n  flags: LabelDefinitionFlag[]\n  onwarn: LabelDefinitionOnWarnBehavior\n  strings: {\n    settings: LabelDefinitionLocalizedStringsMap\n    account: LabelDefinitionLocalizedStringsMap\n    content: LabelDefinitionLocalizedStringsMap\n  }\n}\n\nexport interface LabelGroupDefinition {\n  id: string\n  configurable: boolean\n  labels: LabelDefinition[]\n  strings: {\n    settings: LabelDefinitionLocalizedStringsMap\n  }\n}\n\nexport type LabelDefinitionMap = Record<string, LabelDefinition>\nexport type LabelGroupDefinitionMap = Record<string, LabelGroupDefinition>\n\n// labelers\n// =\n\ninterface Labeler {\n  did: string\n  displayName: string\n}\n\nexport interface LabelerSettings {\n  labeler: Labeler\n  labels: Record<string, LabelPreference>\n}\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; labeler: Labeler }\n\nexport type ModerationCause =\n  | { type: 'blocking'; source: ModerationCauseSource; priority: 3 }\n  | { type: 'blocked-by'; source: ModerationCauseSource; priority: 4 }\n  | { type: 'block-other'; source: ModerationCauseSource; priority: 4 }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: LabelDefinition\n      setting: LabelPreference\n      priority: 1 | 2 | 5 | 7 | 8\n    }\n  | { type: 'muted'; source: ModerationCauseSource; priority: 6 }\n\nexport interface ModerationOpts {\n  userDid: string\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: LabelerSettings[]\n}\n\nexport class ModerationDecision {\n  static noop() {\n    return new ModerationDecision()\n  }\n\n  constructor(\n    public cause: ModerationCause | undefined = undefined,\n    public alert: boolean = false,\n    public blur: boolean = false,\n    public blurMedia: boolean = false,\n    public filter: boolean = false,\n    public noOverride: boolean = false,\n    public additionalCauses: ModerationCause[] = [],\n    public did: string = '',\n  ) {}\n}\n\nexport interface ModerationUI {\n  filter?: boolean\n  blur?: boolean\n  alert?: boolean\n  cause?: ModerationCause\n  noOverride?: boolean\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { LabelDefinitionMap } from '../types'\n\nexport const LABELS: LabelDefinitionMap = {\n  '!hide': {\n    id: '!hide',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Hide',\n          description: 'Moderator has chosen to hide the content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Content Blocked',\n          description: 'This account has been hidden by the moderators.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Content Blocked',\n          description: 'This content has been hidden by the moderators.',\n        },\n      },\n    },\n  },\n  '!no-promote': {\n    id: '!no-promote',\n    preferences: ['hide'],\n    flags: [],\n    onwarn: null,\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Filter',\n          description: 'Moderator has chosen to filter the content from feeds.',\n        },\n      },\n      account: {\n        en: {\n          name: 'N/A',\n          description: 'N/A',\n        },\n      },\n      content: {\n        en: {\n          name: 'N/A',\n          description: 'N/A',\n        },\n      },\n    },\n  },\n  '!warn': {\n    id: '!warn',\n    preferences: ['warn'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Warn',\n          description:\n            'Moderator has chosen to set a general warning on the content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Content Warning',\n          description:\n            'This account has received a general warning from moderators.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Content Warning',\n          description:\n            'This content has received a general warning from moderators.',\n        },\n      },\n    },\n  },\n  'dmca-violation': {\n    id: 'dmca-violation',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'legal',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Copyright Violation',\n          description: 'The content has received a DMCA takedown request.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Copyright Violation',\n          description:\n            'This account has received a DMCA takedown request. It will be restored if the concerns can be resolved.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Copyright Violation',\n          description:\n            'This content has received a DMCA takedown request. It will be restored if the concerns can be resolved.',\n        },\n      },\n    },\n  },\n  doxxing: {\n    id: 'doxxing',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'legal',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'Information that reveals private information about someone which has been shared without the consent of the subject.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'This account has been reported to publish private information about someone without their consent. This report is currently under review.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'This content has been reported to include private information about someone without their consent.',\n        },\n      },\n    },\n  },\n  porn: {\n    id: 'porn',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Pornography',\n          description:\n            'Images of full-frontal nudity (genitalia) in any sexualized context, or explicit sexual activity (meaning contact with genitalia or breasts) even if partially covered. Includes graphic sexual cartoons (often jokes/memes).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This account contains imagery of full-frontal nudity or explicit sexual activity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This content contains imagery of full-frontal nudity or explicit sexual activity.',\n        },\n      },\n    },\n  },\n  sexual: {\n    id: 'sexual',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Sexually Suggestive',\n          description:\n            'Content that does not meet the level of \"pornography\", but is still sexual. Some common examples have been selfies and \"hornyposting\" with underwear on, or partially naked (naked but covered, eg with hands or from side perspective). Sheer/see-through nipples may end up in this category.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Suggestive Content',\n          description:\n            'This account contains imagery which is sexually suggestive. Common examples include selfies in underwear or in partial undress.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Suggestive Content',\n          description:\n            'This content contains imagery which is sexually suggestive. Common examples include selfies in underwear or in partial undress.',\n        },\n      },\n    },\n  },\n  nudity: {\n    id: 'nudity',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Nudity',\n          description:\n            'Nudity which is not sexual, or that is primarily \"artistic\" in nature. For example: breastfeeding; classic art paintings and sculptures; newspaper images with some nudity; fashion modeling. \"Erotic photography\" is likely to end up in sexual or porn.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This account contains imagery which portrays nudity in a non-sexual or artistic setting.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This content contains imagery which portrays nudity in a non-sexual or artistic setting.',\n        },\n      },\n    },\n  },\n  nsfl: {\n    id: 'nsfl',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'NSFL',\n          description:\n            '\"Not Suitable For Life.\" This includes graphic images like the infamous \"goatse\" (don\\'t look it up).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (NSFL)',\n          description:\n            'This account contains graphic images which are often referred to as \"Not Suitable For Life.\"',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (NSFL)',\n          description:\n            'This content contains graphic images which are often referred to as \"Not Suitable For Life.\"',\n        },\n      },\n    },\n  },\n  corpse: {\n    id: 'corpse',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Corpse',\n          description:\n            'Visual image of a dead human body in any context. Includes war images, hanging, funeral caskets. Does not include all figurative cases (cartoons), but can include realistic figurative images or renderings.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Corpse)',\n          description:\n            'This account contains images of a dead human body in any context. Includes war images, hanging, funeral caskets.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Corpse)',\n          description:\n            'This content contains images of a dead human body in any context. Includes war images, hanging, funeral caskets.',\n        },\n      },\n    },\n  },\n  gore: {\n    id: 'gore',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Gore',\n          description:\n            'Intended for shocking images, typically involving blood or visible wounds.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Gore)',\n          description:\n            'This account contains shocking images involving blood or visible wounds.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Gore)',\n          description:\n            'This content contains shocking images involving blood or visible wounds.',\n        },\n      },\n    },\n  },\n  torture: {\n    id: 'torture',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Torture',\n          description:\n            'Depictions of torture of a human or animal (animal cruelty).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Torture)',\n          description:\n            'This account contains depictions of torture of a human or animal.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Torture)',\n          description:\n            'This content contains depictions of torture of a human or animal.',\n        },\n      },\n    },\n  },\n  'self-harm': {\n    id: 'self-harm',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Self-Harm',\n          description:\n            'A visual depiction (photo or figurative) of cutting, suicide, or similar.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Self-Harm)',\n          description:\n            'This account includes depictions of cutting, suicide, or other forms of self-harm.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Self-Harm)',\n          description:\n            'This content includes depictions of cutting, suicide, or other forms of self-harm.',\n        },\n      },\n    },\n  },\n  'intolerant-race': {\n    id: 'intolerant-race',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Racial Intolerance',\n          description: 'Hateful or intolerant content related to race.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Racial)',\n          description:\n            'This account includes hateful or intolerant content related to race.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Racial)',\n          description:\n            'This content includes hateful or intolerant views related to race.',\n        },\n      },\n    },\n  },\n  'intolerant-gender': {\n    id: 'intolerant-gender',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Gender Intolerance',\n          description:\n            'Hateful or intolerant content related to gender or gender identity.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Gender)',\n          description:\n            'This account includes hateful or intolerant content related to gender or gender identity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Gender)',\n          description:\n            'This content includes hateful or intolerant views related to gender or gender identity.',\n        },\n      },\n    },\n  },\n  'intolerant-sexual-orientation': {\n    id: 'intolerant-sexual-orientation',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Sexual Orientation Intolerance',\n          description:\n            'Hateful or intolerant content related to sexual preferences.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Orientation)',\n          description:\n            'This account includes hateful or intolerant content related to sexual preferences.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Orientation)',\n          description:\n            'This content includes hateful or intolerant views related to sexual preferences.',\n        },\n      },\n    },\n  },\n  'intolerant-religion': {\n    id: 'intolerant-religion',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Religious Intolerance',\n          description:\n            'Hateful or intolerant content related to religious views or practices.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Religious)',\n          description:\n            'This account includes hateful or intolerant content related to religious views or practices.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Religious)',\n          description:\n            'This content includes hateful or intolerant views related to religious views or practices.',\n        },\n      },\n    },\n  },\n  intolerant: {\n    id: 'intolerant',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerance',\n          description:\n            'A catchall for hateful or intolerant content which is not covered elsewhere.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance',\n          description: 'This account includes hateful or intolerant content.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance',\n          description: 'This content includes hateful or intolerant views.',\n        },\n      },\n    },\n  },\n  'icon-intolerant': {\n    id: 'icon-intolerant',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur-media',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'Visual imagery associated with a hate group, such as the KKK or Nazi, in any context (supportive, critical, documentary, etc).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'This account includes imagery associated with a hate group such as the KKK or Nazis. This warning may apply to content any context, including critical or documentary purposes.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'This content includes imagery associated with a hate group such as the KKK or Nazis. This warning may apply to content any context, including critical or documentary purposes.',\n        },\n      },\n    },\n  },\n  threat: {\n    id: 'threat',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'rude',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Threats',\n          description:\n            'Statements or imagery published with the intent to threaten, intimidate, or harm.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Threats',\n          description:\n            'The moderators believe this account has published statements or imagery with the intent to threaten, intimidate, or harm others.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Threats',\n          description:\n            'The moderators believe this content was published with the intent to threaten, intimidate, or harm others.',\n        },\n      },\n    },\n  },\n  spoiler: {\n    id: 'spoiler',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'curation',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Spoiler',\n          description:\n            'Discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Spoiler Warning',\n          description:\n            'This account contains discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Spoiler Warning',\n          description:\n            'This content contains discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n    },\n  },\n  spam: {\n    id: 'spam',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'spam',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Spam',\n          description:\n            'Repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Spam',\n          description:\n            'This account publishes repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Spam',\n          description:\n            'This content is a part of repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n    },\n  },\n  'account-security': {\n    id: 'account-security',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Security Concerns',\n          description:\n            'Content designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Security Warning',\n          description:\n            'This account has published content designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Security Warning',\n          description:\n            'This content is designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n    },\n  },\n  'net-abuse': {\n    id: 'net-abuse',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Network Attacks',\n          description:\n            'Content designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Network Attack Warning',\n          description:\n            'This account has published content designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Network Attack Warning',\n          description:\n            'This content is designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n    },\n  },\n  impersonation: {\n    id: 'impersonation',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Impersonation',\n          description: 'Accounts which falsely assert some identity.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Impersonation Warning',\n          description:\n            'The moderators believe this account is lying about their identity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Impersonation Warning',\n          description:\n            'The moderators believe this account is lying about their identity.',\n        },\n      },\n    },\n  },\n  scam: {\n    id: 'scam',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Scam',\n          description: 'Fraudulent content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Scam Warning',\n          description:\n            'The moderators believe this account publishes fraudulent content.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Scam Warning',\n          description: 'The moderators believe this is fraudulent content.',\n        },\n      },\n    },\n  },\n  misleading: {\n    id: 'misleading',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Misleading',\n          description: 'Accounts which share misleading information.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Misleading',\n          description:\n            'The moderators believe this account is spreading misleading information.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Misleading',\n          description:\n            'The moderators believe this account is spreading misleading information.',\n        },\n      },\n    },\n  },\n}\n", "import { AppBskyGraphDefs } from '../client/index'\nimport {\n  Label,\n  LabelPreference,\n  ModerationCause,\n  ModerationOpts,\n  ModerationDecision,\n} from './types'\nimport { LABELS } from './const/labels'\n\nexport class ModerationCauseAccumulator {\n  did = ''\n  causes: ModerationCause[] = []\n\n  constructor() {}\n\n  setDid(did: string) {\n    this.did = did\n  }\n\n  addBlocking(blocking: string | undefined) {\n    if (blocking) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'user' },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockingByList(\n    blockingByList: AppBskyGraphDefs.ListViewBasic | undefined,\n  ) {\n    if (blockingByList) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'list', list: blockingByList },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockedBy(blockedBy: boolean | undefined) {\n    if (blockedBy) {\n      this.causes.push({\n        type: 'blocked-by',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addBlockOther(blockOther: boolean | undefined) {\n    if (blockOther) {\n      this.causes.push({\n        type: 'block-other',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addLabel(label: Label, opts: ModerationOpts) {\n    // look up the label definition\n    const labelDef = LABELS[label.val]\n    if (!labelDef) {\n      // ignore labels we don't understand\n      return\n    }\n\n    // look up the label preference\n    const isSelf = label.src === this.did\n    const labeler = isSelf\n      ? undefined\n      : opts.labelers.find((s) => s.labeler.did === label.src)\n\n    /* TODO when 3P labelers are supported\n    if (!isSelf && !labeler) {\n      return // skip labelers not configured by the user\n    }*/\n\n    // establish the label preference for interpretation\n    let labelPref: LabelPreference = 'ignore'\n    if (!labelDef.configurable) {\n      labelPref = labelDef.preferences[0]\n    } else if (labelDef.flags.includes('adult') && !opts.adultContentEnabled) {\n      labelPref = 'hide'\n    } else if (labeler?.labels[label.val]) {\n      labelPref = labeler.labels[label.val]\n    } else if (opts.labels[label.val]) {\n      labelPref = opts.labels[label.val]\n    }\n\n    // ignore labels the user has asked to ignore\n    if (labelPref === 'ignore') {\n      return\n    }\n\n    // establish the priority of the label\n    let priority: 1 | 2 | 5 | 7 | 8\n    if (labelDef.flags.includes('no-override')) {\n      priority = 1\n    } else if (labelPref === 'hide') {\n      priority = 2\n    } else if (labelDef.onwarn === 'blur') {\n      priority = 5\n    } else if (labelDef.onwarn === 'blur-media') {\n      priority = 7\n    } else {\n      priority = 8\n    }\n\n    this.causes.push({\n      type: 'label',\n      source:\n        isSelf || !labeler\n          ? { type: 'user' }\n          : { type: 'labeler', labeler: labeler.labeler },\n      label,\n      labelDef,\n      setting: labelPref,\n      priority,\n    })\n  }\n\n  addMuted(muted: boolean | undefined) {\n    if (muted) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined) {\n    if (mutedByList) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'list', list: mutedByList },\n        priority: 6,\n      })\n    }\n  }\n\n  finalizeDecision(opts: ModerationOpts): ModerationDecision {\n    const mod = new ModerationDecision()\n    mod.did = this.did\n    if (!this.causes.length) {\n      return mod\n    }\n\n    // sort the causes by priority and then choose the top one\n    this.causes.sort((a, b) => a.priority - b.priority)\n    mod.cause = this.causes[0]\n    mod.additionalCauses = this.causes.slice(1)\n\n    // blocked user\n    if (\n      mod.cause.type === 'blocking' ||\n      mod.cause.type === 'blocked-by' ||\n      mod.cause.type === 'block-other'\n    ) {\n      // filter and blur, dont allow override\n      mod.filter = true\n      mod.blur = true\n      mod.noOverride = true\n    }\n    // muted user\n    else if (mod.cause.type === 'muted') {\n      // filter and blur\n      mod.filter = true\n      mod.blur = true\n    }\n    // labeled subject\n    else if (mod.cause.type === 'label') {\n      // 'hide' setting\n      if (mod.cause.setting === 'hide') {\n        // filter\n        mod.filter = true\n      }\n\n      // 'hide' and 'warn' setting, apply onwarn\n      switch (mod.cause.labelDef.onwarn) {\n        case 'alert':\n          mod.alert = true\n          break\n        case 'blur':\n          mod.blur = true\n          break\n        case 'blur-media':\n          mod.blurMedia = true\n          break\n        case null:\n          // do nothing\n          break\n      }\n\n      // apply noOverride as needed\n      if (mod.cause.labelDef.flags.includes('no-override')) {\n        mod.noOverride = true\n      } else if (\n        mod.cause.labelDef.flags.includes('adult') &&\n        !opts.adultContentEnabled\n      ) {\n        mod.noOverride = true\n      }\n    }\n\n    return mod\n  }\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  Label,\n  ModerationSubjectProfile,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideAccount(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.did)\n  if (subject.viewer?.muted) {\n    if (subject.viewer?.mutedByList) {\n      acc.addMutedByList(subject.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.viewer?.muted)\n    }\n  }\n  if (subject.viewer?.blocking) {\n    if (subject.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.viewer?.blockedBy)\n\n  for (const label of filterAccountLabels(subject.labels)) {\n    acc.addLabel(label, opts)\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function filterAccountLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter(\n    (label) => !label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  Label,\n  ModerationSubjectProfile,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.did)\n\n  for (const label of filterProfileLabels(subject.labels)) {\n    acc.addLabel(label, opts)\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function filterProfileLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter((label) =>\n    label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  ModerationSubjectPost,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.author.did)\n\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel(label, opts)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n", "import { AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia } from '../../client'\nimport { ModerationCauseAccumulator } from '../accumulator'\nimport { ModerationOpts, ModerationDecision } from '../types'\nimport { decideAccount } from './account'\n\nexport function decideQuotedPost(\n  subject: AppBskyEmbedRecord.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  if (AppBskyEmbedRecord.isViewRecord(subject.record)) {\n    acc.setDid(subject.record.author.did)\n\n    if (subject.record.labels?.length) {\n      for (const label of subject.record.labels) {\n        acc.addLabel(label, opts)\n      }\n    }\n  } else if (AppBskyEmbedRecord.isViewBlocked(subject.record)) {\n    acc.setDid(subject.record.author.did)\n    if (subject.record.author.viewer?.blocking) {\n      acc.addBlocking(subject.record.author.viewer?.blocking)\n    } else if (subject.record.author.viewer?.blockedBy) {\n      acc.addBlockedBy(subject.record.author.viewer?.blockedBy)\n    } else {\n      acc.addBlockOther(true)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function decideQuotedPostAccount(\n  subject: AppBskyEmbedRecord.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  if (AppBskyEmbedRecord.isViewRecord(subject.record)) {\n    return decideAccount(subject.record.author, opts)\n  }\n  return ModerationDecision.noop()\n}\n\nexport function decideQuotedPostWithMedia(\n  subject: AppBskyEmbedRecordWithMedia.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  if (AppBskyEmbedRecord.isViewRecord(subject.record.record)) {\n    acc.setDid(subject.record.record.author.did)\n\n    if (subject.record.record.labels?.length) {\n      for (const label of subject.record.record.labels) {\n        acc.addLabel(label, opts)\n      }\n    }\n  } else if (AppBskyEmbedRecord.isViewBlocked(subject.record.record)) {\n    acc.setDid(subject.record.record.author.did)\n    if (subject.record.record.author.viewer?.blocking) {\n      acc.addBlocking(subject.record.record.author.viewer?.blocking)\n    } else if (subject.record.record.author.viewer?.blockedBy) {\n      acc.addBlockedBy(subject.record.record.author.viewer?.blockedBy)\n    } else {\n      acc.addBlockOther(true)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function decideQuotedPostWithMediaAccount(\n  subject: AppBskyEmbedRecordWithMedia.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  if (AppBskyEmbedRecord.isViewRecord(subject.record.record)) {\n    return decideAccount(subject.record.record.author, opts)\n  }\n  return ModerationDecision.noop()\n}\n", "import {\n  ModerationSubjectFeedGenerator,\n  ModerationDecision,\n  ModerationOpts,\n} from '../types'\n\nexport function decideFeedGenerator(\n  _subject: ModerationSubjectFeedGenerator,\n  _opts: ModerationOpts,\n): ModerationDecision {\n  // TODO handle labels applied on the feed generator itself\n  return ModerationDecision.noop()\n}\n", "import {\n  ModerationSubjectUserList,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideUserList(\n  _subject: ModerationSubjectUserList,\n  _opts: ModerationOpts,\n): ModerationDecision {\n  // TODO handle labels applied on the list itself\n  return ModerationDecision.noop()\n}\n", "import { AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia } from '../client'\nimport { ModerationDecision, ModerationUI } from './types'\n\nexport function takeHighestPriorityDecision(\n  ...decisions: (ModerationDecision | undefined)[]\n): ModerationDecision {\n  // remove undefined decisions\n  const filtered = decisions.filter((d) => !!d) as ModerationDecision[]\n  if (filtered.length === 0) {\n    return ModerationDecision.noop()\n  }\n\n  // sort by highest priority\n  filtered.sort((a, b) => {\n    if (a.cause && b.cause) {\n      return a.cause.priority - b.cause.priority\n    }\n    if (a.cause) {\n      return -1\n    }\n    if (b.cause) {\n      return 1\n    }\n    return 0\n  })\n\n  // use the top priority\n  return filtered[0]\n}\n\nexport function downgradeDecision(\n  decision: ModerationDecision,\n  to: 'blur' | 'alert' | 'noop',\n) {\n  decision.filter = false\n  decision.noOverride = false\n  if (to === 'noop') {\n    decision.blur = false\n    decision.blurMedia = false\n    decision.alert = false\n    delete decision.cause\n  } else if (to === 'alert') {\n    decision.blur = false\n    decision.blurMedia = false\n    decision.alert = true\n  }\n}\n\nexport function isModerationDecisionNoop(\n  decision: ModerationDecision | undefined,\n  { ignoreFilter }: { ignoreFilter: boolean } = { ignoreFilter: false },\n): boolean {\n  if (!decision) {\n    return true\n  }\n  if (decision.alert) {\n    return false\n  }\n  if (decision.blur) {\n    return false\n  }\n  if (decision.filter && !ignoreFilter) {\n    return false\n  }\n  return true\n}\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function toModerationUI(decision: ModerationDecision): ModerationUI {\n  return {\n    cause: decision.cause,\n    filter: decision.filter,\n    blur: decision.blur,\n    alert: decision.alert,\n    noOverride: decision.noOverride,\n  }\n}\n", "import { AppBskyActorDefs } from '../client/index'\nimport {\n  ModerationSubjectProfile,\n  ModerationSubjectPost,\n  ModerationSubjectFeedGenerator,\n  ModerationSubjectUserList,\n  ModerationOpts,\n  ModerationDecision,\n  ModerationUI,\n} from './types'\nimport { decideAccount } from './subjects/account'\nimport { decideProfile } from './subjects/profile'\nimport { decidePost } from './subjects/post'\nimport {\n  decideQuotedPost,\n  decideQuotedPostAccount,\n  decideQuotedPostWithMedia,\n  decideQuotedPostWithMediaAccount,\n} from './subjects/quoted-post'\nimport { decideFeedGenerator } from './subjects/feed-generator'\nimport { decideUserList } from './subjects/user-list'\nimport {\n  takeHighestPriorityDecision,\n  downgradeDecision,\n  isModerationDecisionNoop,\n  isQuotedPost,\n  isQuotedPostWithMedia,\n  toModerationUI,\n} from './util'\n\n// profiles\n// =\n\nexport interface ProfileModeration {\n  decisions: {\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  account: ModerationUI\n  profile: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ProfileModeration {\n  // decide the moderation the account and the profile\n  const account = decideAccount(subject, opts)\n  const profile = decideProfile(subject, opts)\n\n  // if the decision is supposed to blur media,\n  // - have it apply to the view if it's on the account\n  // - otherwise ignore it\n  if (account.blurMedia) {\n    account.blur = true\n  }\n\n  // dont give profile.filter because that is meaningless\n  profile.filter = false\n\n  // downgrade based on authorship\n  if (!isModerationDecisionNoop(account) && account.did === opts.userDid) {\n    downgradeDecision(account, 'alert')\n  }\n  if (!isModerationDecisionNoop(profile) && profile.did === opts.userDid) {\n    downgradeDecision(profile, 'alert')\n  }\n\n  // derive avatar blurring from account & profile, but override for mutes because that shouldnt blur\n  let avatarBlur = false\n  let avatarNoOverride = false\n  if ((account.blur || account.blurMedia) && account.cause?.type !== 'muted') {\n    avatarBlur = true\n    avatarNoOverride = account.noOverride || profile.noOverride\n  } else if (profile.blur || profile.blurMedia) {\n    avatarBlur = true\n    avatarNoOverride = account.noOverride || profile.noOverride\n  }\n\n  // dont blur the account for blocking & muting\n  if (\n    account.cause?.type === 'blocking' ||\n    account.cause?.type === 'blocked-by' ||\n    account.cause?.type === 'muted'\n  ) {\n    account.blur = false\n    account.noOverride = false\n  }\n\n  return {\n    decisions: { account, profile },\n\n    // moderate all content based on account\n    account:\n      account.filter || account.blur || account.alert\n        ? toModerationUI(account)\n        : {},\n\n    // moderate the profile details based on the profile\n    profile:\n      profile.filter || profile.blur || profile.alert\n        ? toModerationUI(profile)\n        : {},\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: avatarBlur,\n      alert: account.alert || profile.alert,\n      noOverride: avatarNoOverride,\n    },\n  }\n}\n\n// posts\n// =\n\nexport interface PostModeration {\n  decisions: {\n    post: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n    quote?: ModerationDecision\n    quotedAccount?: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n  embed: ModerationUI\n}\n\nexport function moderatePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): PostModeration {\n  // decide the moderation for the post, the post author's account,\n  // and the post author's profile\n  const post = decidePost(subject, opts)\n  const account = decideAccount(subject.author, opts)\n  const profile = decideProfile(subject.author, opts)\n\n  // decide the moderation for any quoted posts\n  let quote: ModerationDecision | undefined\n  let quotedAccount: ModerationDecision | undefined\n  if (isQuotedPost(subject.embed)) {\n    quote = decideQuotedPost(subject.embed, opts)\n    quotedAccount = decideQuotedPostAccount(subject.embed, opts)\n  } else if (isQuotedPostWithMedia(subject.embed)) {\n    quote = decideQuotedPostWithMedia(subject.embed, opts)\n    quotedAccount = decideQuotedPostWithMediaAccount(subject.embed, opts)\n  }\n  if (quote?.blurMedia) {\n    quote.blur = true // treat blurMedia of quote as blur of quote\n  }\n\n  // downgrade based on authorship\n  if (!isModerationDecisionNoop(post) && post.did === opts.userDid) {\n    downgradeDecision(post, 'blur')\n  }\n  if (account.cause && account.did === opts.userDid) {\n    downgradeDecision(account, 'noop')\n  }\n  if (profile.cause && profile.did === opts.userDid) {\n    downgradeDecision(profile, 'noop')\n  }\n  if (quote && !isModerationDecisionNoop(quote) && quote.did === opts.userDid) {\n    downgradeDecision(quote, 'blur')\n  }\n  if (\n    quotedAccount &&\n    !isModerationDecisionNoop(quotedAccount) &&\n    quotedAccount.did === opts.userDid\n  ) {\n    downgradeDecision(quotedAccount, 'noop')\n  }\n\n  // derive filtering from feeds from the post, post author's account,\n  // quoted post, and quoted post author's account\n  const mergedForFeed = takeHighestPriorityDecision(\n    post,\n    account,\n    quote,\n    quotedAccount,\n  )\n\n  // derive view blurring from the post and the post author's account\n  const mergedForView = takeHighestPriorityDecision(post, account)\n\n  // derive embed blurring from the quoted post and the quoted post author's account\n  const mergedQuote = takeHighestPriorityDecision(quote, quotedAccount)\n\n  // derive avatar blurring from account & profile, but override for mutes because that shouldnt blur\n  let blurAvatar = false\n  if ((account.blur || account.blurMedia) && account.cause?.type !== 'muted') {\n    blurAvatar = true\n  } else if (\n    (profile.blur || profile.blurMedia) &&\n    profile.cause?.type !== 'muted'\n  ) {\n    blurAvatar = true\n  }\n\n  return {\n    decisions: { post, account, profile, quote, quotedAccount },\n\n    // content behaviors are pulled from feed and view derivations above\n    content: {\n      cause: !isModerationDecisionNoop(mergedForView)\n        ? mergedForView.cause\n        : mergedForFeed.filter\n        ? mergedForFeed.cause\n        : undefined,\n      filter: mergedForFeed.filter,\n      blur: mergedForView.blur,\n      alert: mergedForView.alert,\n      noOverride: mergedForView.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: blurAvatar,\n      alert: account.alert || profile.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n\n    // blur the embed if the quoted post required it,\n    // or else if the account or post decision was to blur media\n    embed: !isModerationDecisionNoop(mergedQuote, { ignoreFilter: true })\n      ? {\n          cause: mergedQuote.cause,\n          blur: mergedQuote.blur,\n          alert: mergedQuote.alert,\n          noOverride: mergedQuote.noOverride,\n        }\n      : account.blurMedia\n      ? {\n          cause: account.cause,\n          blur: true,\n          noOverride: account.noOverride,\n        }\n      : post.blurMedia\n      ? {\n          cause: post.cause,\n          blur: true,\n          noOverride: post.noOverride,\n        }\n      : {},\n  }\n}\n\n// feed generators\n// =\n\nexport interface FeedGeneratorModeration {\n  decisions: {\n    feedGenerator: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): FeedGeneratorModeration {\n  // decide the moderation for the generator, the generator creator's account,\n  // and the generator creator's profile\n  const feedGenerator = decideFeedGenerator(subject, opts)\n  const account = decideAccount(subject.creator, opts)\n  const profile = decideProfile(subject.creator, opts)\n\n  // derive behaviors from feeds from the generator and the generator's account\n  const merged = takeHighestPriorityDecision(feedGenerator, account)\n\n  return {\n    decisions: { feedGenerator, account, profile },\n\n    // content behaviors are pulled from merged decisions\n    content: {\n      cause: isModerationDecisionNoop(merged) ? undefined : merged.cause,\n      filter: merged.filter,\n      blur: merged.blur,\n      alert: merged.alert,\n      noOverride: merged.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: account.blurMedia || profile.blurMedia,\n      alert: account.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n  }\n}\n\n// user lists\n// =\n\nexport interface UserListModeration {\n  decisions: {\n    userList: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): UserListModeration {\n  // decide the moderation for the list, the list creator's account,\n  // and the list creator's profile\n  const userList = decideUserList(subject, opts)\n  const account = AppBskyActorDefs.isProfileViewBasic(subject.creator)\n    ? decideAccount(subject.creator, opts)\n    : ModerationDecision.noop()\n  const profile = AppBskyActorDefs.isProfileViewBasic(subject.creator)\n    ? decideProfile(subject.creator, opts)\n    : ModerationDecision.noop()\n\n  // derive behaviors from feeds from the list and the list's account\n  const merged = takeHighestPriorityDecision(userList, account)\n\n  return {\n    decisions: { userList, account, profile },\n\n    // content behaviors are pulled from merged decisions\n    content: {\n      cause: isModerationDecisionNoop(merged) ? undefined : merged.cause,\n      filter: merged.filter,\n      blur: merged.blur,\n      alert: merged.alert,\n      noOverride: merged.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: account.blurMedia || profile.blurMedia,\n      alert: account.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n  }\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { LabelGroupDefinitionMap } from '../types'\nimport { LABELS } from './labels'\n\nexport const LABEL_GROUPS: LabelGroupDefinitionMap = {\n  system: {\n    id: 'system',\n    configurable: false,\n    labels: [LABELS['!hide'], LABELS['!no-promote'], LABELS['!warn']],\n    strings: {\n      settings: {\n        en: {\n          name: 'System',\n          description: 'Moderator overrides for special cases.',\n        },\n      },\n    },\n  },\n  legal: {\n    id: 'legal',\n    configurable: false,\n    labels: [LABELS['dmca-violation'], LABELS['doxxing']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Legal',\n          description: 'Content removed for legal reasons.',\n        },\n      },\n    },\n  },\n  sexual: {\n    id: 'sexual',\n    configurable: true,\n    labels: [LABELS['porn'], LABELS['sexual'], LABELS['nudity']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Adult Content',\n          description: 'Content which is sexual in nature.',\n        },\n      },\n    },\n  },\n  violence: {\n    id: 'violence',\n    configurable: true,\n    labels: [\n      LABELS['nsfl'],\n      LABELS['corpse'],\n      LABELS['gore'],\n      LABELS['torture'],\n      LABELS['self-harm'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Violence',\n          description: 'Content which is violent or deeply disturbing.',\n        },\n      },\n    },\n  },\n  intolerance: {\n    id: 'intolerance',\n    configurable: true,\n    labels: [\n      LABELS['intolerant-race'],\n      LABELS['intolerant-gender'],\n      LABELS['intolerant-sexual-orientation'],\n      LABELS['intolerant-religion'],\n      LABELS['intolerant'],\n      LABELS['icon-intolerant'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerance',\n          description:\n            'Content or behavior which is hateful or intolerant toward a group of people.',\n        },\n      },\n    },\n  },\n  rude: {\n    id: 'rude',\n    configurable: true,\n    labels: [LABELS['threat']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Rude',\n          description: 'Behavior which is rude toward other users.',\n        },\n      },\n    },\n  },\n  curation: {\n    id: 'curation',\n    configurable: true,\n    labels: [LABELS['spoiler']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Curational',\n          description:\n            'Subjective moderation geared towards curating a more positive environment.',\n        },\n      },\n    },\n  },\n  spam: {\n    id: 'spam',\n    configurable: true,\n    labels: [LABELS['spam']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Spam',\n          description: \"Content which doesn't add to the conversation.\",\n        },\n      },\n    },\n  },\n  misinfo: {\n    id: 'misinfo',\n    configurable: true,\n    labels: [\n      LABELS['account-security'],\n      LABELS['net-abuse'],\n      LABELS['impersonation'],\n      LABELS['scam'],\n      LABELS['misleading'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Misinformation',\n          description: 'Content which misleads or defrauds users.',\n        },\n      },\n    },\n  },\n}\n", "import { AtUri } from '@atproto/syntax'\nimport { AtpAgent } from './agent'\nimport {\n  AppBskyFeedPost,\n  AppBskyActorProfile,\n  AppBskyActorDefs,\n  ComAtprotoRepoPutRecord,\n} from './client'\nimport {\n  BskyPreferences,\n  BskyLabelPreference,\n  BskyFeedViewPreference,\n  BskyThreadViewPreference,\n} from './types'\n\nconst FEED_VIEW_PREF_DEFAULTS = {\n  hideReplies: false,\n  hideRepliesByUnfollowed: false,\n  hideRepliesByLikeCount: 0,\n  hideReposts: false,\n  hideQuotePosts: false,\n}\nconst THREAD_VIEW_PREF_DEFAULTS = {\n  sort: 'oldest',\n  prioritizeFollowedUsers: true,\n}\n\ndeclare global {\n  interface Array<T> {\n    findLast(\n      predicate: (value: T, index: number, obj: T[]) => unknown,\n      thisArg?: any,\n    ): T\n  }\n}\n\nexport class BskyAgent extends AtpAgent {\n  get app() {\n    return this.api.app\n  }\n\n  getTimeline: typeof this.api.app.bsky.feed.getTimeline = (params, opts) =>\n    this.api.app.bsky.feed.getTimeline(params, opts)\n\n  getAuthorFeed: typeof this.api.app.bsky.feed.getAuthorFeed = (params, opts) =>\n    this.api.app.bsky.feed.getAuthorFeed(params, opts)\n\n  getActorLikes: typeof this.api.app.bsky.feed.getActorLikes = (params, opts) =>\n    this.api.app.bsky.feed.getActorLikes(params, opts)\n\n  getPostThread: typeof this.api.app.bsky.feed.getPostThread = (params, opts) =>\n    this.api.app.bsky.feed.getPostThread(params, opts)\n\n  getPost: typeof this.api.app.bsky.feed.post.get = (params) =>\n    this.api.app.bsky.feed.post.get(params)\n\n  getPosts: typeof this.api.app.bsky.feed.getPosts = (params, opts) =>\n    this.api.app.bsky.feed.getPosts(params, opts)\n\n  getLikes: typeof this.api.app.bsky.feed.getLikes = (params, opts) =>\n    this.api.app.bsky.feed.getLikes(params, opts)\n\n  getRepostedBy: typeof this.api.app.bsky.feed.getRepostedBy = (params, opts) =>\n    this.api.app.bsky.feed.getRepostedBy(params, opts)\n\n  getFollows: typeof this.api.app.bsky.graph.getFollows = (params, opts) =>\n    this.api.app.bsky.graph.getFollows(params, opts)\n\n  getFollowers: typeof this.api.app.bsky.graph.getFollowers = (params, opts) =>\n    this.api.app.bsky.graph.getFollowers(params, opts)\n\n  getProfile: typeof this.api.app.bsky.actor.getProfile = (params, opts) =>\n    this.api.app.bsky.actor.getProfile(params, opts)\n\n  getProfiles: typeof this.api.app.bsky.actor.getProfiles = (params, opts) =>\n    this.api.app.bsky.actor.getProfiles(params, opts)\n\n  getSuggestions: typeof this.api.app.bsky.actor.getSuggestions = (\n    params,\n    opts,\n  ) => this.api.app.bsky.actor.getSuggestions(params, opts)\n\n  searchActors: typeof this.api.app.bsky.actor.searchActors = (params, opts) =>\n    this.api.app.bsky.actor.searchActors(params, opts)\n\n  searchActorsTypeahead: typeof this.api.app.bsky.actor.searchActorsTypeahead =\n    (params, opts) =>\n      this.api.app.bsky.actor.searchActorsTypeahead(params, opts)\n\n  listNotifications: typeof this.api.app.bsky.notification.listNotifications = (\n    params,\n    opts,\n  ) => this.api.app.bsky.notification.listNotifications(params, opts)\n\n  countUnreadNotifications: typeof this.api.app.bsky.notification.getUnreadCount =\n    (params, opts) =>\n      this.api.app.bsky.notification.getUnreadCount(params, opts)\n\n  async post(\n    record: Partial<AppBskyFeedPost.Record> &\n      Omit<AppBskyFeedPost.Record, 'createdAt'>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    record.createdAt = record.createdAt || new Date().toISOString()\n    return this.api.app.bsky.feed.post.create(\n      { repo: this.session.did },\n      record as AppBskyFeedPost.Record,\n    )\n  }\n\n  async deletePost(postUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const postUrip = new AtUri(postUri)\n    return await this.api.app.bsky.feed.post.delete({\n      repo: postUrip.hostname,\n      rkey: postUrip.rkey,\n    })\n  }\n\n  async like(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.like.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteLike(likeUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const likeUrip = new AtUri(likeUri)\n    return await this.api.app.bsky.feed.like.delete({\n      repo: likeUrip.hostname,\n      rkey: likeUrip.rkey,\n    })\n  }\n\n  async repost(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.repost.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteRepost(repostUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const repostUrip = new AtUri(repostUri)\n    return await this.api.app.bsky.feed.repost.delete({\n      repo: repostUrip.hostname,\n      rkey: repostUrip.rkey,\n    })\n  }\n\n  async follow(subjectDid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.follow.create(\n      { repo: this.session.did },\n      {\n        subject: subjectDid,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteFollow(followUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const followUrip = new AtUri(followUri)\n    return await this.api.app.bsky.graph.follow.delete({\n      repo: followUrip.hostname,\n      rkey: followUrip.rkey,\n    })\n  }\n\n  async upsertProfile(\n    updateFn: (\n      existing: AppBskyActorProfile.Record | undefined,\n    ) => AppBskyActorProfile.Record | Promise<AppBskyActorProfile.Record>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n\n    let retriesRemaining = 5\n    while (retriesRemaining >= 0) {\n      // fetch existing\n      const existing = await this.com.atproto.repo\n        .getRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n        })\n        .catch((_) => undefined)\n\n      // run the update\n      const updated = await updateFn(existing?.data.value)\n      if (updated) {\n        updated.$type = 'app.bsky.actor.profile'\n      }\n\n      // validate the record\n      const validation = AppBskyActorProfile.validateRecord(updated)\n      if (!validation.success) {\n        throw validation.error\n      }\n\n      try {\n        // attempt the put\n        await this.com.atproto.repo.putRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n          record: updated,\n          swapRecord: existing?.data.cid || null,\n        })\n      } catch (e: unknown) {\n        if (\n          retriesRemaining > 0 &&\n          e instanceof ComAtprotoRepoPutRecord.InvalidSwapError\n        ) {\n          // try again\n          retriesRemaining--\n          continue\n        } else {\n          throw e\n        }\n      }\n      break\n    }\n  }\n\n  async mute(actor: string) {\n    return this.api.app.bsky.graph.muteActor({ actor })\n  }\n\n  async unmute(actor: string) {\n    return this.api.app.bsky.graph.unmuteActor({ actor })\n  }\n\n  async muteModList(uri: string) {\n    return this.api.app.bsky.graph.muteActorList({\n      list: uri,\n    })\n  }\n\n  async unmuteModList(uri: string) {\n    return this.api.app.bsky.graph.unmuteActorList({\n      list: uri,\n    })\n  }\n\n  async blockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.listblock.create(\n      { repo: this.session.did },\n      {\n        subject: uri,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async unblockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const listInfo = await this.api.app.bsky.graph.getList({\n      list: uri,\n      limit: 1,\n    })\n    if (!listInfo.data.list.viewer?.blocked) {\n      return\n    }\n    const { rkey } = new AtUri(listInfo.data.list.viewer.blocked)\n    return await this.api.app.bsky.graph.listblock.delete({\n      repo: this.session.did,\n      rkey,\n    })\n  }\n\n  async updateSeenNotifications(seenAt?: string) {\n    seenAt = seenAt || new Date().toISOString()\n    return this.api.app.bsky.notification.updateSeen({\n      seenAt,\n    })\n  }\n\n  async getPreferences(): Promise<BskyPreferences> {\n    const prefs: BskyPreferences = {\n      feeds: {\n        saved: undefined,\n        pinned: undefined,\n      },\n      feedViewPrefs: {\n        home: {\n          ...FEED_VIEW_PREF_DEFAULTS,\n        },\n      },\n      threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n      adultContentEnabled: false,\n      contentLabels: {},\n      birthDate: undefined,\n    }\n    const res = await this.app.bsky.actor.getPreferences({})\n    for (const pref of res.data.preferences) {\n      if (\n        AppBskyActorDefs.isAdultContentPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        prefs.adultContentEnabled = pref.enabled\n      } else if (\n        AppBskyActorDefs.isContentLabelPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        let value = pref.visibility\n        if (value === 'show') {\n          value = 'ignore'\n        }\n        if (value === 'ignore' || value === 'warn' || value === 'hide') {\n          prefs.contentLabels[pref.label] = value as BskyLabelPreference\n        }\n      } else if (\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success\n      ) {\n        prefs.feeds.saved = pref.saved\n        prefs.feeds.pinned = pref.pinned\n      } else if (\n        AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n        AppBskyActorDefs.validatePersonalDetailsPref(pref).success\n      ) {\n        if (pref.birthDate) {\n          prefs.birthDate = new Date(pref.birthDate)\n        }\n      } else if (\n        AppBskyActorDefs.isFeedViewPref(pref) &&\n        AppBskyActorDefs.validateFeedViewPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, feed, ...v } = pref\n        prefs.feedViewPrefs[pref.feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v }\n      } else if (\n        AppBskyActorDefs.isThreadViewPref(pref) &&\n        AppBskyActorDefs.validateThreadViewPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v }\n      }\n    }\n    return prefs\n  }\n\n  async setSavedFeeds(saved: string[], pinned: string[]) {\n    return updateFeedPreferences(this, () => ({\n      saved,\n      pinned,\n    }))\n  }\n\n  async addSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned,\n    }))\n  }\n\n  async removeSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: saved.filter((uri) => uri !== v),\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async addPinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned: [...pinned.filter((uri) => uri !== v), v],\n    }))\n  }\n\n  async removePinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved,\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async setAdultContentEnabled(v: boolean) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let adultContentPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isAdultContentPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success,\n      )\n      if (adultContentPref) {\n        adultContentPref.enabled = v\n      } else {\n        adultContentPref = {\n          $type: 'app.bsky.actor.defs#adultContentPref',\n          enabled: v,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isAdultContentPref(pref))\n        .concat([adultContentPref])\n    })\n  }\n\n  async setContentLabelPref(key: string, value: BskyLabelPreference) {\n    // TEMP update old value\n    if (value === 'show') {\n      value = 'ignore'\n    }\n\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let labelPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isContentLabelPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success &&\n          pref.label === key,\n      )\n      if (labelPref) {\n        labelPref.visibility = value\n      } else {\n        labelPref = {\n          $type: 'app.bsky.actor.defs#contentLabelPref',\n          label: key,\n          visibility: value,\n        }\n      }\n      return prefs\n        .filter(\n          (pref) =>\n            !AppBskyActorDefs.isContentLabelPref(pref) || pref.label !== key,\n        )\n        .concat([labelPref])\n    })\n  }\n\n  async setPersonalDetails({\n    birthDate,\n  }: {\n    birthDate: string | Date | undefined\n  }) {\n    birthDate = birthDate instanceof Date ? birthDate.toISOString() : birthDate\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let personalDetailsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n          AppBskyActorDefs.validatePersonalDetailsPref(pref).success,\n      )\n      if (personalDetailsPref) {\n        personalDetailsPref.birthDate = birthDate\n      } else {\n        personalDetailsPref = {\n          $type: 'app.bsky.actor.defs#personalDetailsPref',\n          birthDate,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isPersonalDetailsPref(pref))\n        .concat([personalDetailsPref])\n    })\n  }\n\n  async setFeedViewPrefs(feed: string, pref: Partial<BskyFeedViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isFeedViewPref(pref) &&\n          AppBskyActorDefs.validateFeedViewPref(pref).success &&\n          pref.feed === feed,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter(\n          (p) => !AppBskyActorDefs.isFeedViewPref(pref) || p.feed !== feed,\n        )\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#feedViewPref', feed }])\n    })\n  }\n\n  async setThreadViewPrefs(pref: Partial<BskyThreadViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isThreadViewPref(pref) &&\n          AppBskyActorDefs.validateThreadViewPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isThreadViewPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#threadViewPref' }])\n    })\n  }\n}\n\n/**\n * This function updates the preferences of a user and allows for a callback function to be executed\n * before the update.\n * @param cb - cb is a callback function that takes in a single parameter of type\n * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n * update the preferences of the user. The function is called with the current preferences as an\n * argument and if the callback returns false, the preferences are not updated.\n */\nasync function updatePreferences(\n  agent: BskyAgent,\n  cb: (\n    prefs: AppBskyActorDefs.Preferences,\n  ) => AppBskyActorDefs.Preferences | false,\n) {\n  const res = await agent.app.bsky.actor.getPreferences({})\n  const newPrefs = cb(res.data.preferences)\n  if (newPrefs === false) {\n    return\n  }\n  await agent.app.bsky.actor.putPreferences({\n    preferences: newPrefs,\n  })\n}\n\n/**\n * A helper specifically for updating feed preferences\n */\nasync function updateFeedPreferences(\n  agent: BskyAgent,\n  cb: (\n    saved: string[],\n    pinned: string[],\n  ) => { saved: string[]; pinned: string[] },\n): Promise<{ saved: string[]; pinned: string[] }> {\n  let res\n  await updatePreferences(agent, (prefs: AppBskyActorDefs.Preferences) => {\n    let feedsPref = prefs.findLast(\n      (pref) =>\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success,\n    ) as AppBskyActorDefs.SavedFeedsPref | undefined\n    if (feedsPref) {\n      res = cb(feedsPref.saved, feedsPref.pinned)\n      feedsPref.saved = res.saved\n      feedsPref.pinned = res.pinned\n    } else {\n      res = cb([], [])\n      feedsPref = {\n        $type: 'app.bsky.actor.defs#savedFeedsPref',\n        saved: res.saved,\n        pinned: res.pinned,\n      }\n    }\n    return prefs\n      .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n      .concat([feedsPref])\n  })\n  return res\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n", "/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n", "/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../functions/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function deleteInstallations(\n  installations: Installations\n): Promise<void> {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * An user defined callback function that gets called when Installations ID changes.\n *\n * @public\n */\nexport type IdChangeCallbackFn = (installationId: string) => void;\n/**\n * Unsubscribe a callback function previously added via {@link IdChangeCallbackFn}.\n *\n * @public\n */\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nexport function onIdChange(\n  installations: Installations,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  addCallback(appConfig, callback);\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nexport function getInstallations(app: FirebaseApp = getApp()): Installations {\n  const installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n", "/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\nimport { stageLog } from '../helpers/logToFirelog';\n\n// maxActions is an experimental property and not part of the official\n// TypeScript interface\n// https://developer.mozilla.org/en-US/docs/Web/API/Notification/maxActions\ninterface NotificationExperimental extends Notification {\n  maxActions?: number;\n}\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // log to Firelog with user consent\n  if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\n    await stageLog(messaging, internalPayload);\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      await messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...(internalPayload.notification as unknown as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification as unknown as NotificationExperimental;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n", "/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Messaging } from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function _setDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  (messaging as MessagingService).deliveryMetricsExportedToBigQueryEnabled =\n    enable;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInSw } from './helpers/register';\n\nexport * from './interfaces/public-types';\nexport {\n  onBackgroundMessage,\n  getMessagingInSw as getMessaging,\n  experimentalSetDeliveryMetricsExportedToBigQueryEnabled\n} from './api';\nexport { isSwSupported as isSupported } from './api/isSupported';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-sw': Messaging;\n  }\n}\n\nregisterMessagingInSw();\n", "import { AtpSessionData, AtpSessionEvent, BskyAgent } from \"@atproto/api\";\nimport { IndexedDBStorage } from \"./indexeddb\";\nimport { PushPreferences, Settings, User } from \"./store\";\nimport { i18n } from \"./i18n\";\n\nexport type PushNotification = {\n    type: \"like\" | \"reply\" | \"quote\" | \"repost\" | \"follow\" | \"mention\";\n    fromDid: string;\n    toDid: string;\n    tokens?: string[];\n    postUri?: string;\n};\n\nexport async function getBskyClientAndUser(): Promise<{ bskyClient: BskyAgent; user?: User; settings?: Settings }> {\n    const db = new IndexedDBStorage(\"skychat\", 1);\n    const user = (await db.get(\"user\")) as User | undefined;\n\n    try {\n        if (!user) throw Error();\n        let session: AtpSessionData | undefined;\n        const persistSession = (evt: AtpSessionEvent, s?: AtpSessionData) => {\n            if (evt == \"create\" || evt == \"update\") {\n                user.session = s;\n                db.set(\"user\", user);\n            }\n        };\n        const bskyClient = new BskyAgent({ service: \"https://bsky.social\", persistSession });\n        let resumeSuccess = false;\n        if (user.session) {\n            const resume = await bskyClient.resumeSession(user.session);\n            resumeSuccess = resume.success;\n        }\n        if (!resumeSuccess) {\n            const response = await bskyClient.login({\n                identifier: user.account,\n                password: user.password,\n            });\n            if (!response.success) {\n                throw Error();\n            }\n        }\n        return { bskyClient, user, settings: (await db.get(\"settings\")) as Settings | undefined };\n    } catch (e) {\n        // no-op in case resume didn't work.\n        return { bskyClient: new BskyAgent({ service: \"https://api.bsky.app\" }) };\n    }\n}\n\n// FIXME server should batch notifications, less logins/less wake-ups\n// FIXME registered users should send their push prefs per registration token to the server\nexport async function processPushNotification(payload: any, showNotification: (title: string, options: any) => void) {\n    if (payload.data && payload.data.type && payload.data.fromDid) {\n        const notification = payload.data as PushNotification;\n        const { bskyClient, user, settings } = await getBskyClientAndUser();\n        if (!user || user.profile.did != payload.data.toDid) {\n            console.error(\"Received notification for other user, or not logged in.\");\n            return;\n        }\n        if (!settings || !settings.pushPrefs) {\n            console.error(\"No push preferences found.\");\n            return;\n        }\n        const pushPrefs = settings.pushPrefs;\n        if (!pushPrefs.enabled) {\n            console.log(\"User disabled push prefs\");\n            return;\n        }\n        try {\n            switch (notification.type) {\n                case \"like\":\n                    if (!pushPrefs.likes) throw new Error();\n                    break;\n                case \"reply\":\n                    if (!pushPrefs.replies) throw new Error();\n                    break;\n                case \"quote\":\n                    if (!pushPrefs.quotes) throw new Error();\n                    break;\n                case \"repost\":\n                    if (!pushPrefs.reposts) throw new Error();\n                    break;\n                case \"follow\":\n                    if (!pushPrefs.newFollowers) throw new Error();\n                    break;\n                case \"mention\":\n                    if (!pushPrefs.mentions) throw new Error();\n                    break;\n            }\n        } catch (e) {\n            console.log(\"User has disabled \" + notification.type + \" notifications\");\n            return;\n        }\n\n        let from = \"Someone\";\n        let postText = \"\";\n        try {\n            const response = await bskyClient.getProfile({ actor: notification.fromDid });\n            if (response.success) {\n                if (response.data.viewer) {\n                    if (\n                        response.data.viewer.blocking ||\n                        response.data.viewer.blockingByList ||\n                        response.data.viewer.muted ||\n                        response.data.viewer.mutedByList\n                    ) {\n                        console.error(\n                            \"Originator of notification (\" + (response.data.displayName ?? response.data.handle) + \") blocked or muted\",\n                            response.data.viewer\n                        );\n                        return;\n                    }\n                }\n                from = response.data.displayName ?? response.data.handle;\n            }\n        } catch (e) {\n            console.error(\"Couldn't fetch profile for \" + payload.data.from, e);\n        }\n        if (payload.data.postUri) {\n            try {\n                const response = await bskyClient.app.bsky.feed.getPosts({ uris: [payload.data.postUri] });\n                if (response.success) {\n                    const post = response.data.posts[0];\n                    postText = (post.record as any)?.text;\n                }\n            } catch (e) {\n                console.error(\"Couldn't fetch post for \" + payload.data.from, e);\n            }\n        }\n        let message = \"\";\n        if (!pushPrefs?.enabled) return;\n        switch (notification.type) {\n            case \"follow\":\n                if (!pushPrefs?.newFollowers) return;\n                message = i18n(\"is following you\")(from);\n                break;\n            case \"like\":\n                if (!pushPrefs?.likes) return;\n                message = i18n(\"liked your post\")(from);\n                break;\n            case \"quote\":\n                if (!pushPrefs?.quotes) return;\n                message = i18n(\"quoted your post\")(from);\n                break;\n            case \"reply\":\n                if (!pushPrefs?.replies) return;\n                message = i18n(\"replied to your post\")(from);\n                break;\n            case \"repost\":\n                if (!pushPrefs?.reposts) return;\n                message = i18n(\"reposted your post\")(from);\n                break;\n            case \"mention\":\n                if (!pushPrefs?.mentions) return;\n                message = i18n(\"mentioned you\")(from);\n                break;\n            default:\n                message = i18n(\"You have a new notification\");\n        }\n\n        if (postText.length > 0) message += `\\n${postText}`;\n\n        if (navigator.userAgent.toLowerCase().includes(\"android\")) {\n            showNotification(message, {\n                body: postText,\n                icon: \"./logo.png\",\n            } as any);\n        } else {\n            showNotification(i18n(\"New notification\"), {\n                body: postText.length > 0 ? message + `\\n${postText}` : message,\n                icon: \"./logo.png\",\n            } as any);\n        }\n    }\n}\n", "export class IndexedDBStorage {\n    private dbName: string;\n    private dbVersion: number;\n    private db: IDBDatabase | null = null;\n\n    constructor(dbName: string, dbVersion: number) {\n        this.dbName = dbName;\n        this.dbVersion = dbVersion;\n    }\n\n    private async openDatabase(): Promise<IDBDatabase> {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, this.dbVersion);\n\n            request.onupgradeneeded = (event) => {\n                const db = request.result;\n                if (!db.objectStoreNames.contains(\"store\")) {\n                    db.createObjectStore(\"store\");\n                }\n            };\n\n            request.onsuccess = (event) => {\n                this.db = request.result;\n                resolve(this.db);\n            };\n\n            request.onerror = (event) => {\n                reject(request.error);\n            };\n        });\n    }\n\n    async set(key: string, value: any): Promise<void> {\n        if (!this.db) {\n            await this.openDatabase();\n        }\n\n        return new Promise((resolve, reject) => {\n            const transaction = this.db!.transaction([\"store\"], \"readwrite\");\n            const objectStore = transaction.objectStore(\"store\");\n            const request = objectStore.put(value, key);\n\n            request.onsuccess = () => {\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(request.error);\n            };\n        });\n    }\n\n    async get(key: string): Promise<any | null> {\n        if (!this.db) {\n            await this.openDatabase();\n        }\n\n        return new Promise((resolve, reject) => {\n            const transaction = this.db!.transaction([\"store\"], \"readonly\");\n            const objectStore = transaction.objectStore(\"store\");\n            const request = objectStore.get(key);\n\n            request.onsuccess = () => {\n                resolve(request.result);\n            };\n\n            request.onerror = (event) => {\n                reject(request.error);\n            };\n        });\n    }\n\n    async remove(key: string): Promise<void> {\n        if (!this.db) {\n            await this.openDatabase();\n        }\n\n        return new Promise((resolve, reject) => {\n            const transaction = this.db!.transaction([\"store\"], \"readwrite\");\n            const objectStore = transaction.objectStore(\"store\");\n            const request = objectStore.delete(key);\n\n            request.onsuccess = () => {\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(request.error);\n            };\n        });\n    }\n\n    async clear(): Promise<void> {\n        if (!this.db) {\n            await this.openDatabase();\n        }\n\n        return new Promise((resolve, reject) => {\n            const transaction = this.db!.transaction([\"store\"], \"readwrite\");\n            const objectStore = transaction.objectStore(\"store\");\n            const request = objectStore.clear();\n\n            request.onsuccess = () => {\n                resolve();\n            };\n\n            request.onerror = (event) => {\n                reject(request.error);\n            };\n        });\n    }\n}\n", "export interface Messages {\n    \"Not connected\": string;\n    \"Couldn't delete post\": string;\n    Home: string;\n    \"Could not load list\": string;\n    \"End of list\": string;\n    \"Could not load more items\": string;\n    Notifications: string;\n    \"No more notifications\": string;\n    \"Write your quote. It will be added to your thread about ${this.hashtag!}.\": (hashtag: string) => string;\n    \"Write your quote post.\": string;\n    \"Write your reply. It will be added to the thread by ${this.replyTo.author.displayName ?? this.replyTo.author.handle}.\": (\n        handle: string\n    ) => string;\n    \"Write your reply\": string;\n    \"Add a post to your thread about ${this.hashtag!}. The hashtag will be added automatically.\": (hashtag: string) => string;\n    \"What's up?\": string;\n    \"Replying to\": string;\n    \"Add card\": string;\n    Quoting: string;\n    \"Sending post\": string;\n    Cancel: string;\n    Post: string;\n    \"You can only upload 4 images per post\": string;\n    \"Couldn't send post\": string;\n    \"Edit Image\": string;\n    \"Add alt text to your image\": string;\n    Thread: string;\n    \"Deleted post\": string;\n    \"Alt Text\": string;\n    \"Thread not found. The post may have been deleted, or you were blocked by the user.\": string;\n    \"You have blocked the author or the author has blocked you.\": string;\n    \"Couldn't load profile of \": (handle: string) => string;\n    Profile: string;\n    Followers: string;\n    Following: string;\n    \"Follows you\": string;\n    followers: string;\n    following: string;\n    posts: string;\n    \"You are blocked by the user.\": string;\n    \"You are blocking the user.\": string;\n    \"You are muting the user.\": string;\n    Posts: string;\n    \"Posts & Replies\": string;\n    Media: string;\n    Likes: string;\n    \"Nothing to show\": string;\n    \"Add to List\": string;\n    Mute: string;\n    Block: string;\n    Report: string;\n    Unfollow: string;\n    Follow: string;\n    Unblock: string;\n    \"No post given\": string;\n    \"Couldn't load likes\": string;\n    \"Could not load reposts\": string;\n    \"No account given\": string;\n    \"Could not load followers\": string;\n    \"Could not load followings\": string;\n    Connecting: string;\n    \"Explore & create hashtag threads in real-time on BlueSky\": string;\n    \"Hashtag, e.g. #imzentrum\": string;\n    \"You are logged in as\": string;\n    \"Want to post and reply to other posts? Enter your username and an app password below. (optional)\": string;\n    \"Account, e.g. badlogic.bsky.social\": string;\n    \"App password\": string;\n    \"Go live!\": string;\n    \"Your credentials will only be stored on your device.\": string;\n    \"Log out\": string;\n    \"How does it work?\": string;\n    \"Trending hashtags\": string;\n    footer: string;\n    \"Please specify a hashtag\": string;\n    \"Please specify an app password for your account. You can get one in your BlueSky app's settings.\": string;\n    \"Log out?\": string;\n    \"No hashtag given\": string;\n    \"Couldn't log in with your BlueSky credentials\": string;\n    \"You have an existing thread for \": (rootUrl: string, hashtag: string) => string;\n    \"Do you want to add new posts to the existing thread, or start a new thread?\": string;\n    \"Use existing thread\": string;\n    \"Start new thread\": string;\n    \"\u2193 Catch up \u2193\": string;\n    \"Reconnected. Some posts may be missing above.\": string;\n    \"No older posts\": string;\n    \"Failed to download image\": string;\n    \"trend description\": string;\n    \"The better BlueSky app\": string;\n    \"(Possibly, once it's done, work-in-progress :D)\": string;\n    \"Sign in\": string;\n    \"Sign up\": string;\n    \"Invalid account or password.\": string;\n    Quotes: string;\n    Reposts: string;\n    \"Mute Thread\": string;\n    \"Mute User\": string;\n    \"Unmute User\": string;\n    \"Block User\": string;\n    \"Unblock User\": string;\n    \"Delete Post\": string;\n    \"Post by muted user\": string;\n    \"Post by blocked user\": string;\n    \"Click to view\": string;\n    Settings: string;\n    Theme: string;\n    Dark: string;\n    Light: string;\n    System: string;\n    \"Logged in as\": string;\n    \"Could not load newer items\": string;\n    \"You can not add an image if you already have a link card\": string;\n    Mutuals: string;\n    \"Couldn't load notifications\": string;\n    \"Invalid stream\": string;\n    \"Sorry, an unknown error occured\": string;\n    \"Show replies\": string;\n    \"Open Thread\": string;\n    \"GIF Search\": string;\n    \"Search for GIFS...\": string;\n    \"Couldn't load images\": string;\n    Moderation: string;\n    Search: string;\n    \"Search for\": string;\n    Users: string;\n    Feeds: string;\n    \"Suggested follows\": string;\n    \"Suggested feeds\": string;\n    \"Enter search terms above to find posts\": string;\n    \"Created by\": string;\n    likes: string;\n    Add: string;\n    Remove: string;\n    \"Pinned Feeds\": string;\n    \"Saved Feeds\": string;\n    \"Discover more feeds\": string;\n    \"Couldn't load your feeds\": string;\n    Feed: string;\n    \"Could not load feed\": string;\n    \"Could not load list feed\": string;\n    \"You don't have pinned feeds\": string;\n    \"You don't have saved feeds\": string;\n    Edit: string;\n    Save: string;\n    \"Search my posts\": string;\n    \"Open in Bluesky\": string;\n    \"Push notifications\": string;\n    Enabled: string;\n    \"New follower\": string;\n    Replies: string;\n    Mentions: string;\n    \"Copy link\": string;\n    \"Copied link to clipboard\": string;\n    List: string;\n    Lists: string;\n    \"Moderation Lists\": string;\n    \"Curation list\": string;\n    \"Moderation list\": string;\n    \"Feeds by me\": string;\n    \"Couldn't mute user\": string;\n    \"Couldn't unmute user\": string;\n    \"Couldn't block user\": string;\n    \"Couldn't unblock user\": string;\n    \"Post does not exist\": string;\n    \"Post author has blocked you\": string;\n    \"You have blocked the post author\": string;\n    \"User Interface\": string;\n    \"Muted words\": string;\n    \"Muted Words\": string;\n    \"Muted users\": string;\n    \"Muted threads\": string;\n    \"Muted Threads\": string;\n    \"Blocked users\": string;\n    \"Moderation lists\": string;\n    \"Allow pinch-zoom\": string;\n    \"is following you\": (handle: string) => string;\n    \"liked your post\": (handle: string) => string;\n    \"quoted your post\": (handle: string) => string;\n    \"replied to your post\": (handle: string) => string;\n    \"reposted your post\": (handle: string) => string;\n    \"mentioned you\": (handle: string) => string;\n    \"You have a new notification\": string;\n    \"New notification\": string;\n    \"Couldn't load your lists\": string;\n    \"You have not created feeds yourself yet\": string;\n    \"Saved Lists\": string;\n    \"You don't have saved lists\": string;\n    \"Lists by me\": string;\n    \"Create a new list\": string;\n    \"New List\": string;\n    \"New Moderation List\": string;\n    \"Edit List\": string;\n    \"Edit Moderation List\": string;\n    Name: string;\n    Description: string;\n    \"Name is required\": string;\n    \"E.g. 'Cool people'\": string;\n    \"Add people\": string;\n    \"Members of\": (name: string) => string;\n    \"Explore without an Account\": string;\n    Explore: string;\n    \"Explore BlueSky with\": string;\n    \"Search people\": string;\n    \"Search posts\": string;\n    \"Search feeds\": string;\n    \"explore-header\": string;\n    \"(Viewed through Skychat)\": string;\n    \"explore-callout\": string;\n    \"Hello, Anyone There?\": string;\n    \"explore-box-1-text-1\": string;\n    \"I need George Takei in my life\": string;\n    \"(You can view all users' followers, followings, posts, media, likes, feeds, and lists)\": string;\n    \"My God, It's Full of Posts\": string;\n    \"explore-box-2-text-1\": string;\n    \"explore-box-2-text-2\": string;\n    \"Do you want to see more?\": string;\n    \"Your Feeds, Your Choice\": string;\n    \"explore-box-3-text-1\": string;\n    \"explore-box-3-text-2\": string;\n    \"explore-box-3-text-3\": string;\n    \"Time for some ...\": string;\n    \"(or how I learned to love the algorithm)\": string;\n    Entertainment: string;\n    News: string;\n    Science: string;\n    \"E.g. names, keywords, ...\": string;\n    \"(Click on a post to view the entire thread)\": string;\n    people: string;\n    \"Couldn't add user to list\": string;\n    \"Couldn't save list\": string;\n    \"Saving list\": string;\n    Joined: string;\n    \"Content filtering\": string;\n    \"I'm an adult\": string;\n    \"Explicit sexual images\": string;\n    \"i.e. pornography\": string;\n    \"Other Nudity\": string;\n    \"Including non-sexual and artistic\": string;\n    \"Sexually suggestive\": string;\n    \"Does not include nudity\": string;\n    \"Violent / Bloody\": string;\n    \"Gore, self-harm, torture\": string;\n    \"Hate group iconography\": string;\n    \"Images of terror groups, articles covering events, etc.\": string;\n    Spam: string;\n    \"Excessive unwanted interactions\": string;\n    Impersonation: string;\n    \"Accounts falsely claiming to be people or orgs\": string;\n    Hide: string;\n    Warn: string;\n    Show: string;\n    \"Hashtag Feed\": string;\n    \"Hashtag Feeds\": string;\n    \"Couldn't load your hashtag feeds\": string;\n    \"New Hashtag Feed\": string;\n    \"in the last\": string;\n    \"10 minutes\": string;\n    Hour: string;\n    Day: string;\n    Week: string;\n    \"Share result\": string;\n    \"User muted by moderation list \": (listName: string) => string;\n    \"User blocked by moderation list \": (listName: string) => string;\n}\n\nconst english: Messages = {\n    \"Not connected\": \"Not connected\",\n    \"Couldn't delete post\": \"Couldn't delete post\",\n    Home: \"Home\",\n    \"Could not load list\": \"Could not load list\",\n    \"End of list\": \"End of list\",\n    \"Could not load more items\": \"Could not load more items\",\n    Notifications: \"Notifications\",\n    \"No more notifications\": \"No more notifications\",\n    \"Write your quote. It will be added to your thread about ${this.hashtag!}.\": (hashtag: string) =>\n        `Write your quote post. It will be added to your thread about ${hashtag}`,\n    \"Write your quote post.\": \"Write your quote post.\",\n    \"Write your reply. It will be added to the thread by ${this.replyTo.author.displayName ?? this.replyTo.author.handle}.\": (handle) =>\n        `Write your reply. It will be added to the thread by ${handle}.`,\n    \"Write your reply\": \"Write your reply\",\n    \"Add a post to your thread about ${this.hashtag!}. The hashtag will be added automatically.\": (hashtag: string) =>\n        `Add a post to your thread about ${hashtag}. The hashtag will be added automatically.`,\n    \"What's up?\": \"What's up?\",\n    \"Replying to\": \"Replying to\",\n    \"Add card\": \"Add card\",\n    Quoting: \"Quoting\",\n    \"Sending post\": \"Sending post\",\n    Cancel: \"Cancel\",\n    Post: \"Post\",\n    \"You can only upload 4 images per post\": \"You can only upload 4 images per post\",\n    \"Couldn't send post\": \"Couldn't send post\",\n    \"Edit Image\": \"Edit Image\",\n    \"Add alt text to your image\": \"Add alt text to your image\",\n    Thread: \"Thread\",\n    \"Deleted post\": \"Deleted post\",\n    \"Alt Text\": \"Alt Text\",\n    \"Thread not found. The post may have been deleted, or you were blocked by the user.\":\n        \"Thread not found. The post may have been deleted, or you were blocked by the user.\",\n    \"You have blocked the author or the author has blocked you.\": \"You have blocked the author or the author has blocked you.\",\n    \"Couldn't load profile of \": (handle: string) => \"Couldn't load profile of \" + handle,\n    Profile: \"Profile\",\n    Followers: \"Followers\",\n    Following: \"Following\",\n    \"Follows you\": \"Follows you\",\n    followers: \"followers\",\n    following: \"following\",\n    posts: \"posts\",\n    \"You are blocked by the user.\": \"You are blocked by the user.\",\n    \"You are blocking the user.\": \"You are blocking the user.\",\n    \"You are muting the user.\": \"You are muting the user.\",\n    Posts: \"Posts\",\n    \"Posts & Replies\": \"Posts & Replies\",\n    Media: \"Media\",\n    Likes: \"Likes\",\n    \"Nothing to show\": \"Nothing to show\",\n    \"Add to List\": \"Add to List\",\n    Mute: \"Mute\",\n    Block: \"Block\",\n    Report: \"Report\",\n    Follow: \"Follow\",\n    Unfollow: \"Unfollow\",\n    Unblock: \"Unblock\",\n    \"No post given\": \"No post given\",\n    \"Couldn't load likes\": \"Couldn't load likes\",\n    \"Could not load reposts\": \"Could not load reposts\",\n    \"No account given\": \"No account given\",\n    \"Could not load followers\": \"Could not load followers\",\n    \"Could not load followings\": \"Could not load followings\",\n    Connecting: \"Connecting\",\n    \"Explore & create hashtag threads in real-time on BlueSky\": \"Explore & create hashtag threads in real-time on BlueSky\",\n    \"Hashtag, e.g. #imzentrum\": \"Hashtag, e.g. #imzentrum\",\n    \"You are logged in as\": \"You are logged in as\",\n    \"Want to post and reply to other posts? Enter your username and an app password below. (optional)\": `Want to post and reply to other posts?\n        Enter your username and an <a href=\"https://bsky.app/settings/app-passwords\">app password</a> below. (optional)`,\n    \"Account, e.g. badlogic.bsky.social\": \"Account, e.g. badlogic.bsky.social\",\n    \"App password\": \"App password\",\n    \"Go live!\": \"Go live!\",\n    \"Your credentials will only be stored on your device.\": \"Your credentials will only be stored on your device.\",\n    \"Log out\": \"Log out\",\n    \"How does it work?\": \"How does it work?\",\n    \"Trending hashtags\": \"Trending hashtags\",\n    footer: `<a href=\"https://skychat.social\" target=\"_blank\">Skychat</a>\n        is lovingly made by\n        <a href=\"https://skychat.social/#profile/badlogic.bsky.social\" target=\"_blank\">Mario Zechner</a><br />\n        <a href=\"https://github.com/badlogic/skychat\" target=\"_blank\">Source code</a>`,\n    \"Please specify a hashtag\": \"Please specify a hashtag\",\n    \"Please specify an app password for your account. You can get one in your BlueSky app's settings.\":\n        \"Please specify an app password for your account. You can get one in your BlueSky app's settings.\",\n    \"Log out?\": \"Log out?\",\n    \"No hashtag given\": \"No hashtag given\",\n    \"Couldn't log in with your BlueSky credentials\": \"Couldn't log in with your BlueSky credentials\",\n    \"You have an existing thread for \": (rootUrl: string, hashtag: string) => `You have an <a href=\"${rootUrl}\">existing thread</a> for ${hashtag}`,\n    \"Do you want to add new posts to the existing thread, or start a new thread?\":\n        \"Do you want to add new posts to the existing thread, or start a new thread?\",\n    \"Use existing thread\": \"Use existing thread\",\n    \"Start new thread\": \"Start new thread\",\n    \"\u2193 Catch up \u2193\": \"\u2193 Catch up \u2193\",\n    \"Reconnected. Some posts may be missing above.\": \"Reconnected. Some posts may be missing above. Reload the page to get the latest.\",\n    \"No older posts\": \"No older posts\",\n    \"Failed to download image\": \"Failed to download image\",\n    \"trend description\":\n        \"Below you'll see hashtags sorted by the number of posts they are contained in since you opened this page. Updates in real-time. The longer you leave this page open, the more representative the statistics get.\",\n    \"The better BlueSky app\": \"A pretty good BlueSky app\",\n    \"(Possibly, once it's done, work-in-progress :D)\": \"(Possibly, once it's done, work-in-progress :D)\",\n    \"Sign in\": \"Sign in\",\n    \"Sign up\": \"Sign up\",\n    \"Invalid account or password.\": \"Invalid account or password.\",\n    Quotes: \"Quotes\",\n    Reposts: \"Reposts\",\n    \"Mute Thread\": \"Mute Thread\",\n    \"Mute User\": \"Mute User\",\n    \"Unmute User\": \"Unmute User\",\n    \"Block User\": \"Block User\",\n    \"Unblock User\": \"Unblock User\",\n    \"Delete Post\": \"Delete Post\",\n    \"Post by muted user\": \"Post by muted user\",\n    \"Post by blocked user\": \"Post by blocked user\",\n    \"Click to view\": \"Click to view\",\n    Settings: \"Settings\",\n    Theme: \"Theme\",\n    Dark: \"Dark\",\n    Light: \"Light\",\n    System: \"System\",\n    \"Logged in as\": \"Logged in as\",\n    \"Could not load newer items\": \"Could not load newer items\",\n    \"You can not add an image if you already have a link card\": \"You can not add an image if you already have a link card\",\n    Mutuals: \"Mutuals\",\n    \"Couldn't load notifications\": \"Couldn't load notifications\",\n    \"Invalid stream\": \"Invalid stream\",\n    \"Sorry, an unknown error occured\": \"Sorry, an unknown error occured\",\n    \"Show replies\": \"Show replies\",\n    \"Open Thread\": \"Open Thread\",\n    \"GIF Search\": \"GIF Search\",\n    \"Search for GIFS...\": \"Search for GIFs ...\",\n    \"Couldn't load images\": \"Couldn't load images\",\n    Moderation: \"Moderation\",\n    Search: \"Search\",\n    \"Search for\": \"Search \",\n    Users: \"Users\",\n    Feeds: \"Feeds\",\n    \"Suggested follows\": \"Suggested follows\",\n    \"Suggested feeds\": \"Suggested feeds\",\n    \"Enter search terms above to find posts\": \"Enter search terms above to find posts\",\n    \"Created by\": \"Created by\",\n    likes: \"likes\",\n    Add: \"Add\",\n    Remove: \"Remove\",\n    \"Pinned Feeds\": \"Pinned feeds\",\n    \"Saved Feeds\": \"Saved feeds\",\n    \"Discover more feeds\": \"Discover more feeds\",\n    \"Couldn't load your feeds\": \"Couldn't load your feeds\",\n    Feed: \"Feed\",\n    \"Could not load feed\": \"Could not load feed\",\n    \"Could not load list feed\": \"Could not load list feed\",\n    \"You don't have pinned feeds\": \"You don't have pinned feeds\",\n    \"You don't have saved feeds\": \"You don't have saved feeds\",\n    Edit: \"Edit\",\n    Save: \"Save\",\n    \"Search my posts\": \"Search my posts\",\n    \"Open in Bluesky\": \"Open in BlueSky app\",\n    \"Push notifications\": \"Push notifications\",\n    Enabled: \"Enabled\",\n    \"New follower\": \"New followers\",\n    Replies: \"Replies\",\n    Mentions: \"Mentions\",\n    \"Copy link\": \"Copy link\",\n    \"Copied link to clipboard\": \"Copied link to clipboard\",\n    List: \"List\",\n    Lists: \"Lists\",\n    \"Moderation Lists\": \"Moderation Lists\",\n    \"Curation list\": \"Curation list\",\n    \"Moderation list\": \"Moderation list\",\n    \"Feeds by me\": \"Feeds by me\",\n    \"Couldn't mute user\": \"Couldn't mute user\",\n    \"Couldn't unmute user\": \"Couldn't unmute user\",\n    \"Couldn't block user\": \"Couldn't block user\",\n    \"Couldn't unblock user\": \"Couldn't unblock user\",\n    \"Post does not exist\": \"Post does not exist\",\n    \"Post author has blocked you\": \"Post author has blocked you\",\n    \"You have blocked the post author\": \"You have blocked the post author\",\n    \"User Interface\": \"User Interface\",\n    \"Muted users\": \"Muted users\",\n    \"Blocked users\": \"Blocked users\",\n    \"Allow pinch-zoom\": \"Allow pinch-zoom\",\n    \"is following you\": (handle: string) => handle + \" is following you\",\n    \"liked your post\": (handle: string) => handle + \" liked your post\",\n    \"quoted your post\": (handle: string) => handle + \" quoted your post\",\n    \"replied to your post\": (handle: string) => handle + \" replied to your post\",\n    \"reposted your post\": (handle: string) => handle + \" reposted your post\",\n    \"mentioned you\": (handle: string) => handle + \" mentioned you\",\n    \"You have a new notification\": \"You have a new notification\",\n    \"New notification\": \"New notification\",\n    \"Couldn't load your lists\": \"Couldn't load your lists\",\n    \"You have not created feeds yourself yet\": \"You have not created feeds yourself yet\",\n    \"Saved Lists\": \"Saved Lists\",\n    \"You don't have saved lists\": \"You don't have saved lists\",\n    \"Lists by me\": \"Lists by me\",\n    \"Create a new list\": \"Create a new list\",\n    \"New List\": \"New List\",\n    \"New Moderation List\": \"New Moderation List\",\n    \"Edit List\": \"Edit List\",\n    \"Edit Moderation List\": \"Edit Moderation List\",\n    Name: \"Name\",\n    Description: \"Description\",\n    \"Name is required\": \"Name is required\",\n    \"E.g. 'Cool people'\": \"E.g. 'Cool people'\",\n    \"Add people\": \"Add people\",\n    \"Members of\": (name: string) => \"Members of \" + name,\n    \"Explore without an Account\": \"Explore BlueSky without account\",\n    Explore: \"Explore\",\n    \"Explore BlueSky with\": \"Explore BlueSky with\",\n    \"Search people\": \"Search people\",\n    \"Search posts\": \"Search posts\",\n    \"Search feeds\": \"Search feeds\",\n    \"explore-header\": `Welcome to <a href=\"https://bsky.app\">BlueSky</a>`,\n    \"(Viewed through Skychat)\": \"(Viewed through Skychat)\",\n    \"explore-callout\": `Scroll down and <span class=\"text-blue-500 font-bold\">explore BlueSky without an account</span>, or ...`,\n    \"Hello, Anyone There?\": \"Hello, Anyone There?\",\n    \"explore-box-1-text-1\": `Not everyone has made the jump yet. But it's cosy and there're plenty of cool peeps around. We have a <span class=\"text-blue-500 font-bold\">freaking George Takei</span>`,\n    \"I need George Takei in my life\": \"I need George Takei in my life\",\n    \"(You can view all users' followers, followings, posts, media, likes, feeds, and lists)\":\n        \"(You can view all users' followers, followings, posts, media, likes, feeds, and lists)\",\n    \"My God, It's Full of Posts\": \"My God, It's Full of Posts\",\n    \"explore-box-2-text-1\":\n        \"It's a hive of conversation here, reminiscent of that other unnamed network. While we're still warming up to hashtags, searching for posts is a breeze.\",\n    \"explore-box-2-text-2\": `Check out the latest three posts on everyone's beloved <span class=\"text-blue-500 font-bold\">Godzilla</span>.`,\n    \"Do you want to see more?\": \"Do you want to see more?\",\n    \"Your Feeds, Your Choice\": \"Your Feeds, Your Choice\",\n    \"explore-box-3-text-1\": \"BlueSky respects your timeline \u2014 posts from people you follow, in chronological order, untouched by algorithms.\",\n    \"explore-box-3-text-2\": `Want a change of pace? Opt for <a href=\"https://blueskyweb.xyz/blog/7-27-2023-custom-feeds\" target=\"_blank\" class=\"font-bold\">algorithmically or manually curated feeds</a> for a dash of serendipity.`,\n    \"explore-box-3-text-3\":\n        \"Plus, you're free to create and share your own feeds, or simply curate lists of users whose posts you want to see separately from your main feed.\",\n    \"Time for some ...\": \"Time for some ...\",\n    \"(or how I learned to love the algorithm)\": \"(or how I learned to love the algorithm)\",\n    Entertainment: \"Entertainment\",\n    News: \"News\",\n    Science: \"Science\",\n    \"E.g. names, keywords, ...\": \"E.g. names, keywords, ...\",\n    \"(Click on a post to view the entire thread)\": \"(Click on a post to view the entire thread)\",\n    people: \"people\",\n    \"Couldn't add user to list\": \"Couldn't add user to list\",\n    \"Couldn't save list\": \"Couldn't save list\",\n    \"Saving list\": \"Saving list\",\n    Joined: \"Joined\",\n    \"Content filtering\": \"Content filtering\",\n    \"Muted words\": \"Muted words\",\n    \"Muted Words\": \"Muted Words\",\n    \"Muted threads\": \"Muted threads\",\n    \"Muted Threads\": \"Muted Threads\",\n    \"Moderation lists\": \"Moderation lists\",\n    \"I'm an adult\": \"I'm an adult\",\n    \"Explicit sexual images\": \"Explicit sexual images\",\n    \"i.e. pornography\": \"i.e. pornography\",\n    \"Other Nudity\": \"Other Nudity\",\n    \"Including non-sexual and artistic\": \"Including non-sexual and artistic\",\n    \"Sexually suggestive\": \"Sexually suggestive\",\n    \"Does not include nudity\": \"Does not include nudity\",\n    \"Violent / Bloody\": \"Violent / Bloody\",\n    \"Gore, self-harm, torture\": \"Gore, self-harm, torture\",\n    \"Hate group iconography\": \"Hate group iconography\",\n    \"Images of terror groups, articles covering events, etc.\": \"Images of terror groups, articles covering events, etc.\",\n    Spam: \"Spam\",\n    \"Excessive unwanted interactions\": \"Excessive unwanted interactions\",\n    Impersonation: \"Impersonation\",\n    \"Accounts falsely claiming to be people or orgs\": \"Accounts falsely claiming to be people or orgs\",\n    Hide: \"Hide\",\n    Warn: \"Warn\",\n    Show: \"Show\",\n    \"Hashtag Feed\": \"Hashtag Feed\",\n    \"Hashtag Feeds\": \"Hashtag Feeds\",\n    \"Couldn't load your hashtag feeds\": \"Couldn't load your hashtag feeds\",\n    \"New Hashtag Feed\": \"New Hashtag Feed\",\n    \"in the last\": \"in the last\",\n    \"10 minutes\": \"10 minutes\",\n    Hour: \"Hour\",\n    Day: \"Day\",\n    Week: \"Week\",\n    \"Share result\": \"Share result\",\n    \"User muted by moderation list \": (listName: string) => `User muted by moderation list ${listName}`,\n    \"User blocked by moderation list \": (listName: string) => `User blocked by moderation list ${listName}`,\n};\n\nconst german: Messages = {\n    \"Not connected\": \"Nicht verbunden\",\n    \"Couldn't delete post\": \"Konnte Post nicht l\u00F6schen\",\n    Home: \"Home\",\n    \"Could not load list\": \"Konnte Liste nicht laden\",\n    \"End of list\": \"Keine weiteren Eintr\u00E4ge\",\n    \"Could not load more items\": \"Konnte weitere Eintr\u00E4ge nicht laden\",\n    Notifications: \"Notifikationen\",\n    \"No more notifications\": \"Keine weiteren Notifikationen\",\n    \"Write your quote. It will be added to your thread about ${this.hashtag!}.\": (hashtag: string) =>\n        `Schreibe dein Zitier-Post. Es wird am Ende deines Threads f\u00FCr das Hashtag ${hashtag} hinzugef\u00FCgt`,\n    \"Write your quote post.\": \"Schreibe dein Zitier-Post.\",\n    \"Write your reply. It will be added to the thread by ${this.replyTo.author.displayName ?? this.replyTo.author.handle}.\": (handle) =>\n        `Schreibe deine Antwort. Sie wird zum Thread von ${handle} hinzugef\u00FCgt.`,\n    \"Write your reply\": \"Schreibe deine Antwort\",\n    \"Add a post to your thread about ${this.hashtag!}. The hashtag will be added automatically.\": (hashtag: string) =>\n        `F\u00FCge ein Post zu deinem Thread \u00FCber ${hashtag} hinzu. Das Hashtag wird automatisch zum Text hinzugef\u00FCgt.`,\n    \"What's up?\": \"Was gibt's Neues?\",\n    \"Replying to\": \"Antwort auf\",\n    \"Add card\": \"Karte hinzuf\u00FCgen\",\n    Quoting: \"Zitiere\",\n    \"Sending post\": \"Sende Post\",\n    Cancel: \"Abbrechen\",\n    Post: \"Senden\",\n    \"You can only upload 4 images per post\": \"Maximal 4 Bilder k\u00F6nnen einem Post hinzugef\u00FCgt werden\",\n    \"Couldn't send post\": \"Konnte Post nicht senden\",\n    \"Edit Image\": \"Bild bearbeiten\",\n    \"Add alt text to your image\": \"F\u00FCge eine Bildbeschreibung hinzu\",\n    Thread: \"Thread\",\n    \"Deleted post\": \"Gel\u00F6schtes Post\",\n    \"Alt Text\": \"Bildbeschreibung\",\n    \"Thread not found. The post may have been deleted, or you were blocked by the user.\":\n        \"Thread nicht gefunden. Das Post wurde gel\u00F6scht oder du bist von der Benutzerin blockiert worden.\",\n    \"You have blocked the author or the author has blocked you.\": \"Du hast die Benutzerin blockiert oder die Benutzerin blockiert dich.\",\n    \"Couldn't load profile of \": (handle: string) => \"Konnte Profil von \" + handle + \" nicht laden\",\n    Profile: \"Profil\",\n    Followers: \"Followers\", // FIXME\n    Following: \"Following\", // FIXME\n    \"Follows you\": \"Folgt dir\",\n    followers: \"followers\", // FIXME\n    following: \"following\", // FIXME\n    posts: \"posts\",\n    \"You are blocked by the user.\": \"Die Benutzerin blockiert dich.\",\n    \"You are blocking the user.\": \"Du blockierst die Benutzerin.\",\n    \"You are muting the user.\": \"Du hast die Benutzerin stumm geschaltet.\",\n    Posts: \"Posts\",\n    \"Posts & Replies\": \"Posts & Antworten\",\n    Media: \"Medien\",\n    Likes: \"Likes\",\n    \"Nothing to show\": \"Nichts anzuzeigen\",\n    \"Add to List\": \"Zu Liste hinzuf\u00FCgen\",\n    Mute: \"Stumm schalten\",\n    Block: \"Blockieren\",\n    Report: \"Melden\",\n    Follow: \"Folgen\",\n    Unfollow: \"Entfolgen\",\n    Unblock: \"Entblocken\",\n    \"No post given\": \"Post fehlt\",\n    \"Couldn't load likes\": \"Konnte Likes nicht laden\",\n    \"Could not load reposts\": \"Konnte Reposts nicht laden\",\n    \"No account given\": \"Benutzerin fehlt\",\n    \"Could not load followers\": \"Konnte Follower nicht laden\",\n    \"Could not load followings\": \"Konnte Benutzerinnen, die dieser Benutzerin folgen, nicht laden\",\n    Connecting: \"Verbinde\",\n    \"Explore & create hashtag threads in real-time on BlueSky\": \"Hashtag Threads auf BlueSky folgen und erstellen\",\n    \"Hashtag, e.g. #imzentrum\": \"Hashtag, z.B. #imzentrum\",\n    \"You are logged in as\": \"Angemeldet als \",\n    \"Want to post and reply to other posts? Enter your username and an app password below. (optional)\": `Willst du selbst einen Hashtag Thread\n        schreiben und auf Posts anderer Benutzerinnen antworten k\u00F6nnen? Dann gib deinen BlueSky Benutzernamen und ein\n        <a href=\"https://bsky.app/settings/app-passwords\">App Passwort</a> an. (Optional)`,\n    \"Account, e.g. badlogic.bsky.social\": \"Account, z.B. badlogic.bsky.social\",\n    \"App password\": \"App Passwort\",\n    \"Go live!\": \"Los geht's!\",\n    \"Your credentials will only be stored on your device.\": \"Deine Benutzerdaten werden nur auf deinem Ger\u00E4t gespeichert.\",\n    \"Log out\": \"Abmelden\",\n    \"How does it work?\": \"Wie funktioniert es?\",\n    \"Trending hashtags\": \"Hashtag Trends\",\n    footer: `<a href=\"https://skychat.social\" target=\"_blank\">Skychat</a>\n        wird liebevoll von\n        <a href=\"https://skychat.social/#profile/badlogic.bsky.social\" target=\"_blank\">Mario Zechner</a> gebaut<br />\n        Es werden keine Daten von dir gespeichert, nicht einmal deine IP Adresse<br />\n        <a href=\"https://github.com/badlogic/skychat\" target=\"_blank\">Source Code</a>`,\n    \"Please specify a hashtag\": \"Bitte gib ein Hashtag ein\",\n    \"Please specify an app password for your account. You can get one in your BlueSky app's settings.\":\n        \"Bitte gib ein App Passwort f\u00FCr deinen BlueSky Account ein. Du kannst App Passw\u00F6rter in den Einstellungen der offiziellen BlueSky App erstellen.\",\n    \"Log out?\": \"Abmelden?\",\n    \"No hashtag given\": \"Hashtag fehlt\",\n    \"Couldn't log in with your BlueSky credentials\": \"Anmeldung mit deinen BlueSky Benutzerdaten fehlgeschlagen\",\n    \"You have an existing thread for \": (rootUrl: string, hashtag: string) =>\n        `Du hast f\u00FCr den Hashtag ${hashtag} bereits einen bestehenden <a href=\"${rootUrl}\">Thread</a>`,\n    \"Do you want to add new posts to the existing thread, or start a new thread?\":\n        \"Willst du neue Posts an den bestehenden Thread hinzuf\u00FCgen oder einen neuen Thread starten?\",\n    \"Use existing thread\": \"Bestehenden Thread verwenden\",\n    \"Start new thread\": \"Neuen Thread staren\",\n    \"\u2193 Catch up \u2193\": \"\u2193 Neue Nachrichten \u2193\",\n    \"Reconnected. Some posts may be missing above.\":\n        \"Neu verbunden. Neue Posts k\u00F6nnen oben fehlen. Seite neu laden um die aktuellsten Posts zu sehen.\",\n    \"No older posts\": \"Keine \u00E4lteren Posts\",\n    \"Failed to download image\": \"Konnte Bild nicht herunterladen\",\n    \"trend description\":\n        \"Unten siehst du Hashtags sortiert nach der Anzahl and Posts in denen sie vorkommen seit du diese Seite geladen hast. Wird in Echtzeit erhoben. Je l\u00E4nger du die Seite offen l\u00E4sst, desto representativer werden die Statistiken.\",\n    \"The better BlueSky app\": \"Die bessere BlueSky App\",\n    \"(Possibly, once it's done, work-in-progress :D)\": \"(M\u00F6glicherweise, wenn sie fertig ist, work-in-progress :D)\",\n    \"Sign up\": \"Account erstellen\",\n    \"Sign in\": \"Anmelden\",\n    \"Invalid account or password.\": \"Invalider Benutzername oder Passwort.\",\n    Quotes: \"Zitate\",\n    Reposts: \"Reposts\",\n    \"Mute Thread\": \"Thread \",\n    \"Mute User\": \"Benutzerin stummschalten\",\n    \"Unmute User\": \"Stummschaltung aufheben\",\n    \"Block User\": \"Benutzerin blockieren\",\n    \"Unblock User\": \"Blockierung aufheben\",\n    \"Delete Post\": \"Post l\u00F6schen\",\n    \"Post by muted user\": \"Post einer stummgeschaltenen Benutzerin\",\n    \"Post by blocked user\": \"Post einer geblockten Benutzerin\",\n    \"Click to view\": \"Zum Anzeigen klicken\",\n    Settings: \"Einstellungen\",\n    Theme: \"Design\",\n    Dark: \"Dunkel\",\n    Light: \"Hell\",\n    System: \"System\",\n    \"Logged in as\": \"Angemeldet als\",\n    \"Could not load newer items\": \"Could not load newer items\",\n    \"You can not add an image if you already have a link card\": \"Kann kein Bild hinzuf\u00FCgen wenn Link-Karte bereits angef\u00FCgt ist.\",\n    Mutuals: \"Mutuals\", // FIXME\n    \"Couldn't load notifications\": \"Konnte Notifikationen nicht laden\",\n    \"Invalid stream\": \"Unbekannter stream\",\n    \"Sorry, an unknown error occured\": \"Ein unbekannter Fehler ist aufgetreten\",\n    \"Show replies\": \"Zeige Antworten\",\n    \"Open Thread\": \"Zeige Thread\",\n    \"GIF Search\": \"GIF Suche\",\n    \"Search for GIFS...\": \"Nach GIFs suchen ...\",\n    \"Couldn't load images\": \"Konnte Bilder nicht laden\",\n    Moderation: \"Moderation\",\n    Search: \"Suche\",\n    \"Search for\": \"Suche\",\n    Users: \"Benutzerinnen\",\n    Feeds: \"Feeds\",\n    \"Suggested follows\": \"Spannende Benutzerinnen\",\n    \"Suggested feeds\": \"Spannende Feeds\",\n    \"Enter search terms above to find posts\": \"Gib Suchbegriffe ein\",\n    \"Created by\": \"Erstellt von\",\n    likes: \"likes\",\n    Add: \"Hinzuf\u00FCgen\",\n    Remove: \"Entfernen\",\n    \"Pinned Feeds\": \"Angehefteten Feeds\",\n    \"Saved Feeds\": \"Gespeicherte Feeds\",\n    \"Discover more feeds\": \"Entdecke mehr Feeds\",\n    \"Couldn't load your feeds\": \"Konnte deine Feeds nicht laden\",\n    Feed: \"Feed\",\n    \"Could not load feed\": \"Konnte Feed nicht laden\",\n    \"Could not load list feed\": \"Konnte Listen Feed nicht laden\",\n    \"You don't have pinned feeds\": \"Keine angehefteten Feeds vorhanden\",\n    \"You don't have saved feeds\": \"Keine gespeicherten Feeds vorhanden\",\n    Edit: \"Editieren\",\n    Save: \"Speichern\",\n    \"Search my posts\": \"Nur in meinen Posts suchen\",\n    \"Open in Bluesky\": \"In BlueSky App \u00F6ffnen\",\n    \"Push notifications\": \"Push Notifikationen\",\n    Enabled: \"Aktiviert\",\n    \"New follower\": \"Neuer Follower\",\n    Replies: \"Antworten\",\n    Mentions: \"Mentions\", // FIXME\n    \"Copy link\": \"Link kopieren\",\n    \"Copied link to clipboard\": \"Link in Zwischenablage kopiert\",\n    List: \"Liste\",\n    Lists: \"Listen\",\n    \"Moderation Lists\": \"Moderations Listen\",\n    \"Curation list\": \"Kuratierte Liste\",\n    \"Moderation list\": \"Moderations Liste\",\n    \"Feeds by me\": \"Feeds von mir\",\n    \"Couldn't mute user\": \"Konnte Benutzerin nicht stumm schalten\",\n    \"Couldn't unmute user\": \"Konnte Stummschaltung der Benutzerin nicht aufheben\",\n    \"Couldn't block user\": \"Konnte Benutzerin nicht blockieren\",\n    \"Couldn't unblock user\": \"Konnte Blockierung der Benutzerin nicht aufheben\",\n    \"Post does not exist\": \"Post existiert nicht\",\n    \"Post author has blocked you\": \"Autor des Posts blockiert dich\",\n    \"You have blocked the post author\": \"Du blockierst den Autor des Posts\",\n    \"User Interface\": \"Benutzeroberfl\u00E4che\",\n    \"Muted users\": \"Stummgeschaltene Benutzerinnen\",\n    \"Blocked users\": \"Blockierte Benutzerinnen\",\n    \"Allow pinch-zoom\": \"Pinch-Zoom erlauben\",\n    \"is following you\": (handle: string) => handle + \" folgt dir\",\n    \"liked your post\": (handle: string) => handle + \" hat dein Post geliked\",\n    \"quoted your post\": (handle: string) => handle + \" hat dich zitiert\",\n    \"replied to your post\": (handle: string) => handle + \" hat dir geantwortet\",\n    \"reposted your post\": (handle: string) => handle + \" hat dein Post reposted\",\n    \"mentioned you\": (handle: string) => handle + \" hat dich erw\u00E4hnt\",\n    \"You have a new notification\": \"Du hast eine neue Notifikation\",\n    \"New notification\": \"Neue Notifikation\",\n    \"Couldn't load your lists\": \"Konnte deine Listen nicht laden\",\n    \"You have not created feeds yourself yet\": \"Du hast selbst noch keine Feeds kreirt\",\n    \"Saved Lists\": \"Gespeicherte Listen\",\n    \"You don't have saved lists\": \"Keine gespeicherten Listen vorhanden\",\n    \"Lists by me\": \"Listen von mir\",\n    \"Create a new list\": \"Neue Liste erstellen\",\n    \"New List\": \"Neue Liste\",\n    \"New Moderation List\": \"Neue Moderations Liste\",\n    \"Edit List\": \"Liste editieren\",\n    \"Edit Moderation List\": \"Moderations Liste editieren\",\n    Name: \"Name\",\n    Description: \"Beschreibung\",\n    \"Name is required\": \"Name erforderlich\",\n    \"E.g. 'Cool people'\": \"Z.B. 'Coole Leute'\",\n    \"Add people\": \"Benutzerin hizuf\u00FCgen\",\n    \"Members of\": (name: string) => \"Mitglieder von \" + name,\n    \"Explore without an Account\": \"Entdecke BlueSky ohne Account\",\n    Explore: \"Entdecken\",\n    \"Explore BlueSky with\": \"Entdecke BlueSky mit\",\n    \"Search people\": \"Leute suchen\",\n    \"Search posts\": \"Posts suchen\",\n    \"Search feeds\": \"Feeds suchen\",\n    \"explore-header\": `Willkommen bei <a href=\"https://bsky.app\">BlueSky</a>`,\n    \"(Viewed through Skychat)\": \"(Betrachtet via Skychat)\",\n    \"explore-callout\": `Runterscrollen und <span class=\"text-blue-500 font-bold\">BlueSky ohne Account entdecken</span> oder ...`,\n    \"Hello, Anyone There?\": \"Hallo, ist da wer?\",\n    \"explore-box-1-text-1\": `Nicht jeder hat den Sprung schon gewagt. Aber es ist gem\u00FCtlich und es gibt viele nette Leute hier. Wir haben sogar einen <span class=\"text-blue-500 font-bold\">echten George Takei</span>`,\n    \"I need George Takei in my life\": \"Ich will George Takei\",\n    \"(You can view all users' followers, followings, posts, media, likes, feeds, and lists)\":\n        \"(Du kannst hier die Follower, Followings, Posts, Medien, Likes, Feeds und Listen aller Benutzerinnen durchst\u00F6bern)\",\n    \"My God, It's Full of Posts\": \"Mein Gott, es ist voller Beitr\u00E4ge\",\n    \"explore-box-2-text-1\":\n        \"Hier geht's \u00E4hnlich zu, wie im Netzwerk das nicht genannt werden soll. Nur (fast) ohne Nazis. W\u00E4hrend wir Hashtags noch \u00FCben m\u00FCssen, kann man Beitr\u00E4ge super einfach finden.\",\n    \"explore-box-2-text-2\": `Hier, die letzten 3 Beitr\u00E4ge \u00FCber <span class=\"text-blue-500 font-bold\">Godzilla</span>. Warum nicht?`,\n    \"Do you want to see more?\": \"Willst du mehr sehen?\",\n    \"Your Feeds, Your Choice\": \"Deine Feeds, Deine Wahl\",\n    \"explore-box-3-text-1\":\n        \"BlueSky respektiert deine Timeline - Beitr\u00E4ge von Personen, denen du folgst, in chronologischer Reihenfolge, unber\u00FChrt von Algorithmen.\",\n    \"explore-box-3-text-2\": `M\u00F6chtest du etwas Abwechslung? W\u00E4hle <a href=\"https://blueskyweb.xyz/blog/7-27-2023-custom-feeds\" target=\"_blank\" class=\"font-bold\">algorithmisch oder manuell kuratierte Feeds</a> und stolpere in neue Themen und Communities hinein.`,\n    \"explore-box-3-text-3\":\n        \"Zudem kannst du deine eigenen Feeds erstellen und teilen, oder einfach Listen von Nutzern zusammenstellen, deren Beitr\u00E4ge du getrennt von deinem Haupt-Feed sehen m\u00F6chtest.\",\n    \"Time for some ...\": \"Zeit f\u00FCr etwas ...\",\n    \"(or how I learned to love the algorithm)\": \"(oder wie ich den Algorithmus lieben lernte)\",\n    Entertainment: \"Unterhaltung\",\n    News: \"Nachrichten\",\n    Science: \"Wissenschaft\",\n    \"E.g. names, keywords, ...\": \"Z.B. Names, phrasen, ...\",\n    \"(Click on a post to view the entire thread)\": \"(Auf Post klicken, um ganzen Thread anzuzeigen)\",\n    people: \"Benutzerinnen\",\n    \"Couldn't add user to list\": \"Konnte Benutzerin nicht zur Liste hinzuf\u00FCgen\",\n    \"Couldn't save list\": \"Konnte Liste nicht speichern\",\n    \"Saving list\": \"Speichere Liste\",\n    Joined: \"Hier seit\",\n    \"Content filtering\": \"Content Filter\",\n    \"Muted words\": \"Stummgeschaltete W\u00F6rter\",\n    \"Muted Words\": \"Stummgeschaltete W\u00F6rter\",\n    \"Muted threads\": \"Stummgeschaltete Threads\",\n    \"Muted Threads\": \"Stummgeschaltete Threads\",\n    \"Moderation lists\": \"Stummgeschaltete Listen\",\n    \"I'm an adult\": \"I'm an adult\",\n    \"Explicit sexual images\": \"Explizite sexuelle Bilder\",\n    \"i.e. pornography\": \"z.B. Pornografie\",\n    \"Other Nudity\": \"Andere Nacktheit\",\n    \"Including non-sexual and artistic\": \"Einschlie\u00DFlich nicht-sexueller und k\u00FCnstlerischer\",\n    \"Sexually suggestive\": \"Sexuell anst\u00F6\u00DFig\",\n    \"Does not include nudity\": \"Beinhaltet keine Nacktheit\",\n    \"Violent / Bloody\": \"Gewaltt\u00E4tig / Blutig\",\n    \"Gore, self-harm, torture\": \"Blutvergie\u00DFen, Selbstverletzung, Folter\",\n    \"Hate group iconography\": \"Symbolik von Hassgruppen\",\n    \"Images of terror groups, articles covering events, etc.\": \"Bilder von Terrorgruppen, Berichte \u00FCber Ereignisse usw.\",\n    Spam: \"Spam\",\n    \"Excessive unwanted interactions\": \"\u00DCberm\u00E4\u00DFige unerw\u00FCnschte Interaktionen\",\n    Impersonation: \"Identit\u00E4tsdiebstahl\",\n    \"Accounts falsely claiming to be people or orgs\": \"Konten, die f\u00E4lschlicherweise behaupten, Personen oder Organisationen zu sein\",\n    Hide: \"Verstecken\",\n    Warn: \"Warnen\",\n    Show: \"Zeigen\",\n    \"Hashtag Feed\": \"Hashtag Feed\",\n    \"Hashtag Feeds\": \"Hashtag Feeds\",\n    \"Couldn't load your hashtag feeds\": \"Konnte deine Hashtag Feeds nicht laden\",\n    \"New Hashtag Feed\": \"Neuer Hashtag Feed\",\n    \"in the last\": \"in den letzten\",\n    \"10 minutes\": \"10 Minuten\",\n    Hour: \"Stunde\",\n    Day: \"Tag\",\n    Week: \"Woche\",\n    \"Share result\": \"Result teilen\",\n    \"User muted by moderation list \": (listName: string) => `Benutzerin durch Moderations Liste ${listName} stummgeschaltet`,\n    \"User blocked by moderation list \": (listName: string) => `Benutzerin durch Moderations Liste ${listName} blockiert`,\n};\n\nexport type LanguageCode = \"en\" | \"de\";\n\nconst translations: Record<LanguageCode, Messages> = {\n    en: english,\n    de: german,\n};\n\nexport function i18n<T extends keyof Messages>(key: T): Messages[T] {\n    const userLocale = navigator.language || (navigator as any).userLanguage;\n    const languageCode = userLocale ? (userLocale.split(\"-\")[0] as LanguageCode) : \"en\";\n    const implementation = translations[languageCode];\n    const message = implementation ? implementation[key] : translations[\"en\"][key];\n    if (!message) {\n        console.error(\"Unknown i18n string \" + key);\n        return key as any as Messages[T];\n    }\n    return message;\n}\n", "declare var self: ServiceWorkerGlobalScope;\nexport {};\n\nself.addEventListener(\"install\", (event) => {\n    self.skipWaiting();\n});\n\nself.addEventListener(\"activate\", (event) => {\n    console.log(`Activating service worker`);\n    const activate = () => {\n        return self.clients.claim();\n    };\n    event.waitUntil(activate());\n});\n\nself.addEventListener(\"notificationclick\", (event: any) => {\n    event.notification.close();\n    const click = async () => {\n        const clientList = await self.clients.matchAll({ type: \"window\", includeUncontrolled: true });\n        for (const client of clientList) {\n            console.log(`- Sending message to window`);\n            if (\"focus\" in client) client.focus();\n            client.postMessage(\"notifications\");\n        }\n        if (clientList.length == 0) {\n            self.clients.openWindow(\"/#notifications\");\n        }\n    };\n    event.waitUntil(click());\n});\n\nself.addEventListener(\"message\", (event: any) => {\n    console.log(\"Got worker message: \" + JSON.stringify(event.data));\n});\n\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, onBackgroundMessage } from \"firebase/messaging/sw\";\nimport { processPushNotification } from \"./push-notifications\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZ2nH3qKCFqFhQSdeNH91SNAfTHl-nP7s\",\n    authDomain: \"skychat-733ab.firebaseapp.com\",\n    projectId: \"skychat-733ab\",\n    storageBucket: \"skychat-733ab.appspot.com\",\n    messagingSenderId: \"693556593993\",\n    appId: \"1:693556593993:web:8137dd0568c75b50d1c698\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging(app);\n\nonBackgroundMessage(messaging, async (payload) => {\n    console.log(\"Background message received. \", payload);\n    processPushNotification(payload, (title, options) => self.registration.showNotification(title, options));\n});\n"],
  "mappings": "05CAAAA,GAAAC,GAAA,CAAA,oFAAAC,EAAA,CAAA,aAKA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5DA,EAAQ,sBAAwBA,EAAQ,cAAgB,OACxD,IAAIC,GACH,SAAUC,EAAe,CACtBA,EAAcA,EAAc,GAAQ,CAAA,EAAK,KACzCA,EAAcA,EAAc,GAAQ,CAAA,EAAK,KACzCA,EAAcA,EAAc,QAAa,CAAA,EAAK,UAC9CA,EAAcA,EAAc,OAAY,CAAA,EAAK,SAC7CA,EAAcA,EAAc,mBAAwB,CAAA,EAAK,qBACzDA,EAAcA,EAAc,YAAiB,CAAA,EAAK,cAClDA,EAAcA,EAAc,EAAO,CAAA,EAAK,IACxCA,EAAcA,EAAc,EAAO,CAAA,EAAK,IACxCA,EAAcA,EAAc,EAAO,CAAA,EAAK,IACxCA,EAAcA,EAAc,GAAQ,CAAA,EAAK,KACzCA,EAAcA,EAAc,IAAS,EAAA,EAAM,MAC3CA,EAAcA,EAAc,MAAW,EAAA,EAAM,QAC7CA,EAAcA,EAAc,QAAa,EAAA,EAAM,UAC/CA,EAAcA,EAAc,OAAY,EAAA,EAAM,SAC9CA,EAAcA,EAAc,WAAgB,EAAA,EAAM,aAClDA,EAAcA,EAAc,IAAS,EAAA,EAAM,MAC3CA,EAAcA,EAAc,eAAoB,EAAA,EAAM,iBACtDA,EAAcA,EAAc,WAAgB,EAAA,EAAM,YACtD,GAAGD,EAAgBD,EAAQ,gBAAkBA,EAAQ,cAAgB,CAAC,EAAE,EAUxEA,EAAQ,sBAAwB,GAAA,CAAA,CAAA,ECrChCG,GAAAJ,GAAA,CAAA,yFAAAC,EAAA,CAAA,aACA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAMI,EAAeN,GAAA,EAGfO,EAAW,EACXC,EAAa,EACbC,EAAQ,EACRC,EAAoB,EACpBC,EAA2B,EAC3BC,EAAN,KAAsB,CAOlB,OAAO,YAAYC,EAAKC,EAAK,CACzB,MAAQ,QAAUD,EAAI,WAAWC,CAAG,GAChCD,EAAI,WAAWC,CAAG,GAAK,OACvB,OAAUD,EAAI,WAAWC,EAAM,CAAC,GAChCD,EAAI,WAAWC,EAAM,CAAC,GAAK,KACnC,CASA,OAAO,YAAYD,EAAKE,EAAK,CACrBA,IAAQ,SACRA,EAAM,GAEV,IAAMC,EAAOH,EAAI,WAAWE,CAAG,EAE/B,GAAI,OAAUC,GAAQA,GAAQ,OAAUD,EAAMF,EAAI,OAAS,EAAG,CAC1D,IAAMI,EAAKD,EACLE,EAAML,EAAI,WAAWE,EAAM,CAAC,EAClC,MAAI,QAAUG,GAAOA,GAAO,OAChBD,EAAK,OAAU,MAASC,EAAM,OAAU,MAE7CD,EAGX,GAAI,OAAUD,GAAQA,GAAQ,OAAUD,GAAO,EAAG,CAC9C,IAAME,EAAKJ,EAAI,WAAWE,EAAM,CAAC,EAC3BG,EAAMF,EACZ,MAAI,QAAUC,GAAMA,GAAM,OACdA,EAAK,OAAU,MAASC,EAAM,OAAU,MAE7CA,EAIX,OAAOF,CACX,CAaA,OAAO,YAAYG,EAAOC,EAAKC,EAAKC,EAAYC,EAAUC,EAAU,CAChE,IAAMC,EAAM,CAACN,CAAK,EAAE,OAAOC,CAAG,EAAE,OAAO,CAACC,CAAG,CAAC,EACtCK,EAAW,CAACJ,CAAU,EAAE,OAAOC,CAAQ,EAAE,OAAO,CAACC,CAAQ,CAAC,EAC1DG,EAAWF,EAAIA,EAAI,OAAS,CAAA,EAC5BG,EAAOP,EACPQ,EAAYL,EAIZM,EAAUL,EAAI,YAAYnB,EAAa,cAAc,kBAAkB,EAC7E,GAAIwB,EAAU,GACVL,EAAI,MAAM,EAAGK,CAAO,EAAE,MAAM,SAAUC,EAAG,CACrC,OAAOA,IAAMzB,EAAa,cAAc,kBAC5C,CAAC,GACD,CAACA,EAAa,cAAc,QAASA,EAAa,cAAc,kBAAkB,EAAE,QAAQqB,CAAQ,IAAM,GAC1G,OAAIF,EAAI,OAAO,SAAUM,EAAG,CACxB,OAAOA,IAAMzB,EAAa,cAAc,kBAC5C,CAAC,EAAE,OACC,IACA,EACOI,EAGAC,EAIf,GAAIgB,IAAarB,EAAa,cAAc,IAAMsB,IAAStB,EAAa,cAAc,GAClF,OAAOC,EACX,GAESoB,IAAarB,EAAa,cAAc,SAC7CqB,IAAarB,EAAa,cAAc,IACxCqB,IAAarB,EAAa,cAAc,GACxC,OAAOE,EACX,GAESoB,IAAStB,EAAa,cAAc,SACzCsB,IAAStB,EAAa,cAAc,IACpCsB,IAAStB,EAAa,cAAc,GACpC,OAAOE,EACX,GAESmB,IAAarB,EAAa,cAAc,IAC5CsB,IAAStB,EAAa,cAAc,GACjCsB,IAAStB,EAAa,cAAc,GACpCsB,IAAStB,EAAa,cAAc,IACpCsB,IAAStB,EAAa,cAAc,KACxC,OAAOC,EACX,IAEUoB,IAAarB,EAAa,cAAc,IAAMqB,IAAarB,EAAa,cAAc,KAC3FsB,IAAStB,EAAa,cAAc,GAAKsB,IAAStB,EAAa,cAAc,GAC9E,OAAOC,EACX,IAEUoB,IAAarB,EAAa,cAAc,KAAOqB,IAAarB,EAAa,cAAc,IAC7FsB,IAAStB,EAAa,cAAc,EACpC,OAAOC,EACX,GAESqB,IAAStB,EAAa,cAAc,QAAUsB,IAAStB,EAAa,cAAc,IACvF,OAAOC,EACX,GAESqB,IAAStB,EAAa,cAAc,YACzC,OAAOC,EACX,GAESoB,IAAarB,EAAa,cAAc,QAC7C,OAAOC,EAGX,IAAMyB,EAAyBN,EAC1B,MAAM,EAAG,EAAE,EACX,YAAYpB,EAAa,qBAAqB,EACnD,OAAI0B,IAA2B,IAC3BN,EAASM,CAAA,IAA4B1B,EAAa,uBAClDmB,EAAI,MAAMO,EAAyB,EAAG,EAAE,EAAE,MAAM,SAAUD,EAAG,CACzD,OAAOA,IAAMzB,EAAa,cAAc,MAC5C,CAAC,GACDqB,IAAarB,EAAa,cAAc,KACxCuB,IAAcvB,EAAa,sBACpBC,EAIPa,EAAI,QAAQd,EAAa,cAAc,kBAAkB,IAAM,GACxDG,EAEPkB,IAAarB,EAAa,cAAc,oBACxCsB,IAAStB,EAAa,cAAc,mBAC7BC,EAGJC,CACX,CACJ,EACAN,EAAQ,QAAUU,CAAA,CAAA,CAAA,ECxKlBqB,GAAAhC,GAAA,CAAA,2FAAAC,EAAA,CAAA,aACA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAU5D,IAAMgC,EAAN,KAAwB,CACpB,YAAYrB,EAAKsB,EAAW,CACxB,KAAK,OAAS,EACd,KAAK,KAAOtB,EACZ,KAAK,WAAasB,CACtB,CACA,CAAC,OAAO,QAAA,GAAY,CAChB,OAAO,IACX,CACA,MAAO,CACH,IAAIC,EACJ,IAAKA,EAAM,KAAK,WAAW,KAAK,KAAM,KAAK,MAAM,GAAK,KAAK,KAAK,OAAQ,CACpE,IAAMC,EAAQ,KAAK,KAAK,MAAM,KAAK,OAAQD,CAAG,EAC9C,YAAK,OAASA,EACP,CAAE,MAAAC,EAAc,KAAM,EAAM,EAEvC,GAAI,KAAK,OAAS,KAAK,KAAK,OAAQ,CAChC,IAAMA,EAAQ,KAAK,KAAK,MAAM,KAAK,MAAM,EACzC,YAAK,OAAS,KAAK,KAAK,OACjB,CAAE,MAAAA,EAAc,KAAM,EAAM,EAEvC,MAAO,CAAE,MAAO,OAAW,KAAM,EAAK,CAC1C,CACJ,EACAnC,EAAQ,QAAUgC,CAAA,CAAA,CAAA,ECnClBI,GAAArC,GAAA,CAAA,mFAAAC,EAAA,CAAA,aACA,IAAIqC,EAAmBrC,GAAQA,EAAK,iBAAoB,SAAUsC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,CAAI,CAC5D,EACA,OAAO,eAAetC,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAMI,EAAeN,GAAA,EACfyC,EAAoBF,EAAgBlC,GAAA,CAA4B,EAChEqC,EAAsBH,EAAgBN,GAAA,CAA8B,EACpEU,EAAN,KAAgB,CAOZ,OAAO,UAAUC,EAAQC,EAAO,CAI5B,GAHIA,IAAU,SACVA,EAAQ,GAERA,EAAQ,EACR,MAAO,GAEX,GAAIA,GAASD,EAAO,OAAS,EACzB,OAAOA,EAAO,OAElB,IAAME,EAASL,EAAkB,QAAQ,YAAYG,EAAQC,CAAK,EAC5DE,EAAOJ,EAAU,yBAAyBG,CAAM,EAChDE,EAAYL,EAAU,iBAAiBG,CAAM,EAC7C1B,EAAM,CAAC,EACPG,EAAW,CAAC,EAClB,QAAS0B,EAAIJ,EAAQ,EAAGI,EAAIL,EAAO,OAAQK,IAAK,CAE5C,GAAIR,EAAkB,QAAQ,YAAYG,EAAQK,EAAI,CAAC,EACnD,SAEJ,IAAMC,EAAST,EAAkB,QAAQ,YAAYG,EAAQK,CAAC,EACxDrB,EAAOe,EAAU,yBAAyBO,CAAM,EAChDrB,EAAYc,EAAU,iBAAiBO,CAAM,EACnD,GAAIT,EAAkB,QAAQ,YAAYM,EAAM3B,EAAKQ,EAAMoB,EAAWzB,EAAUM,CAAS,EACrF,OAAOoB,EAEX7B,EAAI,KAAKQ,CAAI,EACbL,EAAS,KAAKM,CAAS,EAE3B,OAAOe,EAAO,MAClB,CAMA,eAAe/B,EAAK,CAChB,IAAMsC,EAAM,CAAC,EACTN,EAAQ,EACRT,EACJ,MAAQA,EAAMO,EAAU,UAAU9B,EAAKgC,CAAK,GAAKhC,EAAI,QACjDsC,EAAI,KAAKtC,EAAI,MAAMgC,EAAOT,CAAG,CAAC,EAC9BS,EAAQT,EAEZ,OAAIS,EAAQhC,EAAI,QACZsC,EAAI,KAAKtC,EAAI,MAAMgC,CAAK,CAAC,EAEtBM,CACX,CAMA,iBAAiBtC,EAAK,CAClB,OAAO,IAAI6B,EAAoB,QAAQ7B,EAAK8B,EAAU,SAAS,CACnE,CAMA,eAAe9B,EAAK,CAChB,IAAIuC,EAAQ,EACRP,EAAQ,EACRT,EACJ,MAAQA,EAAMO,EAAU,UAAU9B,EAAKgC,CAAK,GAAKhC,EAAI,QACjDgC,EAAQT,EACRgB,IAEJ,OAAIP,EAAQhC,EAAI,QACZuC,IAEGA,CACX,CAMA,OAAO,yBAAyBpC,EAAM,CAKlC,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,KACP,GAAIA,EAAO,IACP,GAAIA,EAAO,IAEP,GAAI,GAAOA,GAAQA,GAAQ,EACvB,OAAOV,EAAa,cAAc,gBAK1BU,IAAR,GACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,IAEP,GAAI,IAAOA,GAAQA,GAAQ,GACvB,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,IAEP,GAAYA,IAAR,GACA,OAAOV,EAAa,cAAc,WAKlC,IAAOU,GAAQA,GAAQ,GACvB,OAAOV,EAAa,cAAc,gBAO9CU,EAAO,KACP,GAAIA,EAAO,KAEP,GAAI,KAAQA,GAAQA,GAAQ,IACxB,OAAOV,EAAa,cAAc,gBAKzBU,IAAT,IACA,OAAOV,EAAa,cAAc,gBAKtCU,EAAO,MAEP,GAAI,KAASA,GAAQA,GAAQ,IACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAGP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,gBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,gBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,gBAStDU,EAAO,MACP,GAAIA,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,QAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,gBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,gBAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,YAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,KAAO,CAEd,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,YAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,KAAO,CAEd,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,YAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAW9DU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAGP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAGP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MAMP,GAJcA,IAAV,MAIUA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAMP,GAJcA,IAAV,MAIUA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,KAAO,CAEd,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,YAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAU1DU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,KAAO,CAEd,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,QAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,KACP,GAAIA,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,OAGtC,GAAcU,IAAV,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MAMP,GAJcA,IAAV,MAIUA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,oBAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAcA,IAAV,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKlC,MAASU,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAASA,GAAQA,GAAQ,KACzB,OAAOV,EAAa,cAAc,eAKxBU,IAAV,KACA,OAAOV,EAAa,cAAc,eAYlEU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,KAAQ,CAEf,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,OAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,MAIWA,IAAX,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,UAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,UAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,UAM1CU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAQlDU,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,QAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAU1DU,EAAO,MACP,GAAIA,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,gBAGrC,CAED,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,OAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,eAOlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,oBAOlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAStDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,KAAQ,CAEf,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,YAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAQlDU,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,OAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,MAIWA,IAAX,KACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,oBAKlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,QAGtC,GAAeU,IAAX,KACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,YAIlCU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,gBAOlC,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,gBAM1CU,EAAO,MAIP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAMP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAGP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAMlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAKvBU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,UAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKvBU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,OAGtC,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,oBAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,gBAGrC,CAED,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAeU,IAAX,MACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAatEU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAYlEU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,MAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAc1EU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAYlEU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAatEU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,MAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,KACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAM1CU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAKtCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAKvBU,IAAX,MACA,OAAOV,EAAa,cAAc,WAM1CU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAIlCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,WAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,YAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,UAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,UAKtCU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAKlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,eAMlC,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,cAAc,gBAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAU1DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,OAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,gBAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAStDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAYlEU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKtBU,IAAZ,OAIYA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAStDU,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,gBAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,OAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAU1DU,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,OAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,MACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,QAGtC,GAAgBU,IAAZ,KACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,gBAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,OAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,gBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,gBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAW9DU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,MAAS,CAEhB,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAQlDU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAStDU,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAQlDU,EAAO,MACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,YAGtC,GAAgBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,MACA,OAAOV,EAAa,cAAc,eAU1DU,EAAO,QACP,GAAIA,EAAO,OACP,GAAIA,EAAO,QACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,OAAWU,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,OAEP,GAAgBA,IAAZ,MACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,OAAWA,GAAQA,GAAQ,MAC3B,OAAOV,EAAa,cAAc,oBAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,gBAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,WAGrC,CAED,GAAgBU,IAAZ,OACA,OAAOV,EAAa,cAAc,OAGtC,GAAgBU,IAAZ,OACA,OAAOV,EAAa,cAAc,oBAO9CU,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,OACA,OAAOV,EAAa,cAAc,oBAKtCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,gBAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,OACA,OAAOV,EAAa,cAAc,eAStDU,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QAEP,GAAgBA,IAAZ,OACA,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAO9CU,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,QAEP,GAAgBA,IAAZ,OACA,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtBU,IAAZ,OACA,OAAOV,EAAa,cAAc,eAQlDU,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKtCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,2BAO9CU,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAIlCU,EAAO,QAIP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,gBAKlC,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAM1CU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,gBAIlCU,EAAO,OAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,eAKlC,OAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,cAAc,QAclF,OAAOA,EAAa,cAAc,KACtC,CAMA,OAAO,iBAAiBU,EAAM,CAK1B,GAAIA,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,KACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAMP,GAJaA,IAAT,KAISA,IAAT,IACA,OAAOV,EAAa,8BAKTU,IAAX,MAIWA,IAAX,KACA,OAAOV,EAAa,8BAKxBU,EAAO,MAMP,GAJeA,IAAX,MAIWA,IAAX,KACA,OAAOV,EAAa,8BAIpBU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAIpBU,EAAO,MAEP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAKpB,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAQpCU,EAAO,MACP,GAAIA,EAAO,MAMP,GAJeA,IAAX,KAIWA,IAAX,KACA,OAAOV,EAAa,8BAIpBU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,8BAIpBU,EAAO,MAOP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAKpB,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAOhCU,EAAO,MACP,GAAIA,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,8BAKpB,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAKxBU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,8BAIpBU,EAAO,MAEP,GAAeA,IAAX,KACA,OAAOV,EAAa,8BAKpB,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BASxCU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,MACP,GAAIA,EAAO,MAKP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BASpB,MAAUU,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAKxBU,EAAO,MAyCP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAIpBU,EAAO,MAkDP,GAAI,MAAUA,GAAQA,GAAQ,KAC1B,OAAOV,EAAa,8BAUpB,MAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAOhCU,EAAO,OAMP,GAJeA,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAIpBU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,8BAKTU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAOhCU,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAKTU,IAAX,MACA,OAAOV,EAAa,8BAKxBU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,8BAKTU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAM5BU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAKTU,IAAX,MACA,OAAOV,EAAa,8BAKxBU,EAAO,OAIP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAIpBU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAKTU,IAAX,MACA,OAAOV,EAAa,8BAU5CU,EAAO,QACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OACP,GAAIA,EAAO,OAMP,GAJeA,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAIpBU,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAKpB,OAAUU,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAM5BU,EAAO,OACP,GAAIA,EAAO,OAEP,GAAI,OAAUA,GAAQA,GAAQ,MAC1B,OAAOV,EAAa,8BAKTU,IAAX,MACA,OAAOV,EAAa,8BAKxBU,EAAO,OAEP,GAAeA,IAAX,MACA,OAAOV,EAAa,8BAKTU,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAOhCU,EAAO,QACP,GAAIA,EAAO,QAMP,GAJeA,IAAX,OAIWA,IAAX,MACA,OAAOV,EAAa,8BAIpBU,EAAO,QAMP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAIpBU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKRU,IAAZ,OACA,OAAOV,EAAa,8BAOhCU,EAAO,QACP,GAAIA,EAAO,QAGP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKxBU,EAAO,QAEP,GAAgBA,IAAZ,OACA,OAAOV,EAAa,8BAIpBU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BASxCU,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QAGP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKRU,IAAZ,OACA,OAAOV,EAAa,8BAKxBU,EAAO,QAEP,GAAgBA,IAAZ,OACA,OAAOV,EAAa,8BAIpBU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAOhCU,EAAO,QACP,GAAIA,EAAO,OA6DP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAiDpB,OAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKxBU,EAAO,QA+EP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAIpBU,EAAO,QA+DP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAQpCU,EAAO,QACP,GAAIA,EAAO,QACP,GAAIA,EAAO,QAMP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKxBU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAIpBU,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAOhCU,EAAO,QACP,GAAIA,EAAO,QAEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAcpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKxBU,EAAO,QAIP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAIpBU,EAAO,QAmEP,GAAI,QAAWA,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,8BAKpB,QAAWU,GAAQA,GAAQ,OAC3B,OAAOV,EAAa,sBAUpD,OAAOA,EAAa,cAAc,KACtC,CACJ,EACAJ,EAAQ,QAAUyC,CAAA,CAAA,CAAA,ECtrXlBU,GAAApD,GAAA,CAAA,+EAAAC,EAAA,CAAA,aACA,IAAIqC,EAAmBrC,GAAQA,EAAK,iBAAoB,SAAUsC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,CAAI,CAC5D,EACA,OAAO,eAAetC,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAMoD,EAAcf,EAAgBD,GAAA,CAAsB,EAC1DpC,EAAQ,QAAUoD,EAAY,OAAA,CAAA,CAAA,ECN9BC,GAAAtD,GAAA,CAAA,8GAAAC,EAAA,EAAC,IAAI,CAAC,aAAa,IAAIsD,EAAE,CAAC,EAAE,CAACC,EAAEC,IAAI,CAAC,QAAQC,KAAKD,EAAEF,EAAE,EAAEE,EAAEC,CAAC,GAAG,CAACH,EAAE,EAAEC,EAAEE,CAAC,GAAG,OAAO,eAAeF,EAAEE,EAAE,CAAC,WAAW,GAAG,IAAID,EAAEC,CAAA,CAAE,CAAC,CAAC,EAAE,EAAE,CAACC,EAAEH,IAAI,OAAO,UAAU,eAAe,KAAKG,EAAEH,CAAC,EAAE,EAAEG,GAAG,CAAc,OAAO,OAApB,KAA4B,OAAO,aAAa,OAAO,eAAeA,EAAE,OAAO,YAAY,CAAC,MAAM,QAAQ,CAAC,EAAE,OAAO,eAAeA,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAEC,EAAE,CAAC,EAAE,SAAAC,EAAWF,EAAEH,EAAE,CAAC,OAAgBA,IAAT,SAAaA,EAAE,KAAK,IAAI,OAAO,WAAWA,EAAE,OAAOA,EAAE,oBAAoBA,EAAE,0BAA0BA,EAAE,0BAA0BA,EAAE,oHAAoHA,EAAE,KAAKA,EAAE,iBAAiBA,EAAE,mBAAmBA,EAAE,+BAA+BA,EAAE,OAAOA,EAAE,6BAA6B,EAAE,KAAKG,CAAC,CAAC,CAAC,SAAAG,EAAWH,EAAE,CAAC,IAAIH,EAAE,KAAK,KAAKG,CAAC,EAAE,OAAOH,EAAEA,EAAE,CAAA,EAAG,EAAE,CAAC,SAAAR,EAAWW,EAAEH,EAAEC,EAAE,CAAUD,IAAT,SAAaA,EAAE,KAAcC,IAAT,SAAaA,EAAE,IAAI,IAAIM,EAAE,IAAI,OAAO,wBAAwBP,EAAE,YAAYA,EAAE,cAAcA,EAAE,sCAAsC,EAAE,GAAG,CAACC,GAAG,CAAC,SAAS,KAAKE,CAAC,EAAE,OAAOI,EAAE,KAAKJ,CAAC,EAAE,GAAG,KAAK,KAAKA,CAAC,EAAE,OAAOI,EAAE,KAAKJ,EAAE,QAAQ,IAAI,EAAE,CAAC,EAAE,IAAIK,EAAEL,EAAE,SAAS,GAAG,EAAEM,EAAEN,EAAE,MAAM,MAAM,EAAEO,EAAED,EAAE,CAAA,EAAGE,EAAEF,EAAE,CAAA,EAAG,OAAOF,EAAE,KAAKG,CAAC,GAAG,SAASE,EAAEC,EAAEC,EAAE,CAAC,OAAgBA,IAAT,SAAaA,EAAE,KAAK,IAAI,OAAOD,EAAE,WAAWC,EAAE,OAAOA,EAAE,qBAAqBA,EAAE,gBAAgBA,EAAE,mBAAmBA,EAAE,gBAAgBA,EAAE,UAAUA,EAAE,aAAaA,EAAE,cAAcA,EAAE,SAASA,EAAE,0BAA0B,kCAAkCA,EAAE,oBAAoBA,EAAE,OAAOA,EAAE,QAAQ,EAAE,KAAKF,CAAC,CAAC,EAAED,EAAEH,EAAEF,EAAEK,CAAC,CAAC,CAAC,CAAC,SAAAI,EAAWZ,EAAE,CAAC,IAAIH,EAAEG,EAAE,MAAM,GAAG,EAAEK,EAAER,EAAE,CAAA,EAAGS,EAAET,EAAE,CAAA,EAAGU,EAAEL,EAAEG,EAAEF,EAAEE,CAAC,CAAC,EAAE,GAAG,CAACC,EAAE,MAAM,GAAG,IAAIE,EAAEK,GAAGL,EAAEF,EAAE,MAAM,sBAAsB,EAAE,MAAM,QAAQE,CAAC,EAAEA,EAAE,CAAA,EAAG,IAAI,OAAOD,GAAGlB,EAAEiB,EAAEO,EAAE,EAAE,CAAC,CAAC,SAAAC,EAAWd,EAAEH,EAAE,CAAC,OAAgBA,IAAT,SAAaA,EAAE,KAAK,IAAI,OAAO,YAAYA,EAAE,8BAA8B,EAAE,KAAKG,CAAC,CAAC,CAACJ,EAAE,EAAEK,CAAC,EAAEL,EAAE,EAAEK,EAAE,CAAC,YAAY,IAAIC,EAAE,qBAAqB,IAAIU,EAAE,YAAY,IAAIvB,EAAE,iBAAiB,IAAIyB,CAAC,CAAC,EAAE,IAAI,EAAExE,EAAQ,QAAQyE,KAAKd,EAAE,EAAEc,CAAA,EAAGd,EAAEc,CAAA,EAAGd,EAAE,YAAY,OAAO,eAAe,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAA,CAAA,CAAA,ECAr5De,GAAA,CAAA,EAAAC,EAAAD,GAAA,CAAA,eAAA,IAAAE,GAAA,QAAA,IAAAC,GAAA,QAAA,IAAAC,GAAA,iBAAA,IAAAC,EAAA,2BAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,mBAAA,IAAAC,GAAA,mBAAA,IAAAC,GAAA,4BAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,iCAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,mBAAA,IAAAC,GAAA,4BAAA,IAAAC,GAAA,6BAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,6BAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,kBAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,kBAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,mBAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,uCAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,4BAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,gCAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,yCAAA,IAAAC,GAAA,oCAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,oCAAA,IAAAC,GAAA,MAAA,IAAAC,GAAA,MAAA,IAAAC,GAAA,SAAA,IAAAC,GAAA,cAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,QAAA,IAAAC,GAAA,YAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,OAAA,IAAAC,GAAA,kBAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,mCAAA,IAAAC,GAAA,oCAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,uBAAA,IAAAC,GAAA,gCAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,uCAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,mCAAA,IAAAC,GAAA,mCAAA,IAAAC,GAAA,gCAAA,IAAAC,GAAA,+BAAA,IAAAC,GAAA,oBAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,+BAAA,IAAAC,GAAA,iCAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,yBAAA,IAAAC,GAAA,6BAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,iCAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,qBAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,+BAAA,IAAAC,GAAA,sCAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,iCAAA,IAAAC,GAAA,+BAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,yCAAA,IAAAC,GAAA,mCAAA,IAAAC,GAAA,qCAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,kCAAA,IAAAC,GAAA,4BAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,8BAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,wBAAA,IAAAC,GAAA,6BAAA,IAAAC,GAAA,2BAAA,IAAAC,GAAA,6BAAA,IAAAC,GAAA,0BAAA,IAAAC,GAAA,MAAA,IAAAC,GAAA,QAAA,IAAAC,GAAA,OAAA,IAAAC,GAAA,aAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,QAAA,IAAAC,GAAA,WAAA,IAAAC,GAAA,OAAA,IAAAC,EAAA,aAAA,IAAAC,GAAA,QAAA,IAAAC,GAAA,WAAA,IAAAC,GAAA,WAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,eAAA,IAAAC,GAAA,mBAAA,IAAAC,GAAA,aAAA,IAAAC,GAAA,eAAA,IAAAC,GAAA,WAAA,IAAAC,GAAA,cAAA,IAAAC,GAAA,OAAA,IAAAC,GAAA,aAAA,IAAAC,GAAA,SAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,WAAA,IAAAC,GAAA,SAAA,IAAAC,GAAA,OAAA,IAAAC,GAAA,OAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,cAAA,IAAAC,GAAA,YAAA,IAAAC,GAAA,QAAA,IAAA5G,GAAA,gBAAA,IAAA6G,GAAA,UAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,sBAAA,IAAAC,GAAA,aAAA,IAAAC,GAAA,gBAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,cAAA,IAAAC,GAAA,iBAAA,IAAAC,GAAA,aAAA,IAAAC,EAAA,CAAA,EAAAC,GAAA,QAAAC,GAAAhM,EAAA,ECuCO,IAAMiM,GAAqBC,GAAyB,CAEzD,GAAI,CAAC,mBAAmB,KAAKA,CAAM,EACjC,MAAM,IAAIC,GACR,+EACF,EAGF,GAAID,EAAO,OAAS,IAClB,MAAM,IAAIC,GAAmB,oCAAoC,EAEnE,IAAMC,EAASF,EAAO,MAAM,GAAG,EAC/B,GAAIE,EAAO,OAAS,EAClB,MAAM,IAAID,GAAmB,wCAAwC,EAEvE,QAAS9N,EAAI,EAAGA,EAAI+N,EAAO,OAAQ/N,IAAK,CACtC,IAAMgO,EAAID,EAAO/N,CAAA,EACjB,GAAIgO,EAAE,OAAS,EACb,MAAM,IAAIF,GAAmB,+BAA+B,EAE9D,GAAIE,EAAE,OAAS,GACb,MAAM,IAAIF,GAAmB,qCAAqC,EAEpE,GAAIE,EAAE,SAAS,GAAG,GAAKA,EAAE,WAAW,GAAG,EACrC,MAAM,IAAIF,GACR,gDACF,EAEF,GAAI9N,EAAI,GAAK+N,EAAO,QAAU,CAAC,YAAY,KAAKC,CAAC,EAC/C,MAAM,IAAIF,GACR,2DACF,EAGN,EA2CaA,GAAN,cAAiC,KAAM,CAAC,ECvGlCG,GAAkBC,GAAsB,CAEnD,GAAI,CAAC,sBAAsB,KAAKA,CAAG,EACjC,MAAM,IAAIC,GACR,0FACF,EAGF,IAAMC,EAAQF,EAAI,MAAM,GAAG,EAC3B,GAAIE,EAAM,OAAS,EACjB,MAAM,IAAID,GACR,0DACF,EAGF,GAAIC,EAAM,CAAA,GAAM,MACd,MAAM,IAAID,GAAgB,4BAA4B,EAGxD,GAAI,CAAC,WAAW,KAAKC,EAAM,CAAA,CAAE,EAC3B,MAAM,IAAID,GAAgB,uCAAuC,EAGnE,GAAID,EAAI,SAAS,GAAG,GAAKA,EAAI,SAAS,GAAG,EACvC,MAAM,IAAIC,GAAgB,iCAAiC,EAG7D,GAAID,EAAI,OAAS,EAAI,KACnB,MAAM,IAAIC,GAAgB,kCAAkC,CAEhE,EAcaA,GAAN,cAA8B,KAAM,CAAC,EC5C/BE,GAAN,KAAW,CAqBhB,YAAYC,EAAc,CApB1B,KAAA,SAAqB,CAAC,EAqBpBC,GAAgBD,CAAI,EACpB,KAAK,SAAWA,EAAK,MAAM,GAAG,CAChC,CArBA,OAAO,MAAMA,EAAoB,CAC/B,OAAO,IAAID,GAAKC,CAAI,CACtB,CAEA,OAAO,OAAOE,EAAmBC,EAAoB,CACnD,IAAMC,EAAW,CAAC,GAAGF,EAAU,MAAM,GAAG,EAAE,QAAQ,EAAGC,CAAI,EAAE,KAAK,GAAG,EACnE,OAAO,IAAIJ,GAAKK,CAAQ,CAC1B,CAEA,OAAO,QAAQJ,EAAuB,CACpC,GAAI,CACF,OAAAD,GAAK,MAAMC,CAAI,EACR,EACT,MAAA,CACE,MAAO,EACT,CACF,CAOA,IAAI,WAAY,CACd,OAAO,KAAK,SACT,MAAM,EAAG,KAAK,SAAS,OAAS,CAAC,EACjC,QAAQ,EACR,KAAK,GAAG,CACb,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,SAAS,GAAG,KAAK,SAAS,OAAS,CAAC,CAClD,CAEA,UAAW,CACT,OAAO,KAAK,SAAS,KAAK,GAAG,CAC/B,CACF,EAKaC,GAAmBD,GAAuB,CACrD,IAAMK,EAAUL,EAGhB,GAAI,CAAC,mBAAmB,KAAKK,CAAO,EAClC,MAAM,IAAIC,GACR,6EACF,EAGF,GAAID,EAAQ,OAAS,IAAM,EAAI,GAC7B,MAAM,IAAIC,GAAiB,kCAAkC,EAE/D,IAAMb,EAASY,EAAQ,MAAM,GAAG,EAChC,GAAIZ,EAAO,OAAS,EAClB,MAAM,IAAIa,GAAiB,iCAAiC,EAE9D,QAAS5O,EAAI,EAAGA,EAAI+N,EAAO,OAAQ/N,IAAK,CACtC,IAAMgO,EAAID,EAAO/N,CAAA,EACjB,GAAIgO,EAAE,OAAS,EACb,MAAM,IAAIY,GAAiB,6BAA6B,EAE1D,GAAIZ,EAAE,OAAS,GACb,MAAM,IAAIY,GAAiB,mCAAmC,EAEhE,GAAIZ,EAAE,SAAS,GAAG,GAAKA,EAAE,WAAW,GAAG,EACrC,MAAM,IAAIY,GAAiB,6CAA6C,EAE1E,GAAI,SAAS,KAAKZ,CAAC,GAAKhO,GAAK,EAC3B,MAAM,IAAI4O,GAAiB,4CAA4C,EAEzE,GAAI,CAAC,cAAc,KAAKZ,CAAC,GAAKhO,EAAI,GAAK+N,EAAO,OAC5C,MAAM,IAAIa,GAAiB,qCAAqC,EAGtE,EAiBaA,GAAN,cAA+B,KAAM,CAAC,EC7FhCC,GAAoBC,GAAgB,CAE/C,IAAMC,EAAWD,EAAI,MAAM,GAAG,EAC9B,GAAIC,EAAS,OAAS,EACpB,MAAM,IAAI,MAAM,yDAAyD,EAE3E,IAAMC,EAAeD,EAAS,CAAA,GAAM,KAIpC,GAHAD,EAAMC,EAAS,CAAA,EAGX,CAAC,oCAAoC,KAAKD,CAAG,EAC/C,MAAM,IAAI,MAAM,wCAAwC,EAG1D,IAAMV,EAAQU,EAAI,MAAM,GAAG,EAC3B,GAAIV,EAAM,QAAU,IAAMA,EAAM,CAAA,GAAM,OAASA,EAAM,CAAA,EAAG,QAAU,GAChE,MAAM,IAAI,MAAM,+BAA+B,EAEjD,GAAIA,EAAM,OAAS,EACjB,MAAM,IAAI,MAAM,uDAAuD,EAGzE,GAAI,CACEA,EAAM,CAAA,EAAG,WAAW,MAAM,EAC5BH,GAAeG,EAAM,CAAA,CAAE,EAEvBR,GAAkBQ,EAAM,CAAA,CAAE,CAE9B,MAAA,CACE,MAAM,IAAI,MAAM,+CAA+C,CACjE,CAEA,GAAIA,EAAM,QAAU,EAAG,CACrB,GAAIA,EAAM,CAAA,EAAG,QAAU,EACrB,MAAM,IAAI,MACR,mEACF,EAEF,GAAI,CACFG,GAAgBH,EAAM,CAAA,CAAE,CAC1B,MAAA,CACE,MAAM,IAAI,MACR,kEACF,CACF,EAGF,GAAIA,EAAM,QAAU,GACdA,EAAM,CAAA,EAAG,QAAU,EACrB,MAAM,IAAI,MACR,4EACF,EAKJ,GAAIA,EAAM,QAAU,EAClB,MAAM,IAAI,MACR,8DACF,EAGF,GAAIW,EAAS,QAAU,GAAKC,GAAgB,KAC1C,MAAM,IAAI,MAAM,uDAAuD,EAGzE,GAAIA,GAAgB,KAAM,CACxB,GAAIA,EAAa,QAAU,GAAKA,EAAa,CAAA,GAAM,IACjD,MAAM,IAAI,MAAM,uDAAuD,EAGzE,GAAI,CAAC,yCAAyC,KAAKA,CAAY,EAC7D,MAAM,IAAI,MAAM,iDAAiD,EAIrE,GAAIF,EAAI,OAAS,EAAI,KACnB,MAAM,IAAI,MAAM,uBAAuB,CAE3C,EC9FaG,GAEX,kGAEIC,GAAiB,yCAEVhJ,GAAN,KAAY,CAMjB,YAAY4I,EAAaK,EAAe,CACtC,IAAIC,EACJ,GAAID,EAAM,CAER,GADAC,EAASC,GAAMF,CAAI,EACf,CAACC,EACH,MAAM,IAAI,MAAM,mBAAmBD,GAAM,EAE3C,IAAMG,EAAYC,GAAcT,CAAG,EACnC,GAAI,CAACQ,EACH,MAAM,IAAI,MAAM,iBAAiBR,GAAK,EAExC,OAAO,OAAOM,EAAQE,CAAS,UAE/BF,EAASC,GAAMP,CAAG,EACd,CAACM,EACH,MAAM,IAAI,MAAM,mBAAmBN,GAAK,EAI5C,KAAK,KAAOM,EAAO,KACnB,KAAK,KAAOA,EAAO,KACnB,KAAK,SAAWA,EAAO,SACvB,KAAK,aAAeA,EAAO,YAC7B,CAEA,OAAO,KAAKI,EAAqBC,EAAqBC,EAAe,CACnE,IAAI9R,EAAM4R,EACV,OAAIC,IAAY7R,GAAO,IAAM6R,GACzBC,IAAM9R,GAAO,IAAM8R,GAChB,IAAIxJ,GAAMtI,CAAG,CACtB,CAEA,IAAI,UAAW,CACb,MAAO,KACT,CAEA,IAAI,QAAS,CACX,MAAO,QAAQ,KAAK,MACtB,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,IACd,CAEA,IAAI,SAAS+R,EAAW,CACtB,KAAK,KAAOA,CACd,CAEA,IAAI,QAAS,CACX,OAAO,KAAK,aAAa,SAAS,CACpC,CAEA,IAAI,OAAOA,EAAW,CACpB,KAAK,aAAe,IAAI,gBAAgBA,CAAC,CAC3C,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,SAAS,MAAM,GAAG,EAAE,OAAO,OAAO,EAAE,CAAA,GAAM,EACxD,CAEA,IAAI,WAAWA,EAAW,CACxB,IAAMvB,EAAQ,KAAK,SAAS,MAAM,GAAG,EAAE,OAAO,OAAO,EACrDA,EAAM,CAAA,EAAKuB,EACX,KAAK,SAAWvB,EAAM,KAAK,GAAG,CAChC,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,SAAS,MAAM,GAAG,EAAE,OAAO,OAAO,EAAE,CAAA,GAAM,EACxD,CAEA,IAAI,KAAKuB,EAAW,CAClB,IAAMvB,EAAQ,KAAK,SAAS,MAAM,GAAG,EAAE,OAAO,OAAO,EAChDA,EAAM,CAAA,IAAIA,EAAM,CAAA,EAAK,aAC1BA,EAAM,CAAA,EAAKuB,EACX,KAAK,SAAWvB,EAAM,KAAK,GAAG,CAChC,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,SAAS,CACvB,CAEA,UAAW,CACT,IAAIwB,EAAO,KAAK,UAAY,IACvBA,EAAK,WAAW,GAAG,IACtBA,EAAO,IAAIA,KAEb,IAAIC,EAAK,KAAK,aAAa,SAAS,EAChCA,GAAM,CAACA,EAAG,WAAW,GAAG,IAC1BA,EAAK,IAAIA,KAEX,IAAIC,EAAO,KAAK,KAChB,OAAIA,GAAQ,CAACA,EAAK,WAAW,GAAG,IAC9BA,EAAO,IAAIA,KAEN,QAAQ,KAAK,OAAOF,IAAOC,IAAKC,GACzC,CACF,EAEA,SAAAT,GAAezR,EAAa,CAC1B,IAAMmS,EAAQd,GAAc,KAAKrR,CAAG,EACpC,GAAImS,EACF,MAAO,CACL,KAAMA,EAAM,CAAA,GAAM,GAClB,KAAMA,EAAM,CAAA,GAAM,GAClB,SAAUA,EAAM,CAAA,GAAM,GACtB,aAAc,IAAI,gBAAgBA,EAAM,CAAA,GAAM,EAAE,CAClD,CAGJ,CAEA,SAAAR,GAAuB3R,EAAa,CAClC,IAAMmS,EAAQb,GAAe,KAAKtR,CAAG,EACrC,GAAImS,EACF,MAAO,CACL,KAAMA,EAAM,CAAA,GAAM,GAClB,SAAUA,EAAM,CAAA,GAAM,GACtB,aAAc,IAAI,gBAAgBA,EAAM,CAAA,GAAM,EAAE,CAClD,CAGJ,CCvIA,IAAIC,GACH,SAAUC,EAAM,CACbA,EAAK,YAAeC,GAAQA,EAC5B,SAAAC,EAAkBC,EAAM,CAAE,CAC1BH,EAAK,SAAWE,EAChB,SAAAE,EAAqBC,EAAI,CACrB,MAAM,IAAI,KACd,CACAL,EAAK,YAAcI,EACnBJ,EAAK,YAAeM,GAAU,CAC1B,IAAMC,EAAM,CAAC,EACb,QAAWC,KAAQF,EACfC,EAAIC,CAAA,EAAQA,EAEhB,OAAOD,CACX,EACAP,EAAK,mBAAsBO,GAAQ,CAC/B,IAAME,EAAYT,EAAK,WAAWO,CAAG,EAAE,OAAQG,GAAM,OAAOH,EAAIA,EAAIG,CAAA,CAAA,GAAQ,QAAQ,EAC9EC,EAAW,CAAC,EAClB,QAAWD,KAAKD,EACZE,EAASD,CAAA,EAAKH,EAAIG,CAAA,EAEtB,OAAOV,EAAK,aAAaW,CAAQ,CACrC,EACAX,EAAK,aAAgBO,GACVP,EAAK,WAAWO,CAAG,EAAE,IAAI,SAAUjQ,EAAG,CACzC,OAAOiQ,EAAIjQ,CAAA,CACf,CAAC,EAEL0P,EAAK,WAAa,OAAO,OAAO,MAAS,WAClCO,GAAQ,OAAO,KAAKA,CAAG,EACvBK,GAAW,CACV,IAAMC,EAAO,CAAC,EACd,QAAWC,KAAOF,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQE,CAAG,GAChDD,EAAK,KAAKC,CAAG,EAGrB,OAAOD,CACX,EACJb,EAAK,KAAO,CAACe,EAAKC,IAAY,CAC1B,QAAWR,KAAQO,EACf,GAAIC,EAAQR,CAAI,EACZ,OAAOA,CAGnB,EACAR,EAAK,UAAY,OAAO,OAAO,WAAc,WACtCC,GAAQ,OAAO,UAAUA,CAAG,EAC5BA,GAAQ,OAAOA,GAAQ,UAAY,SAASA,CAAG,GAAK,KAAK,MAAMA,CAAG,IAAMA,EAC/E,SAAAgB,EAAoBC,EAAOC,EAAY,MAAO,CAC1C,OAAOD,EACF,IAAKjB,GAAS,OAAOA,GAAQ,SAAW,IAAIA,KAASA,CAAI,EACzD,KAAKkB,CAAS,CACvB,CACAnB,EAAK,WAAaiB,EAClBjB,EAAK,sBAAwB,CAACoB,EAAGjS,IACzB,OAAOA,GAAU,SACVA,EAAM,SAAS,EAEnBA,CAEf,GAAG4Q,IAASA,EAAO,CAAC,EAAE,EACtB,IAAIsB,IACH,SAAUC,EAAY,CACnBA,EAAW,YAAc,CAACC,EAAOC,KACtB,CACH,GAAGD,EACH,GAAGC,CACP,EAER,GAAGH,KAAeA,GAAa,CAAC,EAAE,EAClC,IAAMI,EAAgB1B,EAAK,YAAY,CACnC,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,KACJ,CAAC,EACK2B,GAAiBC,GAAS,CAE5B,OADU,OAAOA,EACT,CAAA,IACC,YACD,OAAOF,EAAc,UAAA,IACpB,SACD,OAAOA,EAAc,OAAA,IACpB,SACD,OAAO,MAAME,CAAI,EAAIF,EAAc,IAAMA,EAAc,OAAA,IACtD,UACD,OAAOA,EAAc,QAAA,IACpB,WACD,OAAOA,EAAc,SAAA,IACpB,SACD,OAAOA,EAAc,OAAA,IACpB,SACD,OAAOA,EAAc,OAAA,IACpB,SACD,OAAI,MAAM,QAAQE,CAAI,EACXF,EAAc,MAErBE,IAAS,KACFF,EAAc,KAErBE,EAAK,MACL,OAAOA,EAAK,MAAS,YACrBA,EAAK,OACL,OAAOA,EAAK,OAAU,WACfF,EAAc,QAErB,OAAO,IAAQ,KAAeE,aAAgB,IACvCF,EAAc,IAErB,OAAO,IAAQ,KAAeE,aAAgB,IACvCF,EAAc,IAErB,OAAO,KAAS,KAAeE,aAAgB,KACxCF,EAAc,KAElBA,EAAc,OAAA,QAErB,OAAOA,EAAc,OAAA,CAEjC,EAEMG,EAAe7B,EAAK,YAAY,CAClC,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,YACJ,CAAC,EACK8B,GAAiBtB,GACN,KAAK,UAAUA,EAAK,KAAM,CAAC,EAC5B,QAAQ,cAAe,KAAK,EAEtCuB,EAAN,cAAuB,KAAM,CACzB,YAAYC,EAAQ,CAChB,MAAM,EACN,KAAK,OAAS,CAAC,EACf,KAAK,SAAYC,GAAQ,CACrB,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQA,CAAG,CACtC,EACA,KAAK,UAAY,CAACC,EAAO,CAAC,IAAM,CAC5B,KAAK,OAAS,CAAC,GAAG,KAAK,OAAQ,GAAGA,CAAI,CAC1C,EACA,IAAMC,EAAc,WAAW,UAC3B,OAAO,eAEP,OAAO,eAAe,KAAMA,CAAW,EAGvC,KAAK,UAAYA,EAErB,KAAK,KAAO,WACZ,KAAK,OAASH,CAClB,CACA,IAAI,QAAS,CACT,OAAO,KAAK,MAChB,CACA,OAAOI,EAAS,CACZ,IAAMC,EAASD,GACX,SAAUE,EAAO,CACb,OAAOA,EAAM,OACjB,EACEC,EAAc,CAAE,QAAS,CAAC,CAAE,EAC5BC,EAAgBC,GAAU,CAC5B,QAAWH,KAASG,EAAM,OACtB,GAAIH,EAAM,OAAS,gBACfA,EAAM,YAAY,IAAIE,CAAY,UAE7BF,EAAM,OAAS,sBACpBE,EAAaF,EAAM,eAAe,UAE7BA,EAAM,OAAS,oBACpBE,EAAaF,EAAM,cAAc,UAE5BA,EAAM,KAAK,SAAW,EAC3BC,EAAY,QAAQ,KAAKF,EAAOC,CAAK,CAAC,MAErC,CACD,IAAII,EAAOH,EACPvS,EAAI,EACR,KAAOA,EAAIsS,EAAM,KAAK,QAAQ,CAC1B,IAAMK,EAAKL,EAAM,KAAKtS,CAAA,EACLA,IAAMsS,EAAM,KAAK,OAAS,GAYvCI,EAAKC,CAAA,EAAMD,EAAKC,CAAA,GAAO,CAAE,QAAS,CAAC,CAAE,EACrCD,EAAKC,CAAA,EAAI,QAAQ,KAAKN,EAAOC,CAAK,CAAC,GAXnCI,EAAKC,CAAA,EAAMD,EAAKC,CAAA,GAAO,CAAE,QAAS,CAAC,CAAE,EAazCD,EAAOA,EAAKC,CAAA,EACZ3S,KAIhB,EACA,OAAAwS,EAAa,IAAI,EACVD,CACX,CACA,UAAW,CACP,OAAO,KAAK,OAChB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,UAAU,KAAK,OAAQvC,EAAK,sBAAuB,CAAC,CACpE,CACA,IAAI,SAAU,CACV,OAAO,KAAK,OAAO,SAAW,CAClC,CACA,QAAQqC,EAAUC,GAAUA,EAAM,QAAS,CACvC,IAAMC,EAAc,CAAC,EACfK,EAAa,CAAC,EACpB,QAAWX,KAAO,KAAK,OACfA,EAAI,KAAK,OAAS,GAClBM,EAAYN,EAAI,KAAK,CAAA,CAAA,EAAMM,EAAYN,EAAI,KAAK,CAAA,CAAA,GAAO,CAAC,EACxDM,EAAYN,EAAI,KAAK,CAAA,CAAA,EAAI,KAAKI,EAAOJ,CAAG,CAAC,GAGzCW,EAAW,KAAKP,EAAOJ,CAAG,CAAC,EAGnC,MAAO,CAAE,WAAAW,EAAY,YAAAL,CAAY,CACrC,CACA,IAAI,YAAa,CACb,OAAO,KAAK,QAAQ,CACxB,CACJ,EACAR,EAAS,OAAUC,GACD,IAAID,EAASC,CAAM,EAIrC,IAAMa,GAAW,CAACP,EAAOQ,IAAS,CAC9B,IAAIC,EACJ,OAAQT,EAAM,KAAA,CAAA,KACLT,EAAa,aACVS,EAAM,WAAaZ,EAAc,UACjCqB,EAAU,WAGVA,EAAU,YAAYT,EAAM,sBAAsBA,EAAM,WAE5D,MAAA,KACCT,EAAa,gBACdkB,EAAU,mCAAmC,KAAK,UAAUT,EAAM,SAAUtC,EAAK,qBAAqB,IACtG,MAAA,KACC6B,EAAa,kBACdkB,EAAU,kCAAkC/C,EAAK,WAAWsC,EAAM,KAAM,IAAI,IAC5E,MAAA,KACCT,EAAa,cACdkB,EAAU,gBACV,MAAA,KACClB,EAAa,4BACdkB,EAAU,yCAAyC/C,EAAK,WAAWsC,EAAM,OAAO,IAChF,MAAA,KACCT,EAAa,mBACdkB,EAAU,gCAAgC/C,EAAK,WAAWsC,EAAM,OAAO,gBAAgBA,EAAM,YAC7F,MAAA,KACCT,EAAa,kBACdkB,EAAU,6BACV,MAAA,KACClB,EAAa,oBACdkB,EAAU,+BACV,MAAA,KACClB,EAAa,aACdkB,EAAU,eACV,MAAA,KACClB,EAAa,eACV,OAAOS,EAAM,YAAe,SACxB,aAAcA,EAAM,YACpBS,EAAU,gCAAgCT,EAAM,WAAW,YACvD,OAAOA,EAAM,WAAW,UAAa,WACrCS,EAAU,GAAGA,uDAA6DT,EAAM,WAAW,aAG1F,eAAgBA,EAAM,WAC3BS,EAAU,mCAAmCT,EAAM,WAAW,cAEzD,aAAcA,EAAM,WACzBS,EAAU,iCAAiCT,EAAM,WAAW,YAG5DtC,EAAK,YAAYsC,EAAM,UAAU,EAGhCA,EAAM,aAAe,QAC1BS,EAAU,WAAWT,EAAM,aAG3BS,EAAU,UAEd,MAAA,KACClB,EAAa,UACVS,EAAM,OAAS,QACfS,EAAU,sBAAsBT,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,eAAeA,EAAM,qBACzGA,EAAM,OAAS,SACpBS,EAAU,uBAAuBT,EAAM,MAAQ,UAAYA,EAAM,UAAY,WAAa,UAAUA,EAAM,uBACrGA,EAAM,OAAS,SACpBS,EAAU,kBAAkBT,EAAM,MAC5B,oBACAA,EAAM,UACF,4BACA,kBAAkBA,EAAM,UAC7BA,EAAM,OAAS,OACpBS,EAAU,gBAAgBT,EAAM,MAC1B,oBACAA,EAAM,UACF,4BACA,kBAAkB,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,IAE1DS,EAAU,gBACd,MAAA,KACClB,EAAa,QACVS,EAAM,OAAS,QACfS,EAAU,sBAAsBT,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,eAAeA,EAAM,qBACxGA,EAAM,OAAS,SACpBS,EAAU,uBAAuBT,EAAM,MAAQ,UAAYA,EAAM,UAAY,UAAY,WAAWA,EAAM,uBACrGA,EAAM,OAAS,SACpBS,EAAU,kBAAkBT,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,eAAeA,EAAM,UAC1BA,EAAM,OAAS,SACpBS,EAAU,kBAAkBT,EAAM,MAC5B,UACAA,EAAM,UACF,wBACA,eAAeA,EAAM,UAC1BA,EAAM,OAAS,OACpBS,EAAU,gBAAgBT,EAAM,MAC1B,UACAA,EAAM,UACF,2BACA,kBAAkB,IAAI,KAAK,OAAOA,EAAM,OAAO,CAAC,IAE1DS,EAAU,gBACd,MAAA,KACClB,EAAa,OACdkB,EAAU,gBACV,MAAA,KACClB,EAAa,2BACdkB,EAAU,2CACV,MAAA,KACClB,EAAa,gBACdkB,EAAU,gCAAgCT,EAAM,aAChD,MAAA,KACCT,EAAa,WACdkB,EAAU,wBACV,MAAA,QAEAA,EAAUD,EAAK,aACf9C,EAAK,YAAYsC,CAAK,CAAA,CAE9B,MAAO,CAAE,QAAAS,CAAQ,CACrB,EAEIC,GAAmBH,GACvB,SAAAI,GAAqBC,EAAK,CACtBF,GAAmBE,CACvB,CACA,SAAAC,IAAuB,CACnB,OAAOH,EACX,CAEA,IAAMI,GAAaC,GAAW,CAC1B,GAAM,CAAE,KAAAzB,EAAM,KAAAhC,EAAM,UAAA0D,EAAW,UAAAC,CAAA,EAAcF,EACvCG,EAAW,CAAC,GAAG5D,EAAM,GAAI2D,EAAU,MAAQ,CAAC,CAAE,EAC9CE,EAAY,CACd,GAAGF,EACH,KAAMC,CACV,EACIE,EAAe,GACbC,EAAOL,EACR,OAAQM,GAAM,CAAC,CAACA,CAAC,EACjB,MAAM,EACN,QAAQ,EACb,QAAWV,KAAOS,EACdD,EAAeR,EAAIO,EAAW,CAAE,KAAA7B,EAAM,aAAc8B,CAAa,CAAC,EAAE,QAExE,MAAO,CACH,GAAGH,EACH,KAAMC,EACN,QAASD,EAAU,SAAWG,CAClC,CACJ,EACMG,GAAa,CAAC,EACpB,SAAAC,EAA2BC,EAAKR,EAAW,CACvC,IAAMjB,EAAQc,GAAU,CACpB,UAAAG,EACA,KAAMQ,EAAI,KACV,KAAMA,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJZ,GAAY,EACZN,EACJ,EAAE,OAAQmB,GAAM,CAAC,CAACA,CAAC,CACvB,CAAC,EACDD,EAAI,OAAO,OAAO,KAAKzB,CAAK,CAChC,CACA,IAAM2B,EAAN,KAAkB,CACd,aAAc,CACV,KAAK,MAAQ,OACjB,CACA,OAAQ,CACA,KAAK,QAAU,UACf,KAAK,MAAQ,QACrB,CACA,OAAQ,CACA,KAAK,QAAU,YACf,KAAK,MAAQ,UACrB,CACA,OAAO,WAAWC,EAAQC,EAAS,CAC/B,IAAMC,EAAa,CAAC,EACpB,QAAW5S,KAAK2S,EAAS,CACrB,GAAI3S,EAAE,SAAW,UACb,OAAO6S,EACP7S,EAAE,SAAW,SACb0S,EAAO,MAAM,EACjBE,EAAW,KAAK5S,EAAE,KAAK,EAE3B,MAAO,CAAE,OAAQ0S,EAAO,MAAO,MAAOE,CAAW,CACrD,CACA,aAAa,iBAAiBF,EAAQI,EAAO,CACzC,IAAMC,EAAY,CAAC,EACnB,QAAWC,KAAQF,EACfC,EAAU,KAAK,CACX,IAAK,MAAMC,EAAK,IAChB,MAAO,MAAMA,EAAK,KACtB,CAAC,EAEL,OAAOP,EAAY,gBAAgBC,EAAQK,CAAS,CACxD,CACA,OAAO,gBAAgBL,EAAQI,EAAO,CAClC,IAAMG,EAAc,CAAC,EACrB,QAAWD,KAAQF,EAAO,CACtB,GAAM,CAAE,IAAAvD,EAAK,MAAA3R,CAAA,EAAUoV,EAGvB,GAFIzD,EAAI,SAAW,WAEf3R,EAAM,SAAW,UACjB,OAAOiV,EACPtD,EAAI,SAAW,SACfmD,EAAO,MAAM,EACb9U,EAAM,SAAW,SACjB8U,EAAO,MAAM,GACb,OAAO9U,EAAM,MAAU,KAAeoV,EAAK,aAC3CC,EAAY1D,EAAI,KAAA,EAAS3R,EAAM,OAGvC,MAAO,CAAE,OAAQ8U,EAAO,MAAO,MAAOO,CAAY,CACtD,CACJ,EACMJ,EAAU,OAAO,OAAO,CAC1B,OAAQ,SACZ,CAAC,EACKK,GAAStV,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAC7CuV,EAAMvV,IAAW,CAAE,OAAQ,QAAS,MAAAA,CAAM,GAC1CwV,GAAaZ,GAAMA,EAAE,SAAW,UAChCa,GAAWb,GAAMA,EAAE,SAAW,QAC9Bc,GAAWd,GAAMA,EAAE,SAAW,QAC9Be,GAAWf,GAAM,OAAO,QAAY,KAAeA,aAAa,QAElEgB,GACH,SAAUC,EAAW,CAClBA,EAAU,SAAYlC,GAAY,OAAOA,GAAY,SAAW,CAAE,QAAAA,CAAQ,EAAIA,GAAW,CAAC,EAC1FkC,EAAU,SAAYlC,GAAY,OAAOA,GAAY,SAAWA,EAA4DA,GAAQ,OACxI,GAAGiC,IAAcA,EAAY,CAAC,EAAE,EAEhC,IAAME,GAAN,KAAyB,CACrB,YAAYC,EAAQ/V,EAAOwQ,EAAMmB,EAAK,CAClC,KAAK,YAAc,CAAC,EACpB,KAAK,OAASoE,EACd,KAAK,KAAO/V,EACZ,KAAK,MAAQwQ,EACb,KAAK,KAAOmB,CAChB,CACA,IAAI,MAAO,CACP,OAAK,KAAK,YAAY,SACd,KAAK,gBAAgB,MACrB,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,GAAG,KAAK,IAAI,EAGjD,KAAK,YAAY,KAAK,GAAG,KAAK,MAAO,KAAK,IAAI,GAG/C,KAAK,WAChB,CACJ,EACMqE,GAAe,CAACrB,EAAKsB,IAAW,CAClC,GAAIP,GAAQO,CAAM,EACd,MAAO,CAAE,QAAS,GAAM,KAAMA,EAAO,KAAM,EAG3C,GAAI,CAACtB,EAAI,OAAO,OAAO,OACnB,MAAM,IAAI,MAAM,2CAA2C,EAE/D,MAAO,CACH,QAAS,GACT,IAAI,OAAQ,CACR,GAAI,KAAK,OACL,OAAO,KAAK,OAChB,IAAMtB,EAAQ,IAAIV,EAASgC,EAAI,OAAO,MAAM,EAC5C,YAAK,OAAStB,EACP,KAAK,MAChB,CACJ,CAER,EACA,SAAA6C,EAA6BjC,EAAQ,CACjC,GAAI,CAACA,EACD,MAAO,CAAC,EACZ,GAAM,CAAE,SAAAkC,EAAU,mBAAAC,EAAoB,eAAAC,EAAgB,YAAAC,CAAA,EAAgBrC,EACtE,GAAIkC,IAAaC,GAAsBC,GACnC,MAAM,IAAI,MAAM,0FAA0F,EAE9G,OAAIF,EACO,CAAE,SAAUA,EAAU,YAAAG,CAAY,EAStC,CAAE,SARS,CAACC,EAAK5B,IAChB4B,EAAI,OAAS,eACN,CAAE,QAAS5B,EAAI,YAAa,EACnC,OAAOA,EAAI,KAAS,IACb,CAAE,QAAS0B,GAAwE1B,EAAI,YAAa,EAExG,CAAE,QAASyB,GAAoFzB,EAAI,YAAa,EAE7F,YAAA2B,CAAY,CAC9C,CACA,IAAME,EAAN,KAAc,CACV,YAAYC,EAAK,CAEb,KAAK,IAAM,KAAK,eAChB,KAAK,KAAOA,EACZ,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,GAAK,KAAK,GAAG,KAAK,IAAI,EAC3B,KAAK,IAAM,KAAK,IAAI,KAAK,IAAI,EAC7B,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EACrC,KAAK,MAAQ,KAAK,MAAM,KAAK,IAAI,EACjC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,KAAO,KAAK,KAAK,KAAK,IAAI,EAC/B,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC/C,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,WACrB,CACA,SAASC,EAAO,CACZ,OAAOnE,GAAcmE,EAAM,IAAI,CACnC,CACA,gBAAgBA,EAAO/B,EAAK,CACxB,OAAQA,GAAO,CACX,OAAQ+B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYnE,GAAcmE,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACA,oBAAoBA,EAAO,CACvB,MAAO,CACH,OAAQ,IAAI7B,EACZ,IAAK,CACD,OAAQ6B,EAAM,OAAO,OACrB,KAAMA,EAAM,KACZ,WAAYnE,GAAcmE,EAAM,IAAI,EACpC,eAAgB,KAAK,KAAK,SAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAClB,CACJ,CACJ,CACA,WAAWA,EAAO,CACd,IAAMT,EAAS,KAAK,OAAOS,CAAK,EAChC,GAAIf,GAAQM,CAAM,EACd,MAAM,IAAI,MAAM,wCAAwC,EAE5D,OAAOA,CACX,CACA,YAAYS,EAAO,CACf,IAAMT,EAAS,KAAK,OAAOS,CAAK,EAChC,OAAO,QAAQ,QAAQT,CAAM,CACjC,CACA,MAAMzD,EAAMyB,EAAQ,CAChB,IAAMgC,EAAS,KAAK,UAAUzD,EAAMyB,CAAM,EAC1C,GAAIgC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,UAAUzD,EAAMyB,EAAQ,CACpB,IAAI0C,EACJ,IAAMhC,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,OAAQgC,EAAqD1C,GAAO,SAAW,MAAQ0C,IAAO,OAASA,EAAK,GAC5G,mBAAoE1C,GAAO,QAC/E,EACA,KAAuDA,GAAO,MAAS,CAAC,EACxE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAzB,EACA,WAAYD,GAAcC,CAAI,CAClC,EACMyD,EAAS,KAAK,WAAW,CAAE,KAAAzD,EAAM,KAAMmC,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpE,OAAOqB,GAAarB,EAAKsB,CAAM,CACnC,CACA,MAAM,WAAWzD,EAAMyB,EAAQ,CAC3B,IAAMgC,EAAS,MAAM,KAAK,eAAezD,EAAMyB,CAAM,EACrD,GAAIgC,EAAO,QACP,OAAOA,EAAO,KAClB,MAAMA,EAAO,KACjB,CACA,MAAM,eAAezD,EAAMyB,EAAQ,CAC/B,IAAMU,EAAM,CACR,OAAQ,CACJ,OAAQ,CAAC,EACT,mBAAoEV,GAAO,SAC3E,MAAO,EACX,EACA,KAAuDA,GAAO,MAAS,CAAC,EACxE,eAAgB,KAAK,KAAK,SAC1B,OAAQ,KACR,KAAAzB,EACA,WAAYD,GAAcC,CAAI,CAClC,EACMoE,EAAmB,KAAK,OAAO,CAAE,KAAApE,EAAM,KAAMmC,EAAI,KAAM,OAAQA,CAAI,CAAC,EACpEsB,EAAS,MAAON,GAAQiB,CAAgB,EACxCA,EACA,QAAQ,QAAQA,CAAgB,GACtC,OAAOZ,GAAarB,EAAKsB,CAAM,CACnC,CACA,OAAOY,EAAOlD,EAAS,CACnB,IAAMmD,EAAsBhG,GACpB,OAAO6C,GAAY,UAAY,OAAOA,EAAY,IAC3C,CAAE,QAAAA,CAAQ,EAEZ,OAAOA,GAAY,WACjBA,EAAQ7C,CAAG,EAGX6C,EAGf,OAAO,KAAK,YAAY,CAAC7C,EAAK6D,IAAQ,CAClC,IAAMsB,EAASY,EAAM/F,CAAG,EAClBiG,EAAW,IAAMpC,EAAI,SAAS,CAChC,KAAMlC,EAAa,OACnB,GAAGqE,EAAmBhG,CAAG,CAC7B,CAAC,EACD,OAAI,OAAO,QAAY,KAAemF,aAAkB,QAC7CA,EAAO,KAAMzD,GACXA,EAKM,IAJPuE,EAAS,EACF,GAKd,EAEAd,EAKM,IAJPc,EAAS,EACF,GAKf,CAAC,CACL,CACA,WAAWF,EAAOG,EAAgB,CAC9B,OAAO,KAAK,YAAY,CAAClG,EAAK6D,IACrBkC,EAAM/F,CAAG,EAOH,IANP6D,EAAI,SAAS,OAAOqC,GAAmB,WACjCA,EAAelG,EAAK6D,CAAG,EACvBqC,CAAc,EACb,GAKd,CACL,CACA,YAAYC,EAAY,CACpB,OAAO,IAAIC,GAAW,CAClB,OAAQ,KACR,SAAUC,EAAsB,WAChC,OAAQ,CAAE,KAAM,aAAc,WAAAF,CAAW,CAC7C,CAAC,CACL,CACA,YAAYA,EAAY,CACpB,OAAO,KAAK,YAAYA,CAAU,CACtC,CACA,UAAW,CACP,OAAOG,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,UAAW,CACP,OAAOC,GAAY,OAAO,KAAM,KAAK,IAAI,CAC7C,CACA,SAAU,CACN,OAAO,KAAK,SAAS,EAAE,SAAS,CACpC,CACA,OAAQ,CACJ,OAAOC,GAAS,OAAO,KAAM,KAAK,IAAI,CAC1C,CACA,SAAU,CACN,OAAOC,GAAW,OAAO,KAAM,KAAK,IAAI,CAC5C,CACA,GAAGC,EAAQ,CACP,OAAOC,GAAS,OAAO,CAAC,KAAMD,CAAM,EAAG,KAAK,IAAI,CACpD,CACA,IAAIE,EAAU,CACV,OAAOC,GAAgB,OAAO,KAAMD,EAAU,KAAK,IAAI,CAC3D,CACA,UAAUE,EAAW,CACjB,OAAO,IAAIV,GAAW,CAClB,GAAGhB,EAAoB,KAAK,IAAI,EAChC,OAAQ,KACR,SAAUiB,EAAsB,WAChC,OAAQ,CAAE,KAAM,YAAa,UAAAS,CAAU,CAC3C,CAAC,CACL,CACA,QAAQnB,EAAK,CACT,IAAMoB,EAAmB,OAAOpB,GAAQ,WAAaA,EAAM,IAAMA,EACjE,OAAO,IAAIqB,GAAW,CAClB,GAAG5B,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,aAAc2B,EACd,SAAUV,EAAsB,UACpC,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIY,GAAW,CAClB,SAAUZ,EAAsB,WAChC,KAAM,KACN,GAAGjB,EAAoB,KAAK,IAAI,CACpC,CAAC,CACL,CACA,MAAMO,EAAK,CACP,IAAMuB,EAAiB,OAAOvB,GAAQ,WAAaA,EAAM,IAAMA,EAC/D,OAAO,IAAIwB,GAAS,CAChB,GAAG/B,EAAoB,KAAK,IAAI,EAChC,UAAW,KACX,WAAY8B,EACZ,SAAUb,EAAsB,QACpC,CAAC,CACL,CACA,SAASb,EAAa,CAClB,IAAM4B,EAAO,KAAK,YAClB,OAAO,IAAIA,EAAK,CACZ,GAAG,KAAK,KACR,YAAA5B,CACJ,CAAC,CACL,CACA,KAAK6B,EAAQ,CACT,OAAOC,GAAY,OAAO,KAAMD,CAAM,CAC1C,CACA,YAAa,CACT,OAAO,KAAK,UAAU,MAAS,EAAE,OACrC,CACA,YAAa,CACT,OAAO,KAAK,UAAU,IAAI,EAAE,OAChC,CACJ,EACME,GAAY,iBACZC,GAAa,mBACbC,GAAY,yBACZC,GAAY,8GAOZC,GAAa,unBAEbC,GAAa,sDACbC,GAAY,gHACZC,GAAY,+XAEZC,GAAiBC,GACfA,EAAK,UACDA,EAAK,OACE,IAAI,OAAO,oDAAoDA,EAAK,wCAAwC,EAG5G,IAAI,OAAO,oDAAoDA,EAAK,cAAc,EAGxFA,EAAK,YAAc,EACpBA,EAAK,OACE,IAAI,OAAO,wEAAwE,EAGnF,IAAI,OAAO,8CAA8C,EAIhEA,EAAK,OACE,IAAI,OAAO,kFAAkF,EAG7F,IAAI,OAAO,wDAAwD,EAItF,SAAAC,GAAmBC,EAAIC,EAAS,CAI5B,MAHK,IAAAA,IAAY,MAAQ,CAACA,IAAYN,GAAU,KAAKK,CAAE,IAGlDC,IAAY,MAAQ,CAACA,IAAYL,GAAU,KAAKI,CAAE,EAI3D,CACA,IAAME,GAAN,cAAwB1C,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,CAAC2C,EAAOC,EAAYzF,IAAY,KAAK,WAAYnB,GAAS2G,EAAM,KAAK3G,CAAI,EAAG,CACtF,WAAA4G,EACA,KAAM3G,EAAa,eACnB,GAAGmD,EAAU,SAASjC,CAAO,CACjC,CAAC,EAKD,KAAK,SAAYA,GAAY,KAAK,IAAI,EAAGiC,EAAU,SAASjC,CAAO,CAAC,EACpE,KAAK,KAAO,IAAM,IAAIuF,GAAU,CAC5B,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,MAAO,CAAC,CAClD,CAAC,EACD,KAAK,YAAc,IAAM,IAAIA,GAAU,CACnC,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,EACD,KAAK,YAAc,IAAM,IAAIA,GAAU,CACnC,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ,CAAE,KAAM,aAAc,CAAC,CACzD,CAAC,CACL,CACA,OAAOxC,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBpE,EAAc,OAAQ,CACrC,IAAM+G,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAU+G,EAAI,UAClB,CAEA,EACOpE,EAEX,IAAMH,EAAS,IAAID,EACfF,EACJ,QAAWkC,KAAS,KAAK,KAAK,OAC1B,GAAIA,EAAM,OAAS,MACXH,EAAM,KAAK,OAASG,EAAM,QAC1BlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,MAChBH,EAAM,KAAK,OAASG,EAAM,QAC1BlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,SAAU,CAC9B,IAAMyC,EAAS5C,EAAM,KAAK,OAASG,EAAM,MACnC0C,EAAW7C,EAAM,KAAK,OAASG,EAAM,OACvCyC,GAAUC,KACV5E,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACjC2E,EACA5E,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAEI0C,GACL7E,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAW,GACX,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EAEL/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,QACf4B,GAAW,KAAK/B,EAAM,IAAI,IAC3B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,QACf6B,GAAW,KAAKhC,EAAM,IAAI,IAC3B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,OACf2B,GAAU,KAAK9B,EAAM,IAAI,IAC1B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,OACfwB,GAAU,KAAK3B,EAAM,IAAI,IAC1B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,QACfyB,GAAW,KAAK5B,EAAM,IAAI,IAC3B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,OACf0B,GAAU,KAAK7B,EAAM,IAAI,IAC1B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,OACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,WAGZ+B,EAAM,OAAS,MACpB,GAAI,CACA,IAAI,IAAIH,EAAM,IAAI,CACtB,MAAA,CAEI/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,MACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,CACjB,MAEK+B,EAAM,OAAS,SACpBA,EAAM,MAAM,UAAY,EACLA,EAAM,MAAM,KAAKH,EAAM,IAAI,IAE1C/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,QACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,IAGZ+B,EAAM,OAAS,OACpBH,EAAM,KAAOA,EAAM,KAAK,KAAK,EAExBG,EAAM,OAAS,WACfH,EAAM,KAAK,SAASG,EAAM,MAAOA,EAAM,QAAQ,IAChDlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,eACnB,WAAY,CAAE,SAAUoE,EAAM,MAAO,SAAUA,EAAM,QAAS,EAC9D,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,cACpBH,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/BG,EAAM,OAAS,cACpBH,EAAM,KAAOA,EAAM,KAAK,YAAY,EAE/BG,EAAM,OAAS,aACfH,EAAM,KAAK,WAAWG,EAAM,KAAK,IAClClC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,eACnB,WAAY,CAAE,WAAYoE,EAAM,KAAM,EACtC,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,WACfH,EAAM,KAAK,SAASG,EAAM,KAAK,IAChClC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,eACnB,WAAY,CAAE,SAAUoE,EAAM,KAAM,EACpC,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,WACNgC,GAAchC,CAAK,EACtB,KAAKH,EAAM,IAAI,IACtB/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,eACnB,WAAY,WACZ,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,KACfkC,GAAUrC,EAAM,KAAMG,EAAM,OAAO,IACpClC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,WAAY,KACZ,KAAMlC,EAAa,eACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAIjBlE,EAAK,YAAYiG,CAAK,EAG9B,MAAO,CAAE,OAAQ/B,EAAO,MAAO,MAAO4B,EAAM,IAAK,CACrD,CACA,UAAUG,EAAO,CACb,OAAO,IAAIqC,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQrC,CAAK,CACvC,CAAC,CACL,CACA,MAAMlD,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC3E,CACA,IAAIA,EAAS,CACT,OAAO,KAAK,UAAU,CAAE,KAAM,MAAO,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CACzE,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC1E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC1E,CACA,MAAMA,EAAS,CACX,OAAO,KAAK,UAAU,CAAE,KAAM,QAAS,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC3E,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAAE,KAAM,OAAQ,GAAGiC,EAAU,SAASjC,CAAO,CAAE,CAAC,CAC1E,CACA,GAAG6F,EAAS,CACR,OAAO,KAAK,UAAU,CAAE,KAAM,KAAM,GAAG5D,EAAU,SAAS4D,CAAO,CAAE,CAAC,CACxE,CACA,SAASA,EAAS,CACd,IAAI7C,EACJ,OAAI,OAAO6C,GAAY,SACZ,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,KACX,OAAQ,GACR,QAASA,CACb,CAAC,EAEE,KAAK,UAAU,CAClB,KAAM,WACN,UAAW,OAA0DA,GAAQ,UAAe,IAAc,KAAyDA,GAAQ,UAC3K,QAAS7C,EAAuD6C,GAAQ,UAAY,MAAQ7C,IAAO,OAASA,EAAK,GACjH,GAAGf,EAAU,SAA2D4D,GAAQ,OAAO,CAC3F,CAAC,CACL,CACA,MAAML,EAAOxF,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,QACN,MAAAwF,EACA,GAAGvD,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,SAAS3T,EAAOwZ,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAAxZ,EACA,SAA4DwZ,GAAQ,SACpE,GAAG5D,EAAU,SAA2D4D,GAAQ,OAAO,CAC3F,CAAC,CACL,CACA,WAAWxZ,EAAO2T,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAA3T,EACA,GAAG4V,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,SAAS3T,EAAO2T,EAAS,CACrB,OAAO,KAAK,UAAU,CAClB,KAAM,WACN,MAAA3T,EACA,GAAG4V,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,IAAI8F,EAAW9F,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO8F,EACP,GAAG7D,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,IAAI+F,EAAW/F,EAAS,CACpB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO+F,EACP,GAAG9D,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,OAAOgG,EAAKhG,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,MAAOgG,EACP,GAAG/D,EAAU,SAASjC,CAAO,CACjC,CAAC,CACL,CACA,IAAI,YAAa,CACb,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMiG,GAAOA,EAAG,OAAS,UAAU,CACjE,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,KAAK,CAC5D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,SAAU,CACV,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,OAAO,CAC9D,CACA,IAAI,QAAS,CACT,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,MAAM,CAC7D,CACA,IAAI,MAAO,CACP,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMA,GAAOA,EAAG,OAAS,IAAI,CAC3D,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,WAAY,CACZ,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAZ,GAAU,OAAUjF,GAAW,CAC3B,IAAI0C,EACJ,OAAO,IAAIuC,GAAU,CACjB,OAAQ,CAAC,EACT,SAAU/B,EAAsB,UAChC,QAASR,EAAqD1C,GAAO,UAAY,MAAQ0C,IAAO,OAASA,EAAK,GAC9G,GAAGT,EAAoBjC,CAAM,CACjC,CAAC,CACL,EAEA,SAAA8F,GAA4BjJ,EAAKkJ,EAAM,CACnC,IAAMC,GAAenJ,EAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAA,GAAM,IAAI,OACnDoJ,GAAgBF,EAAK,SAAS,EAAE,MAAM,GAAG,EAAE,CAAA,GAAM,IAAI,OACrDG,EAAWF,EAAcC,EAAeD,EAAcC,EACtDE,EAAS,SAAStJ,EAAI,QAAQqJ,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EACxDE,EAAU,SAASL,EAAK,QAAQG,CAAQ,EAAE,QAAQ,IAAK,EAAE,CAAC,EAChE,OAAQC,EAASC,EAAW,KAAK,IAAI,GAAIF,CAAQ,CACrD,CACA,IAAMG,GAAN,cAAwB9D,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,IAChB,KAAK,KAAO,KAAK,UACrB,CACA,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBpE,EAAc,OAAQ,CACrC,IAAM+G,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAU+G,EAAI,UAClB,CAAC,EACMpE,EAEX,IAAIN,EACEG,EAAS,IAAID,EACnB,QAAWgC,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACVjG,EAAK,UAAU8F,EAAM,IAAI,IAC1B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAU,UACV,SAAU,QACV,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,OACHA,EAAM,UACjBH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,OACLA,EAAM,UACfH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASoE,EAAM,MACf,KAAM,SACN,UAAWA,EAAM,UACjB,MAAO,GACP,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,aAChBkD,GAAmBrD,EAAM,KAAMG,EAAM,KAAK,IAAM,IAChDlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,gBACnB,WAAYoE,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,SACf,OAAO,SAASH,EAAM,IAAI,IAC3B/B,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,WACnB,QAASoE,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAIjBlE,EAAK,YAAYiG,CAAK,EAG9B,MAAO,CAAE,OAAQ/B,EAAO,MAAO,MAAO4B,EAAM,IAAK,CACrD,CACA,IAAI1W,EAAO2T,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAM4V,EAAU,SAASjC,CAAO,CAAC,CACxE,CACA,GAAG3T,EAAO2T,EAAS,CACf,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAO4V,EAAU,SAASjC,CAAO,CAAC,CACzE,CACA,IAAI3T,EAAO2T,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAM4V,EAAU,SAASjC,CAAO,CAAC,CACxE,CACA,GAAG3T,EAAO2T,EAAS,CACf,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAO4V,EAAU,SAASjC,CAAO,CAAC,CACzE,CACA,SAAS4G,EAAMva,EAAOwa,EAAW7G,EAAS,CACtC,OAAO,IAAI2G,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAC,EACA,MAAAva,EACA,UAAAwa,EACA,QAAS5E,EAAU,SAASjC,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUkD,EAAO,CACb,OAAO,IAAIyD,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQzD,CAAK,CACvC,CAAC,CACL,CACA,IAAIlD,EAAS,CACT,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,EACP,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,WAAW3T,EAAO2T,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAA3T,EACA,QAAS4V,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,OAAOA,EAAS,CACZ,OAAO,KAAK,UAAU,CAClB,KAAM,SACN,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,KAAKA,EAAS,CACV,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,EAAE,UAAU,CACT,KAAM,MACN,UAAW,GACX,MAAO,OAAO,iBACd,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIkG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACA,IAAI,OAAQ,CACR,MAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAMF,GAAOA,EAAG,OAAS,OAC9CA,EAAG,OAAS,cAAgBhJ,EAAK,UAAUgJ,EAAG,KAAK,CAAE,CAC9D,CACA,IAAI,UAAW,CACX,IAAIE,EAAM,KAAMD,EAAM,KACtB,QAAWD,KAAM,KAAK,KAAK,OAAQ,CAC/B,GAAIA,EAAG,OAAS,UACZA,EAAG,OAAS,OACZA,EAAG,OAAS,aACZ,MAAO,GAEFA,EAAG,OAAS,OACbC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAERA,EAAG,OAAS,QACbE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAO,OAAO,SAASC,CAAG,GAAK,OAAO,SAASC,CAAG,CACtD,CACJ,EACAQ,GAAU,OAAUrG,GACT,IAAIqG,GAAU,CACjB,OAAQ,CAAC,EACT,SAAUnD,EAAsB,UAChC,OAAyDlD,GAAO,QAAW,GAC3E,GAAGiC,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMwG,GAAN,cAAwBjE,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,IAAM,KAAK,IAChB,KAAK,IAAM,KAAK,GACpB,CACA,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,OAAOA,EAAM,IAAI,GAEf,KAAK,SAASA,CAAK,IACnBpE,EAAc,OAAQ,CACrC,IAAM+G,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAU+G,EAAI,UAClB,CAAC,EACMpE,EAEX,IAAIN,EACEG,EAAS,IAAID,EACnB,QAAWgC,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,OACEA,EAAM,UACjBH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,KAAM,SACN,QAASoE,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,OACLA,EAAM,UACfH,EAAM,KAAOG,EAAM,MACnBH,EAAM,MAAQG,EAAM,SAEtBlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,KAAM,SACN,QAASoE,EAAM,MACf,UAAWA,EAAM,UACjB,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,aAChBH,EAAM,KAAOG,EAAM,QAAU,OAAO,CAAC,IACrClC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,gBACnB,WAAYoE,EAAM,MAClB,QAASA,EAAM,OACnB,CAAC,EACD/B,EAAO,MAAM,GAIjBlE,EAAK,YAAYiG,CAAK,EAG9B,MAAO,CAAE,OAAQ/B,EAAO,MAAO,MAAO4B,EAAM,IAAK,CACrD,CACA,IAAI1W,EAAO2T,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAM4V,EAAU,SAASjC,CAAO,CAAC,CACxE,CACA,GAAG3T,EAAO2T,EAAS,CACf,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAO4V,EAAU,SAASjC,CAAO,CAAC,CACzE,CACA,IAAI3T,EAAO2T,EAAS,CAChB,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAM4V,EAAU,SAASjC,CAAO,CAAC,CACxE,CACA,GAAG3T,EAAO2T,EAAS,CACf,OAAO,KAAK,SAAS,MAAO3T,EAAO,GAAO4V,EAAU,SAASjC,CAAO,CAAC,CACzE,CACA,SAAS4G,EAAMva,EAAOwa,EAAW7G,EAAS,CACtC,OAAO,IAAI8G,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CACJ,GAAG,KAAK,KAAK,OACb,CACI,KAAAF,EACA,MAAAva,EACA,UAAAwa,EACA,QAAS5E,EAAU,SAASjC,CAAO,CACvC,CACJ,CACJ,CAAC,CACL,CACA,UAAUkD,EAAO,CACb,OAAO,IAAI4D,GAAU,CACjB,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ5D,CAAK,CACvC,CAAC,CACL,CACA,SAASlD,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,YAAYA,EAAS,CACjB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAO,OAAO,CAAC,EACf,UAAW,GACX,QAASiC,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,WAAW3T,EAAO2T,EAAS,CACvB,OAAO,KAAK,UAAU,CAClB,KAAM,aACN,MAAA3T,EACA,QAAS4V,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,UAAW,CACX,IAAIkG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,CACX,CACA,IAAI,UAAW,CACX,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,CACX,CACJ,EACAW,GAAU,OAAUxG,GAAW,CAC3B,IAAI0C,EACJ,OAAO,IAAI8D,GAAU,CACjB,OAAQ,CAAC,EACT,SAAUtD,EAAsB,UAChC,QAASR,EAAqD1C,GAAO,UAAY,MAAQ0C,IAAO,OAASA,EAAK,GAC9G,GAAGT,EAAoBjC,CAAM,CACjC,CAAC,CACL,EACA,IAAMyG,GAAN,cAAyBlE,CAAQ,CAC7B,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,EAAQA,EAAM,MAEZ,KAAK,SAASA,CAAK,IACnBpE,EAAc,QAAS,CACtC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,QACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAgE,GAAW,OAAUzG,GACV,IAAIyG,GAAW,CAClB,SAAUvD,EAAsB,WAChC,OAAyDlD,GAAO,QAAW,GAC3E,GAAGiC,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM0G,GAAN,cAAsBnE,CAAQ,CAC1B,OAAOE,EAAO,CAKV,GAJI,KAAK,KAAK,SACVA,EAAM,KAAO,IAAI,KAAKA,EAAM,IAAI,GAEjB,KAAK,SAASA,CAAK,IACnBpE,EAAc,KAAM,CACnC,IAAM+G,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAU+G,EAAI,UAClB,CAAC,EACMpE,EAEX,GAAI,MAAMyB,EAAM,KAAK,QAAQ,CAAC,EAAG,CAC7B,IAAM2C,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,YACvB,CAAC,EACMwC,EAEX,IAAMH,EAAS,IAAID,EACfF,EACJ,QAAWkC,KAAS,KAAK,KAAK,OACtBA,EAAM,OAAS,MACXH,EAAM,KAAK,QAAQ,EAAIG,EAAM,QAC7BlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASoE,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACD/B,EAAO,MAAM,GAGZ+B,EAAM,OAAS,MAChBH,EAAM,KAAK,QAAQ,EAAIG,EAAM,QAC7BlC,EAAM,KAAK,gBAAgB+B,EAAO/B,CAAG,EACrCD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASoE,EAAM,QACf,UAAW,GACX,MAAO,GACP,QAASA,EAAM,MACf,KAAM,MACV,CAAC,EACD/B,EAAO,MAAM,GAIjBlE,EAAK,YAAYiG,CAAK,EAG9B,MAAO,CACH,OAAQ/B,EAAO,MACf,MAAO,IAAI,KAAK4B,EAAM,KAAK,QAAQ,CAAC,CACxC,CACJ,CACA,UAAUG,EAAO,CACb,OAAO,IAAI8D,GAAQ,CACf,GAAG,KAAK,KACR,OAAQ,CAAC,GAAG,KAAK,KAAK,OAAQ9D,CAAK,CACvC,CAAC,CACL,CACA,IAAI+D,EAASjH,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAOiH,EAAQ,QAAQ,EACvB,QAAShF,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,IAAIkH,EAASlH,EAAS,CAClB,OAAO,KAAK,UAAU,CAClB,KAAM,MACN,MAAOkH,EAAQ,QAAQ,EACvB,QAASjF,EAAU,SAASjC,CAAO,CACvC,CAAC,CACL,CACA,IAAI,SAAU,CACV,IAAIkG,EAAM,KACV,QAAWD,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRC,IAAQ,MAAQD,EAAG,MAAQC,KAC3BA,EAAMD,EAAG,OAGrB,OAAOC,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACA,IAAI,SAAU,CACV,IAAIC,EAAM,KACV,QAAWF,KAAM,KAAK,KAAK,OACnBA,EAAG,OAAS,QACRE,IAAQ,MAAQF,EAAG,MAAQE,KAC3BA,EAAMF,EAAG,OAGrB,OAAOE,GAAO,KAAO,IAAI,KAAKA,CAAG,EAAI,IACzC,CACJ,EACAa,GAAQ,OAAU1G,GACP,IAAI0G,GAAQ,CACf,OAAQ,CAAC,EACT,OAAyD1G,GAAO,QAAW,GAC3E,SAAUkD,EAAsB,QAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM6G,GAAN,cAAwBtE,CAAQ,CAC5B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,OAAQ,CACrC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAoE,GAAU,OAAU7G,GACT,IAAI6G,GAAU,CACjB,SAAU3D,EAAsB,UAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM8G,GAAN,cAA2BvE,CAAQ,CAC/B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,UAAW,CACxC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,UACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAqE,GAAa,OAAU9G,GACZ,IAAI8G,GAAa,CACpB,SAAU5D,EAAsB,aAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM+G,GAAN,cAAsBxE,CAAQ,CAC1B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,KAAM,CACnC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAsE,GAAQ,OAAU/G,GACP,IAAI+G,GAAQ,CACf,SAAU7D,EAAsB,QAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMgH,GAAN,cAAqBzE,CAAQ,CACzB,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,KAAO,EAChB,CACA,OAAOE,EAAO,CACV,OAAOnB,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAuE,GAAO,OAAUhH,GACN,IAAIgH,GAAO,CACd,SAAU9D,EAAsB,OAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMiH,GAAN,cAAyB1E,CAAQ,CAC7B,aAAc,CACV,MAAM,GAAG,SAAS,EAElB,KAAK,SAAW,EACpB,CACA,OAAOE,EAAO,CACV,OAAOnB,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACAwE,GAAW,OAAUjH,GACV,IAAIiH,GAAW,CAClB,SAAU/D,EAAsB,WAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMkH,GAAN,cAAuB3E,CAAQ,CAC3B,OAAOE,EAAO,CACV,IAAM/B,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,CACX,CACJ,EACAkG,GAAS,OAAUlH,GACR,IAAIkH,GAAS,CAChB,SAAUhE,EAAsB,SAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMmH,GAAN,cAAsB5E,CAAQ,CAC1B,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,UAAW,CACxC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,KACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACJ,EACA0E,GAAQ,OAAUnH,GACP,IAAImH,GAAQ,CACf,SAAUjE,EAAsB,QAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMqD,GAAN,cAAuBd,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,EAAK,OAAAG,CAAA,EAAW,KAAK,oBAAoB4B,CAAK,EAChDD,EAAM,KAAK,KACjB,GAAI9B,EAAI,aAAerC,EAAc,MACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,GAAIwB,EAAI,cAAgB,KAAM,CAC1B,IAAM6C,EAAS3E,EAAI,KAAK,OAAS8B,EAAI,YAAY,MAC3C8C,EAAW5E,EAAI,KAAK,OAAS8B,EAAI,YAAY,OAC/C6C,GAAUC,KACV7E,EAAkBC,EAAK,CACnB,KAAM2E,EAAS7G,EAAa,QAAUA,EAAa,UACnD,QAAU8G,EAAW9C,EAAI,YAAY,MAAQ,OAC7C,QAAU6C,EAAS7C,EAAI,YAAY,MAAQ,OAC3C,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,YAAY,OAC7B,CAAC,EACD3B,EAAO,MAAM,GA6BrB,GA1BI2B,EAAI,YAAc,MACd9B,EAAI,KAAK,OAAS8B,EAAI,UAAU,QAChC/B,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASgE,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACD3B,EAAO,MAAM,GAGjB2B,EAAI,YAAc,MACd9B,EAAI,KAAK,OAAS8B,EAAI,UAAU,QAChC/B,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASgE,EAAI,UAAU,MACvB,KAAM,QACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,UAAU,OAC3B,CAAC,EACD3B,EAAO,MAAM,GAGjBH,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI,CAAC,GAAGA,EAAI,IAAI,EAAE,IAAI,CAACtD,EAAMzQ,IACjC6V,EAAI,KAAK,YAAY,IAAIX,GAAmBnB,EAAKtD,EAAMsD,EAAI,KAAM/T,CAAC,CAAC,CAC7E,CAAC,EAAE,KAAMya,GACCxG,EAAY,WAAWC,EAAQuG,CAAM,CAC/C,EAEL,IAAMpF,EAAS,CAAC,GAAGtB,EAAI,IAAI,EAAE,IAAI,CAACtD,EAAMzQ,IAC7B6V,EAAI,KAAK,WAAW,IAAIX,GAAmBnB,EAAKtD,EAAMsD,EAAI,KAAM/T,CAAC,CAAC,CAC5E,EACD,OAAOiU,EAAY,WAAWC,EAAQmB,CAAM,CAChD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,IACrB,CACA,IAAIwD,EAAW9F,EAAS,CACpB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOmC,EAAW,QAAS7D,EAAU,SAASjC,CAAO,CAAE,CACxE,CAAC,CACL,CACA,IAAI+F,EAAW/F,EAAS,CACpB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,UAAW,CAAE,MAAOoC,EAAW,QAAS9D,EAAU,SAASjC,CAAO,CAAE,CACxE,CAAC,CACL,CACA,OAAOgG,EAAKhG,EAAS,CACjB,OAAO,IAAI2D,GAAS,CAChB,GAAG,KAAK,KACR,YAAa,CAAE,MAAOqC,EAAK,QAAS/D,EAAU,SAASjC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACA2D,GAAS,OAAS,CAACgE,EAAQrH,IAChB,IAAIqD,GAAS,CAChB,KAAMgE,EACN,UAAW,KACX,UAAW,KACX,YAAa,KACb,SAAUnE,EAAsB,SAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,SAAAsH,GAAwBD,EAAQ,CAC5B,GAAIA,aAAkBE,EAAW,CAC7B,IAAMC,EAAW,CAAC,EAClB,QAAW9J,KAAO2J,EAAO,MAAO,CAC5B,IAAMI,EAAcJ,EAAO,MAAM3J,CAAA,EACjC8J,EAAS9J,CAAA,EAAOyF,GAAY,OAAOmE,GAAeG,CAAW,CAAC,EAElE,OAAO,IAAIF,EAAU,CACjB,GAAGF,EAAO,KACV,MAAO,IAAMG,CACjB,CAAC,MACL,QACSH,aAAkBhE,GAChB,IAAIA,GAAS,CAChB,GAAGgE,EAAO,KACV,KAAMC,GAAeD,EAAO,OAAO,CACvC,CAAC,EAEIA,aAAkBlE,GAChBA,GAAY,OAAOmE,GAAeD,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkBjE,GAChBA,GAAY,OAAOkE,GAAeD,EAAO,OAAO,CAAC,CAAC,EAEpDA,aAAkBK,GAChBA,GAAS,OAAOL,EAAO,MAAM,IAAKjK,GAASkK,GAAelK,CAAI,CAAC,CAAC,EAGhEiK,CAEf,CACA,IAAME,EAAN,cAAwBhF,CAAQ,CAC5B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,QAAU,KAKf,KAAK,UAAY,KAAK,YAqCtB,KAAK,QAAU,KAAK,MACxB,CACA,YAAa,CACT,GAAI,KAAK,UAAY,KACjB,OAAO,KAAK,QAChB,IAAMoF,EAAQ,KAAK,KAAK,MAAM,EACxBlK,EAAOd,EAAK,WAAWgL,CAAK,EAClC,OAAQ,KAAK,QAAU,CAAE,MAAAA,EAAO,KAAAlK,CAAK,CACzC,CACA,OAAOgF,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,OAAQ,CACrC,IAAM+G,EAAM,KAAK,gBAAgB3C,CAAK,EACtC,OAAAhC,EAAkB2E,EAAK,CACnB,KAAM5G,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAU+G,EAAI,UAClB,CAAC,EACMpE,EAEX,GAAM,CAAE,OAAAH,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAChD,CAAE,MAAAkF,EAAO,KAAMC,CAAA,EAAc,KAAK,WAAW,EAC7CC,EAAY,CAAC,EACnB,GAAI,EAAE,KAAK,KAAK,oBAAoBX,IAChC,KAAK,KAAK,cAAgB,SAC1B,QAAWxJ,KAAOgD,EAAI,KACbkH,EAAU,SAASlK,CAAG,GACvBmK,EAAU,KAAKnK,CAAG,EAI9B,IAAMuD,EAAQ,CAAC,EACf,QAAWvD,KAAOkK,EAAW,CACzB,IAAME,EAAeH,EAAMjK,CAAA,EACrB3R,EAAQ2U,EAAI,KAAKhD,CAAA,EACvBuD,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOvD,CAAI,EACnC,MAAOoK,EAAa,OAAO,IAAIjG,GAAmBnB,EAAK3U,EAAO2U,EAAI,KAAMhD,CAAG,CAAC,EAC5E,UAAWA,KAAOgD,EAAI,IAC1B,CAAC,EAEL,GAAI,KAAK,KAAK,oBAAoBwG,GAAU,CACxC,IAAMa,EAAc,KAAK,KAAK,YAC9B,GAAIA,IAAgB,cAChB,QAAWrK,KAAOmK,EACd5G,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOvD,CAAI,EACnC,MAAO,CAAE,OAAQ,QAAS,MAAOgD,EAAI,KAAKhD,CAAA,CAAK,CACnD,CAAC,UAGAqK,IAAgB,SACjBF,EAAU,OAAS,IACnBpH,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,kBACnB,KAAMqJ,CACV,CAAC,EACDhH,EAAO,MAAM,WAGZkH,IAAgB,QAErB,MAAM,IAAI,MAAM,sDAAsD,MAGzE,CAED,IAAMC,EAAW,KAAK,KAAK,SAC3B,QAAWtK,KAAOmK,EAAW,CACzB,IAAM9b,EAAQ2U,EAAI,KAAKhD,CAAA,EACvBuD,EAAM,KAAK,CACP,IAAK,CAAE,OAAQ,QAAS,MAAOvD,CAAI,EACnC,MAAOsK,EAAS,OAAO,IAAInG,GAAmBnB,EAAK3U,EAAO2U,EAAI,KAAMhD,CAAG,CACvE,EACA,UAAWA,KAAOgD,EAAI,IAC1B,CAAC,GAGT,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAQ,EAClB,KAAK,SAAY,CAClB,IAAMQ,EAAY,CAAC,EACnB,QAAWC,KAAQF,EAAO,CACtB,IAAMvD,EAAM,MAAMyD,EAAK,IACvBD,EAAU,KAAK,CACX,IAAAxD,EACA,MAAO,MAAMyD,EAAK,MAClB,UAAWA,EAAK,SACpB,CAAC,EAEL,OAAOD,CACX,CAAC,EACI,KAAMA,GACAN,EAAY,gBAAgBC,EAAQK,CAAS,CACvD,EAGMN,EAAY,gBAAgBC,EAAQI,CAAK,CAExD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,MAAM,CAC3B,CACA,OAAOvB,EAAS,CACZ,OAAAiC,EAAU,SACH,IAAI4F,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,SACb,GAAI7H,IAAY,OACV,CACE,SAAU,CAACT,EAAOyB,IAAQ,CACtB,IAAIgC,EAAIuF,EAAIC,EAAIC,EAChB,IAAMC,GAAgBF,GAAMD,GAAMvF,EAAK,KAAK,MAAM,YAAc,MAAQuF,IAAO,OAAS,OAASA,EAAG,KAAKvF,EAAIzD,EAAOyB,CAAG,EAAE,WAAa,MAAQwH,IAAO,OAASA,EAAKxH,EAAI,aACvK,OAAIzB,EAAM,OAAS,oBACR,CACH,SAAUkJ,EAAKxG,EAAU,SAASjC,CAAO,EAAE,WAAa,MAAQyI,IAAO,OAASA,EAAKC,CACzF,EACG,CACH,QAASA,CACb,CACJ,CACJ,EACE,CAAC,CACX,CAAC,CACL,CACA,OAAQ,CACJ,OAAO,IAAIb,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,OACjB,CAAC,CACL,CACA,aAAc,CACV,OAAO,IAAIA,EAAU,CACjB,GAAG,KAAK,KACR,YAAa,aACjB,CAAC,CACL,CAkBA,OAAOc,EAAc,CACjB,OAAO,IAAId,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAGc,CACP,EACJ,CAAC,CACL,CAMA,MAAMC,EAAS,CAUX,OATe,IAAIf,EAAU,CACzB,YAAae,EAAQ,KAAK,YAC1B,SAAUA,EAAQ,KAAK,SACvB,MAAO,KAAO,CACV,GAAG,KAAK,KAAK,MAAM,EACnB,GAAGA,EAAQ,KAAK,MAAM,CAC1B,GACA,SAAUpF,EAAsB,SACpC,CAAC,CAEL,CAoCA,OAAOxF,EAAK2J,EAAQ,CAChB,OAAO,KAAK,QAAQ,CAAE,CAAC3J,CAAA,EAAM2J,CAAO,CAAC,CACzC,CAsBA,SAAS9a,EAAO,CACZ,OAAO,IAAIgb,EAAU,CACjB,GAAG,KAAK,KACR,SAAUhb,CACd,CAAC,CACL,CACA,KAAKgc,EAAM,CACP,IAAMZ,EAAQ,CAAC,EACf,OAAAhL,EAAK,WAAW4L,CAAI,EAAE,QAAS7K,GAAQ,CAC/B6K,EAAK7K,CAAA,GAAQ,KAAK,MAAMA,CAAA,IACxBiK,EAAMjK,CAAA,EAAO,KAAK,MAAMA,CAAA,EAEhC,CAAC,EACM,IAAI6J,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACjB,CAAC,CACL,CACA,KAAKY,EAAM,CACP,IAAMZ,EAAQ,CAAC,EACf,OAAAhL,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACpC6K,EAAK7K,CAAA,IACNiK,EAAMjK,CAAA,EAAO,KAAK,MAAMA,CAAA,EAEhC,CAAC,EACM,IAAI6J,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMI,CACjB,CAAC,CACL,CAIA,aAAc,CACV,OAAOL,GAAe,IAAI,CAC9B,CACA,QAAQiB,EAAM,CACV,IAAMf,EAAW,CAAC,EAClB,OAAA7K,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACzC,IAAM+J,EAAc,KAAK,MAAM/J,CAAA,EAC3B6K,GAAQ,CAACA,EAAK7K,CAAA,EACd8J,EAAS9J,CAAA,EAAO+J,EAGhBD,EAAS9J,CAAA,EAAO+J,EAAY,SAAS,CAE7C,CAAC,EACM,IAAIF,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACjB,CAAC,CACL,CACA,SAASe,EAAM,CACX,IAAMf,EAAW,CAAC,EAClB,OAAA7K,EAAK,WAAW,KAAK,KAAK,EAAE,QAASe,GAAQ,CACzC,GAAI6K,GAAQ,CAACA,EAAK7K,CAAA,EACd8J,EAAS9J,CAAA,EAAO,KAAK,MAAMA,CAAA,MAE1B,CAED,IAAI8K,EADgB,KAAK,MAAM9K,CAAA,EAE/B,KAAO8K,aAAoBrF,IACvBqF,EAAWA,EAAS,KAAK,UAE7BhB,EAAS9J,CAAA,EAAO8K,EAExB,CAAC,EACM,IAAIjB,EAAU,CACjB,GAAG,KAAK,KACR,MAAO,IAAMC,CACjB,CAAC,CACL,CACA,OAAQ,CACJ,OAAOiB,GAAc9L,EAAK,WAAW,KAAK,KAAK,CAAC,CACpD,CACJ,EACA4K,EAAU,OAAS,CAACI,EAAO3H,IAChB,IAAIuH,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,QACb,SAAUT,GAAS,OAAO,EAC1B,SAAUhE,EAAsB,UAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAELuH,EAAU,aAAe,CAACI,EAAO3H,IACtB,IAAIuH,EAAU,CACjB,MAAO,IAAMI,EACb,YAAa,SACb,SAAUT,GAAS,OAAO,EAC1B,SAAUhE,EAAsB,UAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAELuH,EAAU,WAAa,CAACI,EAAO3H,IACpB,IAAIuH,EAAU,CACjB,MAAAI,EACA,YAAa,QACb,SAAUT,GAAS,OAAO,EAC1B,SAAUhE,EAAsB,UAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMwD,GAAN,cAAuBjB,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACxC8C,EAAU,KAAK,KAAK,QAC1B,SAAAmD,EAAuB5H,EAAS,CAE5B,QAAWkB,KAAUlB,EACjB,GAAIkB,EAAO,OAAO,SAAW,QACzB,OAAOA,EAAO,OAGtB,QAAWA,KAAUlB,EACjB,GAAIkB,EAAO,OAAO,SAAW,QAEzB,OAAAtB,EAAI,OAAO,OAAO,KAAK,GAAGsB,EAAO,IAAI,OAAO,MAAM,EAC3CA,EAAO,OAItB,IAAM2G,EAAc7H,EAAQ,IAAKkB,GAAW,IAAItD,EAASsD,EAAO,IAAI,OAAO,MAAM,CAAC,EAClF,OAAAvB,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,cACnB,YAAAmK,CACJ,CAAC,EACM3H,CACX,CACA,GAAIN,EAAI,OAAO,MACX,OAAO,QAAQ,IAAI6E,EAAQ,IAAI,MAAOhC,GAAW,CAC7C,IAAMqF,EAAW,CACb,GAAGlI,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACA,MAAO,CACH,OAAQ,MAAM6C,EAAO,YAAY,CAC7B,KAAM7C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQkI,CACZ,CAAC,EACD,IAAKA,CACT,CACJ,CAAC,CAAC,EAAE,KAAKF,CAAa,EAErB,CACD,IAAIG,EACElK,EAAS,CAAC,EAChB,QAAW4E,KAAUgC,EAAS,CAC1B,IAAMqD,EAAW,CACb,GAAGlI,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,EACA,OAAQ,IACZ,EACMsB,EAASuB,EAAO,WAAW,CAC7B,KAAM7C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQkI,CACZ,CAAC,EACD,GAAI5G,EAAO,SAAW,QAClB,OAAOA,EAEFA,EAAO,SAAW,SAAW,CAAC6G,IACnCA,EAAQ,CAAE,OAAA7G,EAAQ,IAAK4G,CAAS,GAEhCA,EAAS,OAAO,OAAO,QACvBjK,EAAO,KAAKiK,EAAS,OAAO,MAAM,EAG1C,GAAIC,EACA,OAAAnI,EAAI,OAAO,OAAO,KAAK,GAAGmI,EAAM,IAAI,OAAO,MAAM,EAC1CA,EAAM,OAEjB,IAAMF,EAAchK,EAAO,IAAKmK,GAAW,IAAIpK,EAASoK,CAAM,CAAC,EAC/D,OAAArI,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,cACnB,YAAAmK,CACJ,CAAC,EACM3H,EAEf,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACJ,EACAwC,GAAS,OAAS,CAACuF,EAAO/I,IACf,IAAIwD,GAAS,CAChB,QAASuF,EACT,SAAU7F,EAAsB,SAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EASL,IAAMgJ,GAAoBC,GAClBA,aAAgBC,GACTF,GAAiBC,EAAK,MAAM,EAE9BA,aAAgBhG,GACd+F,GAAiBC,EAAK,UAAU,CAAC,EAEnCA,aAAgBE,GACd,CAACF,EAAK,KAAK,EAEbA,aAAgBG,GACdH,EAAK,QAEPA,aAAgBI,GAEd,OAAO,KAAKJ,EAAK,IAAI,EAEvBA,aAAgBpF,GACdmF,GAAiBC,EAAK,KAAK,SAAS,EAEtCA,aAAgBnC,GACd,CAAC,MAAS,EAEZmC,aAAgBlC,GACd,CAAC,IAAI,EAGL,KAGTuC,GAAN,cAAoC/G,CAAQ,CACxC,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAC9C,GAAI/B,EAAI,aAAerC,EAAc,OACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,IAAMuI,EAAgB,KAAK,cACrBC,EAAqB9I,EAAI,KAAK6I,CAAA,EAC9BhG,EAAS,KAAK,WAAW,IAAIiG,CAAkB,EACrD,OAAKjG,EAQD7C,EAAI,OAAO,MACJ6C,EAAO,YAAY,CACtB,KAAM7C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAGM6C,EAAO,WAAW,CACrB,KAAM7C,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,GAnBDD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,4BACnB,QAAS,MAAM,KAAK,KAAK,WAAW,KAAK,CAAC,EAC1C,KAAM,CAAC+K,CAAa,CACxB,CAAC,EACMvI,EAgBf,CACA,IAAI,eAAgB,CAChB,OAAO,KAAK,KAAK,aACrB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,YAAa,CACb,OAAO,KAAK,KAAK,UACrB,CASA,OAAO,OAAOuI,EAAehE,EAASvF,EAAQ,CAE1C,IAAMyJ,EAAa,IAAI,IAEvB,QAAWR,KAAQ1D,EAAS,CACxB,IAAMmE,EAAsBV,GAAiBC,EAAK,MAAMM,CAAA,CAAc,EACtE,GAAI,CAACG,EACD,MAAM,IAAI,MAAM,mCAAmCH,oDAAgE,EAEvH,QAAWxd,KAAS2d,EAAqB,CACrC,GAAID,EAAW,IAAI1d,CAAK,EACpB,MAAM,IAAI,MAAM,0BAA0B,OAAOwd,CAAa,yBAAyB,OAAOxd,CAAK,GAAG,EAE1G0d,EAAW,IAAI1d,EAAOkd,CAAI,GAGlC,OAAO,IAAIK,GAAsB,CAC7B,SAAUpG,EAAsB,sBAChC,cAAAqG,EACA,QAAAhE,EACA,WAAAkE,EACA,GAAGxH,EAAoBjC,CAAM,CACjC,CAAC,CACL,CACJ,EACA,SAAA2J,GAAqBvb,EAAGwb,EAAG,CACvB,IAAMC,EAAQvL,GAAclQ,CAAC,EACvB0b,EAAQxL,GAAcsL,CAAC,EAC7B,GAAIxb,IAAMwb,EACN,MAAO,CAAE,MAAO,GAAM,KAAMxb,CAAE,EAClC,GACSyb,IAAUxL,EAAc,QAAUyL,IAAUzL,EAAc,OAAQ,CACvE,IAAM0L,EAAQpN,EAAK,WAAWiN,CAAC,EACzBI,EAAarN,EACd,WAAWvO,CAAC,EACZ,OAAQsP,GAAQqM,EAAM,QAAQrM,CAAG,IAAM,EAAE,EACxCuM,EAAS,CAAE,GAAG7b,EAAG,GAAGwb,CAAE,EAC5B,QAAWlM,KAAOsM,EAAY,CAC1B,IAAME,EAAcP,GAAYvb,EAAEsP,CAAA,EAAMkM,EAAElM,CAAA,CAAI,EAC9C,GAAI,CAACwM,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BD,EAAOvM,CAAA,EAAOwM,EAAY,KAE9B,MAAO,CAAE,MAAO,GAAM,KAAMD,CAAO,UAE9BJ,IAAUxL,EAAc,OAASyL,IAAUzL,EAAc,MAAO,CACrE,GAAIjQ,EAAE,SAAWwb,EAAE,OACf,MAAO,CAAE,MAAO,EAAM,EAE1B,IAAMO,EAAW,CAAC,EAClB,QAAS5d,EAAQ,EAAGA,EAAQ6B,EAAE,OAAQ7B,IAAS,CAC3C,IAAM6d,EAAQhc,EAAE7B,CAAA,EACV8d,EAAQT,EAAErd,CAAA,EACV2d,EAAcP,GAAYS,EAAOC,CAAK,EAC5C,GAAI,CAACH,EAAY,MACb,MAAO,CAAE,MAAO,EAAM,EAE1BC,EAAS,KAAKD,EAAY,IAAI,EAElC,MAAO,CAAE,MAAO,GAAM,KAAMC,CAAS,MACzC,QACSN,IAAUxL,EAAc,MAC7ByL,IAAUzL,EAAc,MACxB,CAACjQ,GAAM,CAACwb,EACD,CAAE,MAAO,GAAM,KAAMxb,CAAE,EAGvB,CAAE,MAAO,EAAM,CAE9B,CACA,IAAMsV,GAAN,cAA8BnB,CAAQ,CAClC,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAChD6H,EAAe,CAACC,EAAYC,IAAgB,CAC9C,GAAIjJ,GAAUgJ,CAAU,GAAKhJ,GAAUiJ,CAAW,EAC9C,OAAOxJ,EAEX,IAAMyJ,EAASd,GAAYY,EAAW,MAAOC,EAAY,KAAK,EAC9D,OAAKC,EAAO,QAMRjJ,GAAQ+I,CAAU,GAAK/I,GAAQgJ,CAAW,IAC1C3J,EAAO,MAAM,EAEV,CAAE,OAAQA,EAAO,MAAO,MAAO4J,EAAO,IAAK,IAR9ChK,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,0BACvB,CAAC,EACMwC,EAMf,EACA,OAAIN,EAAI,OAAO,MACJ,QAAQ,IAAI,CACf,KAAK,KAAK,KAAK,YAAY,CACvB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,KAAK,KAAK,MAAM,YAAY,CACxB,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CAAC,EAAE,KAAK,CAAC,CAACgK,EAAMC,CAAA,IAAWL,EAAaI,EAAMC,CAAK,CAAC,EAG7CL,EAAa,KAAK,KAAK,KAAK,WAAW,CAC1C,KAAM5J,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EAAG,KAAK,KAAK,MAAM,WAAW,CAC3B,KAAMA,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,CAAC,CAEV,CACJ,EACAgD,GAAgB,OAAS,CAACgH,EAAMC,EAAO3K,IAC5B,IAAI0D,GAAgB,CACvB,KAAAgH,EACA,MAAAC,EACA,SAAUzH,EAAsB,gBAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM0H,GAAN,cAAuBnF,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACtD,GAAI/B,EAAI,aAAerC,EAAc,MACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,MACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,GAAIN,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,OAClC,OAAAD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACMwC,EAGP,CADS,KAAK,KAAK,MACVN,EAAI,KAAK,OAAS,KAAK,KAAK,MAAM,SAC3CD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAAS,KAAK,KAAK,MAAM,OACzB,UAAW,GACX,MAAO,GACP,KAAM,OACV,CAAC,EACDqC,EAAO,MAAM,GAEjB,IAAM3D,EAAQ,CAAC,GAAGwD,EAAI,IAAI,EACrB,IAAI,CAACtD,EAAMwN,IAAc,CAC1B,IAAMvD,EAAS,KAAK,KAAK,MAAMuD,CAAA,GAAc,KAAK,KAAK,KACvD,OAAKvD,EAEEA,EAAO,OAAO,IAAIxF,GAAmBnB,EAAKtD,EAAMsD,EAAI,KAAMkK,CAAS,CAAC,EADhE,IAEf,CAAC,EACI,OAAQjK,GAAM,CAAC,CAACA,CAAC,EACtB,OAAID,EAAI,OAAO,MACJ,QAAQ,IAAIxD,CAAK,EAAE,KAAM4D,GACrBF,EAAY,WAAWC,EAAQC,CAAO,CAChD,EAGMF,EAAY,WAAWC,EAAQ3D,CAAK,CAEnD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACA,KAAK2N,EAAM,CACP,OAAO,IAAInD,GAAS,CAChB,GAAG,KAAK,KACR,KAAAmD,CACJ,CAAC,CACL,CACJ,EACAnD,GAAS,OAAS,CAACoD,EAAS9K,IAAW,CACnC,GAAI,CAAC,MAAM,QAAQ8K,CAAO,EACtB,MAAM,IAAI,MAAM,uDAAuD,EAE3E,OAAO,IAAIpD,GAAS,CAChB,MAAOoD,EACP,SAAU5H,EAAsB,SAChC,KAAM,KACN,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,CACL,EACA,IAAM+K,GAAN,cAAwBxI,CAAQ,CAC5B,IAAI,WAAY,CACZ,OAAO,KAAK,KAAK,OACrB,CACA,IAAI,aAAc,CACd,OAAO,KAAK,KAAK,SACrB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACtD,GAAI/B,EAAI,aAAerC,EAAc,OACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,OACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,IAAMC,EAAQ,CAAC,EACT+J,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UAC5B,QAAWvN,KAAOgD,EAAI,KAClBO,EAAM,KAAK,CACP,IAAK+J,EAAQ,OAAO,IAAInJ,GAAmBnB,EAAKhD,EAAKgD,EAAI,KAAMhD,CAAG,CAAC,EACnE,MAAOuN,EAAU,OAAO,IAAIpJ,GAAmBnB,EAAKA,EAAI,KAAKhD,CAAA,EAAMgD,EAAI,KAAMhD,CAAG,CAAC,CACrF,CAAC,EAEL,OAAIgD,EAAI,OAAO,MACJE,EAAY,iBAAiBC,EAAQI,CAAK,EAG1CL,EAAY,gBAAgBC,EAAQI,CAAK,CAExD,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,SACrB,CACA,OAAO,OAAO9C,EAAOC,EAAQ8M,EAAO,CAChC,OAAI9M,aAAkBmE,EACX,IAAIwI,GAAU,CACjB,QAAS5M,EACT,UAAWC,EACX,SAAU8E,EAAsB,UAChC,GAAGjB,EAAoBiJ,CAAK,CAChC,CAAC,EAEE,IAAIH,GAAU,CACjB,QAAS9F,GAAU,OAAO,EAC1B,UAAW9G,EACX,SAAU+E,EAAsB,UAChC,GAAGjB,EAAoB7D,CAAM,CACjC,CAAC,CACL,CACJ,EACM+M,GAAN,cAAqB5I,CAAQ,CACzB,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACtD,GAAI/B,EAAI,aAAerC,EAAc,IACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,IAAMgK,EAAU,KAAK,KAAK,QACpBC,EAAY,KAAK,KAAK,UACtBhK,EAAQ,CAAC,GAAGP,EAAI,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAChD,EAAK3R,CAAA,EAAQQ,KAC9C,CACH,IAAKye,EAAQ,OAAO,IAAInJ,GAAmBnB,EAAKhD,EAAKgD,EAAI,KAAM,CAACnU,EAAO,KAAK,CAAC,CAAC,EAC9E,MAAO0e,EAAU,OAAO,IAAIpJ,GAAmBnB,EAAK3U,EAAO2U,EAAI,KAAM,CAACnU,EAAO,OAAO,CAAC,CAAC,CAC1F,EACH,EACD,GAAImU,EAAI,OAAO,MAAO,CAClB,IAAM0K,EAAW,IAAI,IACrB,OAAO,QAAQ,QAAQ,EAAE,KAAK,SAAY,CACtC,QAAWjK,KAAQF,EAAO,CACtB,IAAMvD,EAAM,MAAMyD,EAAK,IACjBpV,EAAQ,MAAMoV,EAAK,MACzB,GAAIzD,EAAI,SAAW,WAAa3R,EAAM,SAAW,UAC7C,OAAOiV,GAEPtD,EAAI,SAAW,SAAW3R,EAAM,SAAW,UAC3C8U,EAAO,MAAM,EAEjBuK,EAAS,IAAI1N,EAAI,MAAO3R,EAAM,KAAK,EAEvC,MAAO,CAAE,OAAQ8U,EAAO,MAAO,MAAOuK,CAAS,CACnD,CAAC,MAEA,CACD,IAAMA,EAAW,IAAI,IACrB,QAAWjK,KAAQF,EAAO,CACtB,IAAMvD,EAAMyD,EAAK,IACXpV,EAAQoV,EAAK,MACnB,GAAIzD,EAAI,SAAW,WAAa3R,EAAM,SAAW,UAC7C,OAAOiV,GAEPtD,EAAI,SAAW,SAAW3R,EAAM,SAAW,UAC3C8U,EAAO,MAAM,EAEjBuK,EAAS,IAAI1N,EAAI,MAAO3R,EAAM,KAAK,EAEvC,MAAO,CAAE,OAAQ8U,EAAO,MAAO,MAAOuK,CAAS,EAEvD,CACJ,EACAD,GAAO,OAAS,CAACH,EAASC,EAAWjL,IAC1B,IAAImL,GAAO,CACd,UAAAF,EACA,QAAAD,EACA,SAAU9H,EAAsB,OAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMqL,GAAN,cAAqB9I,CAAQ,CACzB,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACtD,GAAI/B,EAAI,aAAerC,EAAc,IACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,IAAMwB,EAAM,KAAK,KACbA,EAAI,UAAY,MACZ9B,EAAI,KAAK,KAAO8B,EAAI,QAAQ,QAC5B/B,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,UACnB,QAASgE,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACD3B,EAAO,MAAM,GAGjB2B,EAAI,UAAY,MACZ9B,EAAI,KAAK,KAAO8B,EAAI,QAAQ,QAC5B/B,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,QACnB,QAASgE,EAAI,QAAQ,MACrB,KAAM,MACN,UAAW,GACX,MAAO,GACP,QAASA,EAAI,QAAQ,OACzB,CAAC,EACD3B,EAAO,MAAM,GAGrB,IAAMoK,EAAY,KAAK,KAAK,UAC5B,SAAAK,EAAqBC,EAAU,CAC3B,IAAMC,EAAY,IAAI,IACtB,QAAWC,KAAWF,EAAU,CAC5B,GAAIE,EAAQ,SAAW,UACnB,OAAOzK,EACPyK,EAAQ,SAAW,SACnB5K,EAAO,MAAM,EACjB2K,EAAU,IAAIC,EAAQ,KAAK,EAE/B,MAAO,CAAE,OAAQ5K,EAAO,MAAO,MAAO2K,CAAU,CACpD,CACA,IAAME,EAAW,CAAC,GAAGhL,EAAI,KAAK,OAAO,CAAC,EAAE,IAAI,CAACtD,EAAMzQ,IAAMse,EAAU,OAAO,IAAIpJ,GAAmBnB,EAAKtD,EAAMsD,EAAI,KAAM/T,CAAC,CAAC,CAAC,EACzH,OAAI+T,EAAI,OAAO,MACJ,QAAQ,IAAIgL,CAAQ,EAAE,KAAMH,GAAaD,EAAYC,CAAQ,CAAC,EAG9DD,EAAYI,CAAQ,CAEnC,CACA,IAAIC,EAASjM,EAAS,CAClB,OAAO,IAAI2L,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOM,EAAS,QAAShK,EAAU,SAASjC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,IAAIkM,EAASlM,EAAS,CAClB,OAAO,IAAI2L,GAAO,CACd,GAAG,KAAK,KACR,QAAS,CAAE,MAAOO,EAAS,QAASjK,EAAU,SAASjC,CAAO,CAAE,CACpE,CAAC,CACL,CACA,KAAKmM,EAAMnM,EAAS,CAChB,OAAO,KAAK,IAAImM,EAAMnM,CAAO,EAAE,IAAImM,EAAMnM,CAAO,CACpD,CACA,SAASA,EAAS,CACd,OAAO,KAAK,IAAI,EAAGA,CAAO,CAC9B,CACJ,EACA2L,GAAO,OAAS,CAACJ,EAAWjL,IACjB,IAAIqL,GAAO,CACd,UAAAJ,EACA,QAAS,KACT,QAAS,KACT,SAAU/H,EAAsB,OAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM8L,GAAN,cAA0BvJ,CAAQ,CAC9B,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,KAAK,SACzB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAC9C,GAAI/B,EAAI,aAAerC,EAAc,SACjC,OAAAoC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,SACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,SAAA+K,EAAuBlH,EAAMzF,EAAO,CAChC,OAAOW,GAAU,CACb,KAAM8E,EACN,KAAMnE,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJZ,GAAY,EACZN,EACJ,EAAE,OAAQmB,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMnC,EAAa,kBACnB,eAAgBY,CACpB,CACJ,CAAC,CACL,CACA,SAAA4M,EAA0BC,EAAS7M,EAAO,CACtC,OAAOW,GAAU,CACb,KAAMkM,EACN,KAAMvL,EAAI,KACV,UAAW,CACPA,EAAI,OAAO,mBACXA,EAAI,eACJZ,GAAY,EACZN,EACJ,EAAE,OAAQmB,GAAM,CAAC,CAACA,CAAC,EACnB,UAAW,CACP,KAAMnC,EAAa,oBACnB,gBAAiBY,CACrB,CACJ,CAAC,CACL,CACA,IAAMY,EAAS,CAAE,SAAUU,EAAI,OAAO,kBAAmB,EACnDwL,EAAKxL,EAAI,KACf,OAAI,KAAK,KAAK,mBAAmB4C,GACtBhC,EAAG,SAAUuD,IAAS,CACzB,IAAMzF,EAAQ,IAAIV,EAAS,CAAC,CAAC,EACvByN,EAAa,MAAM,KAAK,KAAK,KAC9B,WAAWtH,EAAM7E,CAAM,EACvB,MAAO9S,GAAM,CACd,MAAAkS,EAAM,SAAS2M,EAAclH,EAAM3X,CAAC,CAAC,EAC/BkS,CACV,CAAC,EACK4C,EAAS,MAAMkK,EAAG,GAAGC,CAAU,EAOrC,OANsB,MAAM,KAAK,KAAK,QAAQ,KAAK,KAC9C,WAAWnK,EAAQhC,CAAM,EACzB,MAAO9S,GAAM,CACd,MAAAkS,EAAM,SAAS4M,EAAiBhK,EAAQ9U,CAAC,CAAC,EACpCkS,CACV,CAAC,CAEL,CAAC,EAGMkC,EAAG,IAAIuD,IAAS,CACnB,IAAMsH,EAAa,KAAK,KAAK,KAAK,UAAUtH,EAAM7E,CAAM,EACxD,GAAI,CAACmM,EAAW,QACZ,MAAM,IAAIzN,EAAS,CAACqN,EAAclH,EAAMsH,EAAW,KAAK,CAAC,CAAC,EAE9D,IAAMnK,EAASkK,EAAG,GAAGC,EAAW,IAAI,EAC9BC,EAAgB,KAAK,KAAK,QAAQ,UAAUpK,EAAQhC,CAAM,EAChE,GAAI,CAACoM,EAAc,QACf,MAAM,IAAI1N,EAAS,CAACsN,EAAiBhK,EAAQoK,EAAc,KAAK,CAAC,CAAC,EAEtE,OAAOA,EAAc,IACzB,CAAC,CAET,CACA,YAAa,CACT,OAAO,KAAK,KAAK,IACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OACrB,CACA,QAAQlP,EAAO,CACX,OAAO,IAAI4O,GAAY,CACnB,GAAG,KAAK,KACR,KAAMpE,GAAS,OAAOxK,CAAK,EAAE,KAAK+J,GAAW,OAAO,CAAC,CACzD,CAAC,CACL,CACA,QAAQoF,EAAY,CAChB,OAAO,IAAIP,GAAY,CACnB,GAAG,KAAK,KACR,QAASO,CACb,CAAC,CACL,CACA,UAAUC,EAAM,CAEZ,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,gBAAgBA,EAAM,CAElB,OADsB,KAAK,MAAMA,CAAI,CAEzC,CACA,OAAO,OAAOzH,EAAMoH,EAASjM,EAAQ,CACjC,OAAO,IAAI8L,GAAY,CACnB,KAAOjH,GAED6C,GAAS,OAAO,CAAC,CAAC,EAAE,KAAKT,GAAW,OAAO,CAAC,EAClD,QAASgF,GAAWhF,GAAW,OAAO,EACtC,SAAU/D,EAAsB,YAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,CACL,CACJ,EACMkJ,GAAN,cAAsB3G,CAAQ,CAC1B,IAAI,QAAS,CACT,OAAO,KAAK,KAAK,OAAO,CAC5B,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAE9C,OADmB,KAAK,KAAK,OAAO,EAClB,OAAO,CAAE,KAAM/B,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,CAC5E,CACJ,EACAwI,GAAQ,OAAS,CAACqD,EAAQvM,IACf,IAAIkJ,GAAQ,CACf,OAAAqD,EACA,SAAUrJ,EAAsB,QAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMmJ,GAAN,cAAyB5G,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAIA,EAAM,OAAS,KAAK,KAAK,MAAO,CAChC,IAAM/B,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMlC,EAAa,gBACnB,SAAU,KAAK,KAAK,KACxB,CAAC,EACMwC,EAEX,MAAO,CAAE,OAAQ,QAAS,MAAOyB,EAAM,IAAK,CAChD,CACA,IAAI,OAAQ,CACR,OAAO,KAAK,KAAK,KACrB,CACJ,EACA0G,GAAW,OAAS,CAACpd,EAAOiU,IACjB,IAAImJ,GAAW,CAClB,MAAApd,EACA,SAAUmX,EAAsB,WAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,SAAAyI,GAAuB+D,EAAQxM,EAAQ,CACnC,OAAO,IAAIoJ,GAAQ,CACf,OAAAoD,EACA,SAAUtJ,EAAsB,QAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,CACL,CACA,IAAMoJ,GAAN,cAAsB7G,CAAQ,CAC1B,OAAOE,EAAO,CACV,GAAI,OAAOA,EAAM,MAAS,SAAU,CAChC,IAAM/B,EAAM,KAAK,gBAAgB+B,CAAK,EAChCgK,EAAiB,KAAK,KAAK,OACjC,OAAAhM,EAAkBC,EAAK,CACnB,SAAU/D,EAAK,WAAW8P,CAAc,EACxC,SAAU/L,EAAI,WACd,KAAMlC,EAAa,YACvB,CAAC,EACMwC,EAEX,GAAI,KAAK,KAAK,OAAO,QAAQyB,EAAM,IAAI,IAAM,GAAI,CAC7C,IAAM/B,EAAM,KAAK,gBAAgB+B,CAAK,EAChCgK,EAAiB,KAAK,KAAK,OACjC,OAAAhM,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMlC,EAAa,mBACnB,QAASiO,CACb,CAAC,EACMzL,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACA,IAAI,SAAU,CACV,OAAO,KAAK,KAAK,MACrB,CACA,IAAI,MAAO,CACP,IAAMiK,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAA,EAAOA,EAEtB,OAAO6P,CACX,CACA,IAAI,QAAS,CACT,IAAMA,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAA,EAAOA,EAEtB,OAAO6P,CACX,CACA,IAAI,MAAO,CACP,IAAMA,EAAa,CAAC,EACpB,QAAW7P,KAAO,KAAK,KAAK,OACxB6P,EAAW7P,CAAA,EAAOA,EAEtB,OAAO6P,CACX,CACA,QAAQF,EAAQ,CACZ,OAAOpD,GAAQ,OAAOoD,CAAM,CAChC,CACA,QAAQA,EAAQ,CACZ,OAAOpD,GAAQ,OAAO,KAAK,QAAQ,OAAQuD,GAAQ,CAACH,EAAO,SAASG,CAAG,CAAC,CAAC,CAC7E,CACJ,EACAvD,GAAQ,OAASX,GACjB,IAAMY,GAAN,cAA4B9G,CAAQ,CAChC,OAAOE,EAAO,CACV,IAAMmK,EAAmBjQ,EAAK,mBAAmB,KAAK,KAAK,MAAM,EAC3D+D,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,GAAI/B,EAAI,aAAerC,EAAc,QACjCqC,EAAI,aAAerC,EAAc,OAAQ,CACzC,IAAMoO,EAAiB9P,EAAK,aAAaiQ,CAAgB,EACzD,OAAAnM,EAAkBC,EAAK,CACnB,SAAU/D,EAAK,WAAW8P,CAAc,EACxC,SAAU/L,EAAI,WACd,KAAMlC,EAAa,YACvB,CAAC,EACMwC,EAEX,GAAI4L,EAAiB,QAAQnK,EAAM,IAAI,IAAM,GAAI,CAC7C,IAAMgK,EAAiB9P,EAAK,aAAaiQ,CAAgB,EACzD,OAAAnM,EAAkBC,EAAK,CACnB,SAAUA,EAAI,KACd,KAAMlC,EAAa,mBACnB,QAASiO,CACb,CAAC,EACMzL,EAEX,OAAOM,EAAGmB,EAAM,IAAI,CACxB,CACA,IAAI,MAAO,CACP,OAAO,KAAK,KAAK,MACrB,CACJ,EACA4G,GAAc,OAAS,CAACmD,EAAQxM,IACrB,IAAIqJ,GAAc,CACrB,OAAAmD,EACA,SAAUtJ,EAAsB,cAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMsD,GAAN,cAAyBf,CAAQ,CAC7B,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACA,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAC9C,GAAI/B,EAAI,aAAerC,EAAc,SACjCqC,EAAI,OAAO,QAAU,GACrB,OAAAD,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,QACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,IAAM6L,EAAcnM,EAAI,aAAerC,EAAc,QAC/CqC,EAAI,KACJ,QAAQ,QAAQA,EAAI,IAAI,EAC9B,OAAOY,EAAGuL,EAAY,KAAMtO,GACjB,KAAK,KAAK,KAAK,WAAWA,EAAM,CACnC,KAAMmC,EAAI,KACV,SAAUA,EAAI,OAAO,kBACzB,CAAC,CACJ,CAAC,CACN,CACJ,EACA4C,GAAW,OAAS,CAAC+D,EAAQrH,IAClB,IAAIsD,GAAW,CAClB,KAAM+D,EACN,SAAUnE,EAAsB,WAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMiD,GAAN,cAAyBV,CAAQ,CAC7B,WAAY,CACR,OAAO,KAAK,KAAK,MACrB,CACA,YAAa,CACT,OAAO,KAAK,KAAK,OAAO,KAAK,WAAaW,EAAsB,WAC1D,KAAK,KAAK,OAAO,WAAW,EAC5B,KAAK,KAAK,MACpB,CACA,OAAOT,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAChDqK,EAAS,KAAK,KAAK,QAAU,KACnC,GAAIA,EAAO,OAAS,aAAc,CAC9B,IAAMC,EAAYD,EAAO,UAAUpM,EAAI,IAAI,EAC3C,OAAIA,EAAI,OAAO,MACJ,QAAQ,QAAQqM,CAAS,EAAE,KAAMC,GAC7B,KAAK,KAAK,OAAO,YAAY,CAChC,KAAMA,EACN,KAAMtM,EAAI,KACV,OAAQA,CACZ,CAAC,CACJ,EAGM,KAAK,KAAK,OAAO,WAAW,CAC/B,KAAMqM,EACN,KAAMrM,EAAI,KACV,OAAQA,CACZ,CAAC,EAGT,IAAMuM,EAAW,CACb,SAAWC,GAAQ,CACfzM,EAAkBC,EAAKwM,CAAG,EACtBA,EAAI,MACJrM,EAAO,MAAM,EAGbA,EAAO,MAAM,CAErB,EACA,IAAI,MAAO,CACP,OAAOH,EAAI,IACf,CACJ,EAEA,GADAuM,EAAS,SAAWA,EAAS,SAAS,KAAKA,CAAQ,EAC/CH,EAAO,OAAS,aAAc,CAC9B,IAAMK,EAAqBC,GAEtB,CACD,IAAMpL,EAAS8K,EAAO,WAAWM,EAAKH,CAAQ,EAC9C,GAAIvM,EAAI,OAAO,MACX,OAAO,QAAQ,QAAQsB,CAAM,EAEjC,GAAIA,aAAkB,QAClB,MAAM,IAAI,MAAM,2FAA2F,EAE/G,OAAOoL,CACX,EACA,GAAI1M,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAM2M,EAAQ,KAAK,KAAK,OAAO,WAAW,CACtC,KAAM3M,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAI2M,EAAM,SAAW,UACVrM,GACPqM,EAAM,SAAW,SACjBxM,EAAO,MAAM,EAEjBsM,EAAkBE,EAAM,KAAK,EACtB,CAAE,OAAQxM,EAAO,MAAO,MAAOwM,EAAM,KAAM,OAGlD,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAM3M,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAC3D,KAAM2M,GACHA,EAAM,SAAW,UACVrM,GACPqM,EAAM,SAAW,SACjBxM,EAAO,MAAM,EACVsM,EAAkBE,EAAM,KAAK,EAAE,KAAK,KAChC,CAAE,OAAQxM,EAAO,MAAO,MAAOwM,EAAM,KAAM,EACrD,EACJ,EAGT,GAAIP,EAAO,OAAS,YAChB,GAAIpM,EAAI,OAAO,QAAU,GAAO,CAC5B,IAAM5E,EAAO,KAAK,KAAK,OAAO,WAAW,CACrC,KAAM4E,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,GAAI,CAACe,GAAQ3F,CAAI,EACb,OAAOA,EACX,IAAMkG,EAAS8K,EAAO,UAAUhR,EAAK,MAAOmR,CAAQ,EACpD,GAAIjL,aAAkB,QAClB,MAAM,IAAI,MAAM,iGAAiG,EAErH,MAAO,CAAE,OAAQnB,EAAO,MAAO,MAAOmB,CAAO,MAG7C,QAAO,KAAK,KAAK,OACZ,YAAY,CAAE,KAAMtB,EAAI,KAAM,KAAMA,EAAI,KAAM,OAAQA,CAAI,CAAC,EAC3D,KAAM5E,GACF2F,GAAQ3F,CAAI,EAEV,QAAQ,QAAQgR,EAAO,UAAUhR,EAAK,MAAOmR,CAAQ,CAAC,EAAE,KAAMjL,IAAY,CAAE,OAAQnB,EAAO,MAAO,MAAOmB,CAAO,EAAE,EAD9GlG,CAEd,EAGTa,EAAK,YAAYmQ,CAAM,CAC3B,CACJ,EACA7J,GAAW,OAAS,CAACoE,EAAQyF,EAAQ9M,IAC1B,IAAIiD,GAAW,CAClB,OAAAoE,EACA,SAAUnE,EAAsB,WAChC,OAAA4J,EACA,GAAG7K,EAAoBjC,CAAM,CACjC,CAAC,EAELiD,GAAW,qBAAuB,CAACqK,EAAYjG,EAAQrH,IAC5C,IAAIiD,GAAW,CAClB,OAAAoE,EACA,OAAQ,CAAE,KAAM,aAAc,UAAWiG,CAAW,EACpD,SAAUpK,EAAsB,WAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMmD,GAAN,cAA0BZ,CAAQ,CAC9B,OAAOE,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,UACtBiD,EAAG,MAAS,EAEhB,KAAK,KAAK,UAAU,OAAOmB,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAU,GAAY,OAAS,CAAC8F,EAAMjJ,IACjB,IAAImD,GAAY,CACnB,UAAW8F,EACX,SAAU/F,EAAsB,YAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMoD,GAAN,cAA0Bb,CAAQ,CAC9B,OAAOE,EAAO,CAEV,OADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,KACtBiD,EAAG,IAAI,EAEX,KAAK,KAAK,UAAU,OAAOmB,CAAK,CAC3C,CACA,QAAS,CACL,OAAO,KAAK,KAAK,SACrB,CACJ,EACAW,GAAY,OAAS,CAAC6F,EAAMjJ,IACjB,IAAIoD,GAAY,CACnB,UAAW6F,EACX,SAAU/F,EAAsB,YAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAM6D,GAAN,cAAyBtB,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAC1ClE,EAAOmC,EAAI,KACf,OAAIA,EAAI,aAAerC,EAAc,YACjCE,EAAO,KAAK,KAAK,aAAa,GAE3B,KAAK,KAAK,UAAU,OAAO,CAC9B,KAAAA,EACA,KAAMmC,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,eAAgB,CACZ,OAAO,KAAK,KAAK,SACrB,CACJ,EACAmD,GAAW,OAAS,CAACoF,EAAMjJ,IAChB,IAAI6D,GAAW,CAClB,UAAWoF,EACX,SAAU/F,EAAsB,WAChC,aAAc,OAAOlD,EAAO,SAAY,WAClCA,EAAO,QACP,IAAMA,EAAO,QACnB,GAAGiC,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMgE,GAAN,cAAuBzB,CAAQ,CAC3B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EAExC8K,EAAS,CACX,GAAG7M,EACH,OAAQ,CACJ,GAAGA,EAAI,OACP,OAAQ,CAAC,CACb,CACJ,EACMsB,EAAS,KAAK,KAAK,UAAU,OAAO,CACtC,KAAMuL,EAAO,KACb,KAAMA,EAAO,KACb,OAAQ,CACJ,GAAGA,CACP,CACJ,CAAC,EACD,OAAI7L,GAAQM,CAAM,EACPA,EAAO,KAAMoF,IACT,CACH,OAAQ,QACR,MAAOA,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAI1I,EAAS6O,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,EACH,EAGM,CACH,OAAQ,QACR,MAAOvL,EAAO,SAAW,QACnBA,EAAO,MACP,KAAK,KAAK,WAAW,CACnB,IAAI,OAAQ,CACR,OAAO,IAAItD,EAAS6O,EAAO,OAAO,MAAM,CAC5C,EACA,MAAOA,EAAO,IAClB,CAAC,CACT,CAER,CACA,aAAc,CACV,OAAO,KAAK,KAAK,SACrB,CACJ,EACAvJ,GAAS,OAAS,CAACiF,EAAMjJ,IACd,IAAIgE,GAAS,CAChB,UAAWiF,EACX,SAAU/F,EAAsB,SAChC,WAAY,OAAOlD,EAAO,OAAU,WAAaA,EAAO,MAAQ,IAAMA,EAAO,MAC7E,GAAGiC,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMwN,GAAN,cAAqBjL,CAAQ,CACzB,OAAOE,EAAO,CAEV,GADmB,KAAK,SAASA,CAAK,IACnBpE,EAAc,IAAK,CAClC,IAAMqC,EAAM,KAAK,gBAAgB+B,CAAK,EACtC,OAAAhC,EAAkBC,EAAK,CACnB,KAAMlC,EAAa,aACnB,SAAUH,EAAc,IACxB,SAAUqC,EAAI,UAClB,CAAC,EACMM,EAEX,MAAO,CAAE,OAAQ,QAAS,MAAOyB,EAAM,IAAK,CAChD,CACJ,EACA+K,GAAO,OAAUxN,GACN,IAAIwN,GAAO,CACd,SAAUtK,EAAsB,OAChC,GAAGjB,EAAoBjC,CAAM,CACjC,CAAC,EAEL,IAAMyN,GAAQ,OAAO,WAAW,EAC1B3J,GAAN,cAAyBvB,CAAQ,CAC7B,OAAOE,EAAO,CACV,GAAM,CAAE,IAAA/B,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACxClE,EAAOmC,EAAI,KACjB,OAAO,KAAK,KAAK,KAAK,OAAO,CACzB,KAAAnC,EACA,KAAMmC,EAAI,KACV,OAAQA,CACZ,CAAC,CACL,CACA,QAAS,CACL,OAAO,KAAK,KAAK,IACrB,CACJ,EACMyD,GAAN,cAA0B5B,CAAQ,CAC9B,OAAOE,EAAO,CACV,GAAM,CAAE,OAAA5B,EAAQ,IAAAH,CAAA,EAAQ,KAAK,oBAAoB+B,CAAK,EACtD,GAAI/B,EAAI,OAAO,MAqBX,OApBoB,SAAY,CAC5B,IAAMgN,EAAW,MAAM,KAAK,KAAK,GAAG,YAAY,CAC5C,KAAMhN,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAIgN,EAAS,SAAW,UACb1M,EACP0M,EAAS,SAAW,SACpB7M,EAAO,MAAM,EACNQ,GAAMqM,EAAS,KAAK,GAGpB,KAAK,KAAK,IAAI,YAAY,CAC7B,KAAMA,EAAS,MACf,KAAMhN,EAAI,KACV,OAAQA,CACZ,CAAC,CAET,GACmB,EAElB,CACD,IAAMgN,EAAW,KAAK,KAAK,GAAG,WAAW,CACrC,KAAMhN,EAAI,KACV,KAAMA,EAAI,KACV,OAAQA,CACZ,CAAC,EACD,OAAIgN,EAAS,SAAW,UACb1M,EACP0M,EAAS,SAAW,SACpB7M,EAAO,MAAM,EACN,CACH,OAAQ,QACR,MAAO6M,EAAS,KACpB,GAGO,KAAK,KAAK,IAAI,WAAW,CAC5B,KAAMA,EAAS,MACf,KAAMhN,EAAI,KACV,OAAQA,CACZ,CAAC,EAGb,CACA,OAAO,OAAOtS,EAAGwb,EAAG,CAChB,OAAO,IAAIzF,GAAY,CACnB,GAAI/V,EACJ,IAAKwb,EACL,SAAU1G,EAAsB,WACpC,CAAC,CACL,CACJ,EACMyK,GAAS,CAAC/K,EAAO5C,EAAS,CAAC,EAWjC4N,IACQhL,EACOoE,GAAO,OAAO,EAAE,YAAY,CAACzI,EAAMmC,IAAQ,CAC9C,IAAIgC,EAAIuF,EACR,GAAI,CAACrF,EAAMrE,CAAI,EAAG,CACd,IAAMsP,EAAI,OAAO7N,GAAW,WACtBA,EAAOzB,CAAI,EACX,OAAOyB,GAAW,SACd,CAAE,QAASA,CAAO,EAClBA,EACJ8N,GAAU7F,GAAMvF,EAAKmL,EAAE,SAAW,MAAQnL,IAAO,OAASA,EAAKkL,KAAW,MAAQ3F,IAAO,OAASA,EAAK,GACvG8F,EAAK,OAAOF,GAAM,SAAW,CAAE,QAASA,CAAE,EAAIA,EACpDnN,EAAI,SAAS,CAAE,KAAM,SAAU,GAAGqN,EAAI,MAAOD,CAAO,CAAC,EAE7D,CAAC,EACE9G,GAAO,OAAO,EAEnBgH,GAAO,CACT,OAAQzG,EAAU,UACtB,EACIrE,GACH,SAAU+K,EAAuB,CAC9BA,EAAsB,UAAe,YACrCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,UAAe,YACrCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,UAAe,YACrCA,EAAsB,aAAkB,eACxCA,EAAsB,QAAa,UACnCA,EAAsB,OAAY,SAClCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,QAAa,UACnCA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,SAAc,WACpCA,EAAsB,sBAA2B,wBACjDA,EAAsB,gBAAqB,kBAC3CA,EAAsB,SAAc,WACpCA,EAAsB,UAAe,YACrCA,EAAsB,OAAY,SAClCA,EAAsB,OAAY,SAClCA,EAAsB,YAAiB,cACvCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,QAAa,UACnCA,EAAsB,WAAgB,aACtCA,EAAsB,cAAmB,gBACzCA,EAAsB,YAAiB,cACvCA,EAAsB,YAAiB,cACvCA,EAAsB,WAAgB,aACtCA,EAAsB,SAAc,WACpCA,EAAsB,WAAgB,aACtCA,EAAsB,WAAgB,aACtCA,EAAsB,YAAiB,aAC3C,GAAG/K,IAA0BA,EAAwB,CAAC,EAAE,EACxD,IAAMgL,GAAiB,CAEvBC,EAAKnO,EAAS,CACV,QAAS,yBAAyBmO,EAAI,MAC1C,IAAMR,GAAQpP,GAASA,aAAgB4P,EAAKnO,CAAM,EAC5CoO,GAAanJ,GAAU,OACvBoJ,GAAahI,GAAU,OACvBiI,GAAUd,GAAO,OACjBe,GAAa/H,GAAU,OACvBgI,GAAc/H,GAAW,OACzBgI,GAAW/H,GAAQ,OACnBgI,GAAa7H,GAAU,OACvB8H,GAAgB7H,GAAa,OAC7B8H,GAAW7H,GAAQ,OACnB8H,GAAU7H,GAAO,OACjB8H,GAAc7H,GAAW,OACzB8H,GAAY7H,GAAS,OACrB8H,GAAW7H,GAAQ,OACnB8H,GAAY5L,GAAS,OACrB6L,GAAa3H,EAAU,OACvB4H,GAAmB5H,EAAU,aAC7B6H,GAAY5L,GAAS,OACrB6L,GAAyB/F,GAAsB,OAC/CgG,GAAmB5L,GAAgB,OACnC6L,GAAY7H,GAAS,OACrB8H,GAAazE,GAAU,OACvB0E,GAAUtE,GAAO,OACjBuE,GAAUrE,GAAO,OACjBsE,GAAe7D,GAAY,OAC3B8D,GAAW1G,GAAQ,OACnB2G,GAAc1G,GAAW,OACzB2G,GAAW1G,GAAQ,OACnB2G,GAAiB1G,GAAc,OAC/B2G,GAAc1M,GAAW,OACzB2M,GAAchN,GAAW,OACzBiN,GAAe/M,GAAY,OAC3BgN,GAAe/M,GAAY,OAC3BgN,GAAiBnN,GAAW,qBAC5BoN,GAAelM,GAAY,OAC3BmM,GAAU,IAAMlC,GAAW,EAAE,SAAS,EACtCmC,GAAU,IAAMlC,GAAW,EAAE,SAAS,EACtCmC,GAAW,IAAMhC,GAAY,EAAE,SAAS,EACxCiC,GAAS,CACX,OAAUvD,GAAQjI,GAAU,OAAO,CAAE,GAAGiI,EAAK,OAAQ,EAAK,CAAC,EAC3D,OAAUA,GAAQ7G,GAAU,OAAO,CAAE,GAAG6G,EAAK,OAAQ,EAAK,CAAC,EAC3D,QAAWA,GAAQzG,GAAW,OAAO,CACjC,GAAGyG,EACH,OAAQ,EACZ,CAAC,EACD,OAAUA,GAAQ1G,GAAU,OAAO,CAAE,GAAG0G,EAAK,OAAQ,EAAK,CAAC,EAC3D,KAAQA,GAAQxG,GAAQ,OAAO,CAAE,GAAGwG,EAAK,OAAQ,EAAK,CAAC,CAC3D,EACMwD,GAAQ1P,EAEV2P,EAAiB,OAAO,OAAO,CAC/B,UAAW,KACX,gBAAiBnR,GACjB,YAAAI,GACA,YAAAE,GACA,UAAAC,GACA,WAAAS,GACA,kBAAAC,EACA,YAAAG,EACA,QAAAI,EACA,MAAAK,GACA,GAAAC,EACA,UAAAC,GACA,QAAAC,GACA,QAAAC,GACA,QAAAC,GACA,IAAI,MAAQ,CAAE,OAAO/E,CAAM,EAC3B,IAAI,YAAc,CAAE,OAAOsB,EAAY,EACvC,cAAAI,EACA,cAAAC,GACA,QAAAiE,EACA,UAAA0C,GACA,UAAAoB,GACA,UAAAG,GACA,WAAAC,GACA,QAAAC,GACA,UAAAG,GACA,aAAAC,GACA,QAAAC,GACA,OAAAC,GACA,WAAAC,GACA,SAAAC,GACA,QAAAC,GACA,SAAA9D,GACA,UAAAkE,EACA,SAAA/D,GACA,sBAAA8F,GACA,gBAAA5F,GACA,SAAAgE,GACA,UAAAqD,GACA,OAAAI,GACA,OAAAE,GACA,YAAAS,GACA,QAAA5C,GACA,WAAAC,GACA,QAAAC,GACA,cAAAC,GACA,WAAA/F,GACA,WAAAL,GACA,eAAgBA,GAChB,YAAAE,GACA,YAAAC,GACA,WAAAS,GACA,SAAAG,GACA,OAAAwJ,GACA,MAAAC,GACA,WAAA3J,GACA,YAAAK,GACA,OAAAwJ,GACA,OAAQpL,EACR,UAAWA,EACX,KAAAyL,GACA,IAAI,uBAAyB,CAAE,OAAO9K,CAAuB,EAC7D,OAAAuN,GACA,IAAK5B,GACL,MAAOI,GACP,OAAQV,GACR,QAASC,GACT,KAAMC,GACN,mBAAoBY,GACpB,OAAQY,GACR,KAAQH,GACR,SAAYH,GACZ,WAAczB,GACd,aAAcoB,GACd,KAAMM,GACN,QAASC,GACT,IAAKJ,GACL,IAAKnB,GACL,WAAYyB,GACZ,MAAOhB,GACP,KAAQH,GACR,SAAUuB,GACV,OAAQ9B,GACR,OAAQa,GACR,SAAAsB,GACA,QAAAD,GACA,SAAUL,GACV,QAAAI,GACA,SAAUD,GACV,WAAYD,GACZ,QAASJ,GACT,OAAQR,GACR,IAAKE,GACL,aAAcP,GACd,OAAQf,GACR,OAAQM,GACR,YAAauB,GACb,MAAOV,GACP,UAAaZ,GACb,MAAOS,GACP,QAASN,GACT,KAAQE,GACR,MAAA0B,GACA,aAAAlS,EACA,cAAAC,GACA,SAAAC,CACJ,CAAC,EC92HDkS,GAAA,CAAA,EAAAriB,EAAAqiB,GAAA,CAAA,OAAA,IAAAC,GAAA,GAAA,IAAAC,GAAA,SAAA,IAAAC,EAAA,CAAA,EAcO,IAAMD,GAAK,CAAI3T,EAAcqF,IAC3BA,EAAI,UAAUrF,CAAG,EAAE,QAGf0T,GAAS,CAAIrO,EAAmBrF,IACpCqF,EAAI,MAAMrF,CAAG,EAGT4T,GAAY5T,GAChB,OAAOA,GAAQ,UAAYA,IAAQ,KCvBxC6T,GAAWC,GACXC,GAAM,IAAKC,GAAO,IAAKC,GAAS,CAACD,GAAME,GAAM,KAAK,IAAI,EAAG,EAAE,EAC/D,SAAAJ,GAAgBK,EAAKC,EAAKC,EAAQ,CAChCD,EAAMA,GAAO,CAAC,EACdC,EAASA,GAAU,EAEnB,QADIC,EAAYD,EACTF,GAAOD,IACZE,EAAIC,GAAA,EAAYF,EAAM,IAAMJ,GAC5BI,GAAO,IAET,KAAOA,EAAMF,IACXG,EAAIC,GAAA,EAAYF,EAAM,IAAMJ,GAC5BI,KAAS,EAEX,OAAAC,EAAIC,CAAA,EAAUF,EAAM,EACpBL,GAAO,MAAQO,EAASC,EAAY,EAC7BF,CACT,CACA,IAAIG,GAASC,GACTC,GAAQ,IAAKC,GAAS,IAC1B,SAAAF,GAAcG,EAAKN,EAAQ,CACzB,IAAI3kB,EAAM,EAAG2kB,EAASA,GAAU,EAAGO,EAAQ,EAAGC,EAAUR,EAAQ5H,EAAGjP,EAAImX,EAAI,OAC3E,EAAG,CACD,GAAIE,GAAWrX,EACb,MAAAgX,GAAK,MAAQ,EACP,IAAI,WAAW,yBAAyB,EAEhD/H,EAAIkI,EAAIE,GAAA,EACRnlB,GAAOklB,EAAQ,IAAMnI,EAAIiI,KAAWE,GAASnI,EAAIiI,IAAU,KAAK,IAAI,EAAGE,CAAK,EAC5EA,GAAS,QACFnI,GAAKgI,IACd,OAAAD,GAAK,MAAQK,EAAUR,EAChB3kB,CACT,CACA,IAAIolB,GAAK,KAAK,IAAI,EAAG,CAAC,EAClBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAK,KAAK,IAAI,EAAG,EAAE,EACnBC,GAAS,SAAU3mB,EAAO,CAC5B,OAAOA,EAAQkmB,GAAK,EAAIlmB,EAAQmmB,GAAK,EAAInmB,EAAQomB,GAAK,EAAIpmB,EAAQqmB,GAAK,EAAIrmB,EAAQsmB,GAAK,EAAItmB,EAAQumB,GAAK,EAAIvmB,EAAQwmB,GAAK,EAAIxmB,EAAQymB,GAAK,EAAIzmB,EAAQ0mB,GAAK,EAAI,EAClK,EACIE,GAAS,CACX,OAAQ3B,GACR,OAAAU,GACA,eAAgBgB,EAClB,EACIE,GAAeD,GACZE,GAAQD,GCnDFE,GAAS,CAACvU,EAAMiT,EAAS,IAE7B,CADMqB,GAAO,OAAOtU,EAAMiT,CAAM,EAGrCqB,GAAO,OAAO,KAChB,EAEWE,GAAW,CAACC,EAAK9O,EAAQsN,EAAS,KAC7CqB,GAAO,OAAOG,EAAK9O,EAAQsN,CAAM,EAC1BtN,GAEI+O,GAAiBD,GACrBH,GAAO,eAAeG,CAAG,ECb5BE,GAAQ,IAAI,WAAW,CAAC,EAMxBC,GAAS,CAACC,EAAIC,IAAO,CACzB,GAAID,IAAOC,EACT,MAAO,GACT,GAAID,EAAG,aAAeC,EAAG,WACvB,MAAO,GAET,QAASC,EAAK,EAAGA,EAAKF,EAAG,WAAYE,IACnC,GAAIF,EAAGE,CAAA,IAAQD,EAAGC,CAAA,EAChB,MAAO,GAGX,MAAO,EACT,EACMC,GAASrlB,GAAK,CAClB,GAAIA,aAAa,YAAcA,EAAE,YAAY,OAAS,aACpD,OAAOA,EACT,GAAIA,aAAa,YACf,OAAO,IAAI,WAAWA,CAAC,EACzB,GAAI,YAAY,OAAOA,CAAC,EACtB,OAAO,IAAI,WAAWA,EAAE,OAAQA,EAAE,WAAYA,EAAE,UAAU,EAE5D,MAAM,IAAI,MAAM,mCAAmC,CACrD,EAEMslB,GAAajpB,GAAO,IAAI,YAAY,EAAE,OAAOA,CAAG,EAChDkpB,GAAW7J,GAAK,IAAI,YAAY,EAAE,OAAOA,CAAC,EC1BnC8J,GAAS,CAAChpB,EAAMipB,IAAW,CACtC,IAAM9H,EAAO8H,EAAO,WACdC,EAAoBX,GAAevoB,CAAI,EACvCmpB,EAAeD,EAAoBX,GAAepH,CAAI,EACtDiI,EAAQ,IAAI,WAAWD,EAAehI,CAAI,EACzC,OAAAkH,GAASroB,EAAMopB,EAAO,CAAC,EACvBf,GAASlH,EAAMiI,EAAOF,CAAU,EACvCE,EAAM,IAAIH,EAAQE,CAAY,EACvB,IAAIE,GAAOrpB,EAAMmhB,EAAM8H,EAAQG,CAAK,CAC7C,EACaE,GAASC,GAAa,CACjC,IAAMH,EAAQP,GAAOU,CAAS,EACxB,CAACvpB,EAAMkpB,CAAA,EAAqBd,GAAOgB,CAAK,EACxC,CAACjI,EAAMgI,CAAA,EAAuBf,GAAOgB,EAAM,SAASF,CAAU,CAAC,EAC/DD,EAASG,EAAM,SAASF,EAAaC,CAAY,EACvD,GAAIF,EAAO,aAAe9H,EACxB,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAO,IAAIkI,GAAOrpB,EAAMmhB,EAAM8H,EAAQG,CAAK,CAC7C,EACaI,GAAS,CAAC9lB,EAAGwb,IACpBxb,IAAMwb,EACD,GAEAxb,EAAE,OAASwb,EAAE,MAAQxb,EAAE,OAASwb,EAAE,MAAQuJ,GAAW/kB,EAAE,MAAOwb,EAAE,KAAK,EAGnEmK,GAAN,KAAa,CAClB,YAAYrpB,EAAMmhB,EAAM8H,EAAQG,EAAO,CACrC,KAAK,KAAOppB,EACZ,KAAK,KAAOmhB,EACZ,KAAK,OAAS8H,EACd,KAAK,MAAQG,CACf,CACF,ECvCAK,GAAA,CAAA,EAAA5lB,EAAA4lB,GAAA,CAAA,UAAA,IAAAC,GAAA,aAAA,IAAAC,EAAA,CAAA,ECAA,SAAAC,GAAcC,EAAUnZ,EAAM,CAC5B,GAAImZ,EAAS,QAAU,IACrB,MAAM,IAAI,UAAU,mBAAmB,EAGzC,QADIC,EAAW,IAAI,WAAW,GAAG,EACxBC,EAAI,EAAGA,EAAID,EAAS,OAAQC,IACnCD,EAASC,CAAA,EAAK,IAEhB,QAAS9nB,EAAI,EAAGA,EAAI4nB,EAAS,OAAQ5nB,IAAK,CACxC,IAAIgU,EAAI4T,EAAS,OAAO5nB,CAAC,EACrB+nB,EAAK/T,EAAE,WAAW,CAAC,EACvB,GAAI6T,EAASE,CAAA,IAAQ,IACnB,MAAM,IAAI,UAAU/T,EAAI,eAAe,EAEzC6T,EAASE,CAAA,EAAM/nB,EAEjB,IAAIgoB,EAAOJ,EAAS,OAChBK,EAASL,EAAS,OAAO,CAAC,EAC1BM,EAAS,KAAK,IAAIF,CAAI,EAAI,KAAK,IAAI,GAAG,EACtCG,EAAU,KAAK,IAAI,GAAG,EAAI,KAAK,IAAIH,CAAI,EAC3C,SAAAI,EAAgBC,EAAQ,CAOtB,GANIA,aAAkB,aACb,YAAY,OAAOA,CAAM,EAChCA,EAAS,IAAI,WAAWA,EAAO,OAAQA,EAAO,WAAYA,EAAO,UAAU,EAClE,MAAM,QAAQA,CAAM,IAC7BA,EAAS,WAAW,KAAKA,CAAM,IAE7B,EAAEA,aAAkB,YACtB,MAAM,IAAI,UAAU,qBAAqB,EAE3C,GAAIA,EAAO,SAAW,EACpB,MAAO,GAMT,QAJIC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAOJ,EAAO,OACXG,IAAWC,GAAQJ,EAAOG,CAAA,IAAY,GAC3CA,IACAF,IAIF,QAFIpJ,GAAQuJ,EAAOD,GAAUL,EAAU,IAAM,EACzCO,EAAM,IAAI,WAAWxJ,CAAI,EACtBsJ,IAAWC,GAAM,CAGtB,QAFIE,EAAQN,EAAOG,CAAA,EACfznB,GAAI,EACC6nB,EAAM1J,EAAO,GAAIyJ,IAAU,GAAK5nB,GAAIwnB,IAAWK,IAAQ,GAAIA,IAAO7nB,KACzE4nB,GAAS,IAAMD,EAAIE,CAAA,IAAS,EAC5BF,EAAIE,CAAA,EAAOD,EAAQX,IAAS,EAC5BW,EAAQA,EAAQX,IAAS,EAE3B,GAAIW,IAAU,EACZ,MAAM,IAAI,MAAM,gBAAgB,EAElCJ,EAASxnB,GACTynB,IAGF,QADIK,GAAM3J,EAAOqJ,EACVM,KAAQ3J,GAAQwJ,EAAIG,EAAA,IAAS,GAClCA,KAGF,QADIjrB,GAAMqqB,EAAO,OAAOK,CAAM,EACvBO,GAAM3J,EAAM,EAAE2J,GACnBjrB,IAAOgqB,EAAS,OAAOc,EAAIG,EAAA,CAAI,EAEjC,OAAOjrB,EACT,CACA,SAAAkrB,EAAsBT,EAAQ,CAC5B,GAAI,OAAOA,GAAW,SACpB,MAAM,IAAI,UAAU,iBAAiB,EAEvC,GAAIA,EAAO,SAAW,EACpB,OAAO,IAAI,WAEb,IAAIU,EAAM,EACV,GAAIV,EAAOU,CAAA,IAAS,IAKpB,SAFIT,EAAS,EACTC,EAAS,EACNF,EAAOU,CAAA,IAASd,GACrBK,IACAS,IAIF,QAFI7J,GAAQmJ,EAAO,OAASU,GAAOb,EAAS,IAAM,EAC9Cc,EAAO,IAAI,WAAW9J,CAAI,EACvBmJ,EAAOU,CAAA,GAAM,CAClB,IAAIJ,EAAQd,EAASQ,EAAO,WAAWU,CAAG,CAAA,EAC1C,GAAIJ,IAAU,IACZ,OAGF,QADI5nB,EAAI,EACCkoB,GAAM/J,EAAO,GAAIyJ,IAAU,GAAK5nB,EAAIwnB,IAAWU,KAAQ,GAAIA,KAAOloB,IACzE4nB,GAASX,EAAOgB,EAAKC,EAAA,IAAS,EAC9BD,EAAKC,EAAA,EAAON,EAAQ,MAAQ,EAC5BA,EAAQA,EAAQ,MAAQ,EAE1B,GAAIA,IAAU,EACZ,MAAM,IAAI,MAAM,gBAAgB,EAElCJ,EAASxnB,EACTgoB,IAEF,GAAIV,EAAOU,CAAA,IAAS,IAIpB,SADIG,EAAMhK,EAAOqJ,EACVW,IAAQhK,GAAQ8J,EAAKE,CAAA,IAAS,GACnCA,IAIF,QAFIC,GAAM,IAAI,WAAWb,GAAUpJ,EAAOgK,EAAI,EAC1CE,GAAId,EACDY,IAAQhK,GACbiK,GAAIC,IAAA,EAAOJ,EAAKE,GAAA,EAElB,OAAOC,IACT,CACA,SAAAE,EAAgB1pB,EAAQ,CACtB,IAAI2pB,EAASR,EAAanpB,CAAM,EAChC,GAAI2pB,EACF,OAAOA,EAET,MAAM,IAAI,MAAM,OAAQ7a,aAAiB,CAC3C,CACA,MAAO,CACL,OAAQ2Z,EACR,aAAAU,EACA,OAAQO,CACV,CACF,CACA,IAAIE,GAAM5B,GACN6B,GAAkCD,GAC/BE,GAAQD,GClITE,GAAN,KAAc,CACZ,YAAYjb,EAAMkb,EAAQC,EAAY,CACpC,KAAK,KAAOnb,EACZ,KAAK,OAASkb,EACd,KAAK,WAAaC,CACpB,CACA,OAAOzC,EAAO,CACZ,GAAIA,aAAiB,WACnB,MAAO,GAAI,KAAK,SAAW,KAAK,WAAWA,CAAK,IAEhD,MAAM,MAAM,mCAAmC,CAEnD,CACF,EACM0C,GAAN,KAAc,CACZ,YAAYpb,EAAMkb,EAAQG,EAAY,CAGpC,GAFA,KAAK,KAAOrb,EACZ,KAAK,OAASkb,EACVA,EAAO,YAAY,CAAC,IAAM,OAC5B,MAAM,IAAI,MAAM,0BAA0B,EAE5C,KAAK,gBAAkBA,EAAO,YAAY,CAAC,EAC3C,KAAK,WAAaG,CACpB,CACA,OAAOC,EAAM,CACX,GAAI,OAAOA,GAAS,SAAU,CAC5B,GAAIA,EAAK,YAAY,CAAC,IAAM,KAAK,gBAC/B,MAAM,MAAM,qCAAsC,KAAK,UAAUA,CAAI,MAAQ,KAAK,mDAAqD,KAAK,QAAS,EAEvJ,OAAO,KAAK,WAAWA,EAAK,MAAM,KAAK,OAAO,MAAM,CAAC,MAErD,OAAM,MAAM,mCAAmC,CAEnD,CACA,GAAGC,EAAS,CACV,OAAOC,GAAG,KAAMD,CAAO,CACzB,CACF,EACME,GAAN,KAAsB,CACpB,YAAYC,EAAU,CACpB,KAAK,SAAWA,CAClB,CACA,GAAGH,EAAS,CACV,OAAOC,GAAG,KAAMD,CAAO,CACzB,CACA,OAAOlU,EAAO,CACZ,IAAM6T,EAAS7T,EAAM,CAAA,EACfkU,EAAU,KAAK,SAASL,CAAA,EAC9B,GAAIK,EACF,OAAOA,EAAQ,OAAOlU,CAAK,EAE3B,MAAM,WAAW,qCAAsC,KAAK,UAAUA,CAAK,gCAAkC,OAAO,KAAK,KAAK,QAAQ,iBAAkB,CAE5J,CACF,EACamU,GAAK,CAAClM,EAAMC,IAAU,IAAIkM,GAAgB,CACrD,GAAGnM,EAAK,UAAY,CAAE,CAACA,EAAK,MAAA,EAASA,CAAK,EAC1C,GAAGC,EAAM,UAAY,CAAE,CAACA,EAAM,MAAA,EAASA,CAAM,CAC/C,CAAC,EACYoM,GAAN,KAAY,CACjB,YAAY3b,EAAMkb,EAAQC,EAAYE,EAAY,CAChD,KAAK,KAAOrb,EACZ,KAAK,OAASkb,EACd,KAAK,WAAaC,EAClB,KAAK,WAAaE,EAClB,KAAK,QAAU,IAAIJ,GAAQjb,EAAMkb,EAAQC,CAAU,EACnD,KAAK,QAAU,IAAIC,GAAQpb,EAAMkb,EAAQG,CAAU,CACrD,CACA,OAAOhU,EAAO,CACZ,OAAO,KAAK,QAAQ,OAAOA,CAAK,CAClC,CACA,OAAOA,EAAO,CACZ,OAAO,KAAK,QAAQ,OAAOA,CAAK,CAClC,CACF,EACauU,GAAO,CAAC,CAAC,KAAA5b,EAAM,OAAAkb,EAAQ,OAAAvB,EAAQ,OAAAiB,CAAA,IAAY,IAAIe,GAAM3b,EAAMkb,EAAQvB,EAAQiB,CAAM,EACjFiB,GAAQ,CAAC,CAAC,OAAAX,EAAQ,KAAAlb,EAAM,SAAA8b,CAAA,IAAc,CACjD,GAAM,CAAC,OAAAnC,EAAQ,OAAAiB,CAAA,EAAUI,GAAMc,EAAU9b,CAAI,EAC7C,OAAO4b,GAAK,CACV,OAAAV,EACA,KAAAlb,EACA,OAAA2Z,EACA,OAAQ2B,GAAQnD,GAAOyC,EAAOU,CAAI,CAAC,CACrC,CAAC,CACH,EACMS,GAAS,CAAC7qB,EAAQ4qB,EAAUE,EAAahc,IAAS,CACtD,IAAMic,EAAQ,CAAC,EACf,QAAS1qB,EAAI,EAAGA,EAAIuqB,EAAS,OAAQ,EAAEvqB,EACrC0qB,EAAMH,EAASvqB,CAAA,CAAA,EAAMA,EAEvB,IAAI5B,EAAMuB,EAAO,OACjB,KAAOA,EAAOvB,EAAM,CAAA,IAAO,KACzB,EAAEA,EAEJ,IAAMwmB,EAAM,IAAI,WAAWxmB,EAAMqsB,EAAc,EAAI,CAAC,EAChDE,EAAO,EACPrB,EAAS,EACTsB,EAAU,EACd,QAAS5qB,EAAI,EAAGA,EAAI5B,EAAK,EAAE4B,EAAG,CAC5B,IAAMZ,EAAQsrB,EAAM/qB,EAAOK,CAAA,CAAA,EAC3B,GAAIZ,IAAU,OACZ,MAAM,IAAI,YAAY,OAAQqP,aAAiB,EAEjD6a,EAASA,GAAUmB,EAAcrrB,EACjCurB,GAAQF,EACJE,GAAQ,IACVA,GAAQ,EACR/F,EAAIgG,GAAA,EAAa,IAAMtB,GAAUqB,GAGrC,GAAIA,GAAQF,GAAe,IAAMnB,GAAU,EAAIqB,EAC7C,MAAM,IAAI,YAAY,wBAAwB,EAEhD,OAAO/F,CACT,EACMiG,GAAS,CAACjZ,EAAM2Y,EAAUE,IAAgB,CAC9C,IAAMK,EAAMP,EAASA,EAAS,OAAS,CAAA,IAAO,IACxC3O,GAAQ,GAAK6O,GAAe,EAC9B7F,EAAM,GACN+F,EAAO,EACPrB,EAAS,EACb,QAAStpB,EAAI,EAAGA,EAAI4R,EAAK,OAAQ,EAAE5R,EAGjC,IAFAspB,EAASA,GAAU,EAAI1X,EAAK5R,CAAA,EAC5B2qB,GAAQ,EACDA,EAAOF,GACZE,GAAQF,EACR7F,GAAO2F,EAAS3O,EAAO0N,GAAUqB,CAAA,EAMrC,GAHIA,IACF/F,GAAO2F,EAAS3O,EAAO0N,GAAUmB,EAAcE,CAAA,GAE7CG,EACF,KAAOlG,EAAI,OAAS6F,EAAc,GAChC7F,GAAO,IAGX,OAAOA,CACT,EACamG,EAAU,CAAC,CAAC,KAAAtc,EAAM,OAAAkb,EAAQ,YAAAc,EAAa,SAAAF,CAAA,IAC3CF,GAAK,CACV,OAAAV,EACA,KAAAlb,EACA,OAAOqH,EAAO,CACZ,OAAO+U,GAAO/U,EAAOyU,EAAUE,CAAW,CAC5C,EACA,OAAO3U,EAAO,CACZ,OAAO0U,GAAO1U,EAAOyU,EAAUE,EAAahc,CAAI,CAClD,CACF,CAAC,EFtJUgZ,GAAY6C,GAAM,CAC7B,KAAM,YACN,OAAQ,IACR,SAAU,4DACZ,CAAC,EACY5C,GAAe4C,GAAM,CAChC,KAAM,eACN,OAAQ,IACR,SAAU,4DACZ,CAAC,EGVDU,GAAA,CAAA,EAAAppB,EAAAopB,GAAA,CAAA,OAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,aAAA,IAAAC,GAAA,kBAAA,IAAAC,GAAA,eAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,eAAA,IAAAC,GAAA,YAAA,IAAAC,GAAA,QAAA,IAAAC,EAAA,CAAA,EACO,IAAMR,GAASF,EAAQ,CAC5B,OAAQ,IACR,KAAM,SACN,SAAU,mCACV,YAAa,CACf,CAAC,EACYS,GAAcT,EAAQ,CACjC,OAAQ,IACR,KAAM,cACN,SAAU,mCACV,YAAa,CACf,CAAC,EACYO,GAAYP,EAAQ,CAC/B,OAAQ,IACR,KAAM,YACN,SAAU,oCACV,YAAa,CACf,CAAC,EACYQ,GAAiBR,EAAQ,CACpC,OAAQ,IACR,KAAM,iBACN,SAAU,oCACV,YAAa,CACf,CAAC,EACYG,GAAYH,EAAQ,CAC/B,OAAQ,IACR,KAAM,YACN,SAAU,mCACV,YAAa,CACf,CAAC,EACYM,GAAiBN,EAAQ,CACpC,OAAQ,IACR,KAAM,iBACN,SAAU,mCACV,YAAa,CACf,CAAC,EACYI,GAAeJ,EAAQ,CAClC,OAAQ,IACR,KAAM,eACN,SAAU,oCACV,YAAa,CACf,CAAC,EACYK,GAAoBL,EAAQ,CACvC,OAAQ,IACR,KAAM,oBACN,SAAU,oCACV,YAAa,CACf,CAAC,EACYU,GAAUV,EAAQ,CAC7B,OAAQ,IACR,KAAM,UACN,SAAU,mCACV,YAAa,CACf,CAAC,ECjDYW,EAAN,KAAU,CACf,YAAYrT,EAASta,EAAMupB,EAAWH,EAAO,CAC3C,KAAK,KAAOppB,EACZ,KAAK,QAAUsa,EACf,KAAK,UAAYiP,EACjB,KAAK,MAAQH,EACb,KAAK,WAAaA,EAAM,WACxB,KAAK,WAAaA,EAAM,WACxB,KAAK,MAAQ,KACb,KAAK,WAAa,IAAI,IACtB,OAAO,iBAAiB,KAAM,CAC5B,WAAYwE,GACZ,WAAYA,GACZ,KAAMC,GACN,QAASA,GACT,UAAWA,GACX,MAAOA,GACP,WAAYD,GACZ,MAAOA,EACT,CAAC,CACH,CACA,MAAO,CACL,OAAQ,KAAK,QAAA,CAAA,IACR,GACD,OAAO,KACT,QACO,CACL,GAAM,CAAC,KAAA5tB,EAAM,UAAAupB,CAAA,EAAa,KAC1B,GAAIvpB,IAAS8tB,GACX,MAAM,IAAI,MAAM,0CAA0C,EAE5D,GAAIvE,EAAU,OAASwE,GACrB,MAAM,IAAI,MAAM,oDAAoD,EAEtE,OAAOJ,EAAI,SAASpE,CAAS,CAC/B,CAAA,CAEJ,CACA,MAAO,CACL,OAAQ,KAAK,QAAA,CAAA,IACR,GAAG,CACJ,GAAM,CAAC,KAAAvpB,EAAM,OAAAipB,CAAA,EAAU,KAAK,UACtBM,EAAmBP,GAAOhpB,EAAMipB,CAAM,EAC5C,OAAO0E,EAAI,SAAS,KAAK,KAAMpE,CAAS,CAC1C,CAAA,IACG,GACD,OAAO,KACT,QAEE,MAAM,MAAM,+BAAgC,KAAK,mDAAoD,CACvG,CAEJ,CACA,OAAOyE,EAAO,CACZ,OAAOA,GAAS,KAAK,OAASA,EAAM,MAAQ,KAAK,UAAYA,EAAM,SAAkBxE,GAAO,KAAK,UAAWwE,EAAM,SAAS,CAC7H,CACA,SAAS5c,EAAM,CACb,GAAM,CAAC,MAAAgY,EAAO,QAAA9O,EAAS,WAAA2T,CAAA,EAAc,KACrC,OAAQ3T,EAAA,CAAA,IACH,GACH,OAAO4T,GAAW9E,EAAO6E,EAAY7c,GAAQsY,GAAU,OAAO,EAAA,QAE9D,OAAOyE,GAAW/E,EAAO6E,EAAY7c,GAAQ8b,GAAO,OAAO,CAAA,CAE/D,CACA,QAAS,CACP,MAAO,CACL,KAAM,KAAK,KACX,QAAS,KAAK,QACd,KAAM,KAAK,UAAU,KACvB,CACF,CACA,IAAK,OAAO,WAAA,GAAe,CACzB,MAAO,KACT,CACA,CAAC,OAAO,IAAI,4BAA4B,CAAA,GAAK,CAC3C,MAAO,OAAS,KAAK,SAAS,EAAI,GACpC,CACA,OAAO,MAAM7rB,EAAO,CAClB,OAAA+sB,GAAU,QAASC,EAAkB,EAC9B,CAAC,EAAEhtB,IAAUA,EAAMitB,EAAA,GAAcjtB,EAAM,QAAUA,GAC1D,CACA,IAAI,qBAAsB,CACxB,MAAM,IAAI,MAAM,6BAA6B,CAC/C,CACA,IAAI,OAAQ,CACV,MAAM,IAAI,MAAM,qEAAqE,CACvF,CACA,IAAI,QAAS,CACX,MAAM,IAAI,MAAM,mEAAmE,CACrF,CACA,IAAI,eAAgB,CAClB,MAAM,IAAI,MAAM,wCAAwC,CAC1D,CACA,IAAI,QAAS,CACX,MAAM,IAAI,MAAM,iCAAiC,CACnD,CACA,OAAO,MAAMA,EAAO,CAClB,GAAIA,aAAiBssB,EACnB,OAAOtsB,EACT,GAAWA,GAAS,MAAQA,EAAM,QAAUA,EAAO,CACjD,GAAM,CAAC,QAAAiZ,EAAS,KAAAta,EAAM,UAAAupB,EAAW,MAAAH,CAAA,EAAS/nB,EAC1C,OAAO,IAAIssB,EAAIrT,EAASta,EAAMupB,EAAWH,GAASmF,GAAUjU,EAASta,EAAMupB,EAAU,KAAK,CAAC,UAClFloB,GAAS,MAAQA,EAAMitB,EAAA,IAAe,GAAM,CACrD,GAAM,CAAC,QAAAhU,EAAS,UAAAiP,EAAW,KAAAvpB,CAAA,EAAQqB,EAC7B4nB,EAAgBK,GAAOC,CAAS,EACtC,OAAOoE,EAAI,OAAOrT,EAASta,EAAMipB,CAAM,MAEvC,QAAO,IAEX,CACA,OAAO,OAAO3O,EAASta,EAAMipB,EAAQ,CACnC,GAAI,OAAOjpB,GAAS,SAClB,MAAM,IAAI,MAAM,uCAAuC,EAEzD,OAAQsa,EAAA,CAAA,IACH,GAAG,CACJ,GAAIta,IAAS8tB,GACX,MAAM,IAAI,MAAM,wCAAyCA,oBAA8B,EAEvF,OAAO,IAAIH,EAAIrT,EAASta,EAAMipB,EAAQA,EAAO,KAAK,CAEtD,CAAA,IACG,GAAG,CACJ,IAAMG,EAAQmF,GAAUjU,EAASta,EAAMipB,EAAO,KAAK,EACnD,OAAO,IAAI0E,EAAIrT,EAASta,EAAMipB,EAAQG,CAAK,CAC7C,CAAA,QAEE,MAAM,IAAI,MAAM,iBAAiB,CACnC,CAEJ,CACA,OAAO,SAASH,EAAQ,CACtB,OAAO0E,EAAI,OAAO,EAAGG,GAAa7E,CAAM,CAC1C,CACA,OAAO,SAASjpB,EAAMipB,EAAQ,CAC5B,OAAO0E,EAAI,OAAO,EAAG3tB,EAAMipB,CAAM,CACnC,CACA,OAAO,OAAOG,EAAO,CACnB,GAAM,CAACoF,EAAKC,CAAA,EAAad,EAAI,YAAYvE,CAAK,EAC9C,GAAIqF,EAAU,OACZ,MAAM,IAAI,MAAM,kBAAkB,EAEpC,OAAOD,CACT,CACA,OAAO,YAAYpF,EAAO,CACxB,IAAMsF,EAAQf,EAAI,aAAavE,CAAK,EAC9BuF,EAAaD,EAAM,KAAOA,EAAM,cAChCE,EAAiB/F,GAAOO,EAAM,SAASuF,EAAYA,EAAaD,EAAM,aAAa,CAAC,EAC1F,GAAIE,EAAe,aAAeF,EAAM,cACtC,MAAM,IAAI,MAAM,kBAAkB,EAEpC,IAAMG,EAAcD,EAAe,SAASF,EAAM,cAAgBA,EAAM,UAAU,EAC5EzF,EAAS,IAAWI,GAAOqF,EAAM,cAAeA,EAAM,WAAYG,EAAaD,CAAc,EAEnG,MAAO,CADKF,EAAM,UAAY,EAAIf,EAAI,SAAS1E,CAAM,EAAI0E,EAAI,SAASe,EAAM,MAAOzF,CAAM,EAGvFG,EAAM,SAASsF,EAAM,IAAI,CAC3B,CACF,CACA,OAAO,aAAaI,EAAc,CAChC,IAAIhI,EAAS,EACPlmB,EAAO,IAAM,CACjB,GAAM,CAACqB,EAAGuoB,CAAA,EAAiBpC,GAAO0G,EAAa,SAAShI,CAAM,CAAC,EAC/D,OAAAA,GAAU0D,EACHvoB,CACT,EACIqY,EAAU1Z,EAAK,EACfmuB,EAAQjB,GAOZ,GANIxT,IAAY,IACdA,EAAU,EACVwM,EAAS,GACAxM,IAAY,IACrByU,EAAQnuB,EAAK,GAEX0Z,IAAY,GAAKA,IAAY,EAC/B,MAAM,IAAI,WAAW,uBAAwBA,GAAU,EAEzD,IAAMqU,EAAa7H,EACbkI,EAAgBpuB,EAAK,EACrBquB,EAAaruB,EAAK,EAClBugB,EAAO2F,EAASmI,EAChBC,EAAgB/N,EAAOwN,EAC7B,MAAO,CACL,QAAArU,EACA,MAAAyU,EACA,cAAAC,EACA,WAAAC,EACA,cAAAC,EACA,KAAA/N,CACF,CACF,CACA,OAAO,MAAMmJ,EAAQlZ,EAAM,CACzB,GAAM,CAACwa,EAAQxC,CAAA,EAAS+F,GAAgB7E,EAAQlZ,CAAI,EAC9Cod,EAAMb,EAAI,OAAOvE,CAAK,EAC5B,OAAAoF,EAAI,WAAW,IAAI5C,EAAQtB,CAAM,EAC1BkE,CACT,CACF,EACMW,GAAkB,CAAC7E,EAAQlZ,IAAS,CACxC,OAAQkZ,EAAO,CAAA,EAAA,CAAA,IACV,IAAK,CACN,IAAM2B,EAAU7a,GAAQsY,GACxB,MAAO,CACLA,GAAU,OACVuC,EAAQ,OAAO,GAAIvC,GAAU,SAAWY,GAAS,CACnD,CACF,CAAA,KACGZ,GAAU,OAAQ,CACnB,IAAMuC,EAAU7a,GAAQsY,GACxB,MAAO,CACLA,GAAU,OACVuC,EAAQ,OAAO3B,CAAM,CACvB,CACF,CAAA,KACG4C,GAAO,OAAQ,CAChB,IAAMjB,EAAU7a,GAAQ8b,GACxB,MAAO,CACLA,GAAO,OACPjB,EAAQ,OAAO3B,CAAM,CACvB,CACF,CAAA,QACO,CACL,GAAIlZ,GAAQ,KACV,MAAM,MAAM,iFAAiF,EAE/F,MAAO,CACLkZ,EAAO,CAAA,EACPlZ,EAAK,OAAOkZ,CAAM,CACpB,CACF,CAAA,CAEJ,EACM4D,GAAa,CAAC9E,EAAOgG,EAAOhe,IAAS,CACzC,GAAM,CAAC,OAAAwa,CAAA,EAAUxa,EACjB,GAAIwa,IAAWlC,GAAU,OACvB,MAAM,MAAM,8BAA+BtY,EAAK,eAAgB,EAElE,IAAMod,EAAMY,EAAM,IAAIxD,CAAM,EAC5B,GAAI4C,GAAO,KAAM,CACf,IAAMa,EAAMje,EAAK,OAAOgY,CAAK,EAAE,MAAM,CAAC,EACtC,OAAAgG,EAAM,IAAIxD,EAAQyD,CAAG,EACdA,MAEP,QAAOb,CAEX,EACML,GAAa,CAAC/E,EAAOgG,EAAOhe,IAAS,CACzC,GAAM,CAAC,OAAAwa,CAAA,EAAUxa,EACXod,EAAMY,EAAM,IAAIxD,CAAM,EAC5B,GAAI4C,GAAO,KAAM,CACf,IAAMa,EAAMje,EAAK,OAAOgY,CAAK,EAC7B,OAAAgG,EAAM,IAAIxD,EAAQyD,CAAG,EACdA,MAEP,QAAOb,CAEX,EACMV,GAAc,IACdC,GAAe,GACfQ,GAAY,CAACjU,EAASta,EAAMupB,IAAc,CAC9C,IAAM+F,EAAoB/G,GAAejO,CAAO,EAC1CiV,EAAaD,EAAoB/G,GAAevoB,CAAI,EACpDopB,EAAQ,IAAI,WAAWmG,EAAahG,EAAU,UAAU,EACvD,OAAAlB,GAAS/N,EAAS8O,EAAO,CAAC,EAC1Bf,GAASroB,EAAMopB,EAAOkG,CAAU,EACvClG,EAAM,IAAIG,EAAWgG,CAAU,EACxBnG,CACT,EACMkF,GAAY,OAAO,IAAI,kBAAkB,EACzCT,GAAW,CACf,SAAU,GACV,aAAc,GACd,WAAY,EACd,EACMD,GAAS,CACb,SAAU,GACV,WAAY,GACZ,aAAc,EAChB,EACM4B,GAAU,YACVpB,GAAY,CAACqB,EAAOza,IAAY,CACpC,GAAIya,EAAM,KAAKD,EAAO,EACpB,QAAQ,KAAKxa,CAAO,MAEpB,OAAM,IAAI,MAAMA,CAAO,CAE3B,EACMqZ,GAAqB;;;;;;;;;;;;;;ECrS3BqB,GAAA,CAAA,EAAA7rB,EAAA6rB,GAAA,CAAA,SAAA,IAAAC,EAAA,CAAA,EAKO,IAAMA,GAAWrD,GAAK,CAC3B,OAAQ,KACR,KAAM,WACN,OAAQlF,GAAO2B,GAAS3B,CAAG,EAC3B,OAAQvnB,GAAOipB,GAAWjpB,CAAG,CAC/B,CAAC,ECVD+vB,GAAA,CAAA,EAAA/rB,EAAA+rB,GAAA,CAAA,MAAA,IAAAC,EAAA,CAAA,EACO,IAAMA,GAAQ7C,EAAQ,CAC3B,OAAQ,IACR,KAAM,QACN,SAAU,KACV,YAAa,CACf,CAAC,ECND8C,GAAA,CAAA,EAAAjsB,EAAAisB,GAAA,CAAA,MAAA,IAAAC,EAAA,CAAA,EACO,IAAMA,GAAQ/C,EAAQ,CAC3B,OAAQ,IACR,KAAM,QACN,SAAU,WACV,YAAa,CACf,CAAC,ECNDgD,GAAA,CAAA,EAAAnsB,EAAAmsB,GAAA,CAAA,OAAA,IAAAC,EAAA,CAAA,EACO,IAAMA,GAAS1D,GAAM,CAC1B,OAAQ,IACR,KAAM,SACN,SAAU,YACZ,CAAC,ECLD2D,GAAA,CAAA,EAAArsB,EAAAqsB,GAAA,CAAA,OAAA,IAAAC,GAAA,YAAA,IAAAC,EAAA,CAAA,EACO,IAAMD,GAASnD,EAAQ,CAC5B,OAAQ,IACR,KAAM,SACN,SAAU,mBACV,YAAa,CACf,CAAC,EACYoD,GAAcpD,EAAQ,CACjC,OAAQ,IACR,KAAM,cACN,SAAU,mBACV,YAAa,CACf,CAAC,ECZDqD,GAAA,CAAA,EAAAxsB,EAAAwsB,GAAA,CAAA,OAAA,IAAAC,GAAA,YAAA,IAAAC,EAAA,CAAA,EACO,IAAMD,GAAS/D,GAAM,CAC1B,OAAQ,IACR,KAAM,SACN,SAAU,sCACZ,CAAC,EACYgE,GAAchE,GAAM,CAC/B,OAAQ,IACR,KAAM,cACN,SAAU,sCACZ,CAAC,ECVDiE,GAAA,CAAA,EAAA3sB,EAAA2sB,GAAA,CAAA,OAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,UAAA,IAAAC,GAAA,aAAA,IAAAC,EAAA,CAAA,EACO,IAAMH,GAASzD,EAAQ,CAC5B,OAAQ,IACR,KAAM,SACN,SAAU,mEACV,YAAa,CACf,CAAC,EACY0D,GAAY1D,EAAQ,CAC/B,OAAQ,IACR,KAAM,YACN,SAAU,oEACV,YAAa,CACf,CAAC,EACY2D,GAAY3D,EAAQ,CAC/B,OAAQ,IACR,KAAM,YACN,SAAU,mEACV,YAAa,CACf,CAAC,EACY4D,GAAe5D,EAAQ,CAClC,OAAQ,IACR,KAAM,eACN,SAAU,oEACV,YAAa,CACf,CAAC,ECxBD6D,GAAA,CAAA,EAAAhtB,EAAAgtB,GAAA,CAAA,aAAA,IAAAC,EAAA,CAAA,EACA,IAAMC,GAAW,MAAM,KAAK,orEAAs2F,EAC53FC,GAAuBD,GAAS,OAAO,CAAC5N,EAAGpiB,EAAGkB,KAClDkhB,EAAElhB,CAAA,EAAKlB,EACAoiB,GACN,CAAC,CAAC,EACC8N,GAAuBF,GAAS,OAAO,CAAC5N,EAAGpiB,EAAGkB,KAClDkhB,EAAEpiB,EAAE,YAAY,CAAC,CAAA,EAAKkB,EACfkhB,GACN,CAAC,CAAC,EACL,SAAA+N,GAAgBrd,EAAM,CACpB,OAAOA,EAAK,OAAO,CAACsP,EAAGpiB,KACrBoiB,GAAK6N,GAAqBjwB,CAAA,EACnBoiB,GACN,EAAE,CACP,CACA,SAAAgO,GAAgBtxB,EAAK,CACnB,IAAMuxB,EAAO,CAAC,EACd,QAAWC,KAAQxxB,EAAK,CACtB,IAAMyxB,EAAML,GAAqBI,EAAK,YAAY,CAAC,CAAA,EACnD,GAAIC,IAAQ,OACV,MAAM,IAAI,MAAM,+BAAgCD,GAAO,EAEzDD,EAAK,KAAKE,CAAG,EAEf,OAAO,IAAI,WAAWF,CAAI,CAC5B,CACO,IAAMN,GAAexE,GAAK,CAC/B,OAAQ,YACR,KAAM,eACN,OAAA4E,GACA,OAAAC,EACF,CAAC,EChCDI,GAAA,CAAA,EAAA1tB,EAAA0tB,GAAA,CAAA,OAAA,IAAAC,GAAA,OAAA,IAAAC,EAAA,CAAA,ECCO,IAAMC,GAAO,CAAC,CAAC,KAAAhhB,EAAM,KAAA1Q,EAAM,OAAAqqB,CAAA,IAAY,IAAIsH,GAAOjhB,EAAM1Q,EAAMqqB,CAAM,EAC9DsH,GAAN,KAAa,CAClB,YAAYjhB,EAAM1Q,EAAMqqB,EAAQ,CAC9B,KAAK,KAAO3Z,EACZ,KAAK,KAAO1Q,EACZ,KAAK,OAASqqB,CAChB,CACA,OAAOtS,EAAO,CACZ,GAAIA,aAAiB,WAAY,CAC/B,IAAMT,EAAS,KAAK,OAAOS,CAAK,EAChC,OAAOT,aAAkB,WAAoB0R,GAAO,KAAK,KAAM1R,CAAM,EAAIA,EAAO,KAAK2R,GAAiBD,GAAO,KAAK,KAAMC,CAAM,CAAC,MAE/H,OAAM,MAAM,mCAAmC,CAEnD,CACF,EDfM2I,GAAMlhB,GAAQ,MAAMmD,GAAQ,IAAI,WAAW,MAAM,OAAO,OAAO,OAAOnD,EAAMmD,CAAI,CAAC,EAC1E2d,GAASE,GAAK,CACzB,KAAM,WACN,KAAM,GACN,OAAQE,GAAI,SAAS,CACvB,CAAC,EACYH,GAASC,GAAK,CACzB,KAAM,WACN,KAAM,GACN,OAAQE,GAAI,SAAS,CACvB,CAAC,EEXDC,GAAA,CAAA,EAAAhuB,EAAAguB,GAAA,CAAA,SAAA,IAAAC,EAAA,CAAA,EAEA,IAAMC,GAAO,EACPC,GAAO,WACPC,GAASpJ,GACTqJ,GAASna,GAAgBiR,GAAO+I,GAAME,GAAOla,CAAK,CAAC,EAC5C+Z,GAAW,CACtB,KAAAC,GACA,KAAAC,GACA,OAAAC,GACA,OAAAC,EACF,ECXMC,GAAc,IAAI,YAClBC,GAAc,IAAI,YCoBlBC,GAAQ,CACZ,GAAG3C,GACH,GAAGE,GACH,GAAGE,GACH,GAAGE,GACH,GAAGE,GACH,GAAGjD,GACH,GAAGoD,GACH,GAAG5G,GACH,GAAG+G,GACH,GAAGK,EACL,EACMyB,GAAS,CACb,GAAGf,GACH,GAAGM,EACL,ECnCA,SAAAU,GAAqB7hB,EAAMkb,EAAQvB,EAAQiB,EAAQ,CACjD,MAAO,CACL,KAAA5a,EACA,OAAAkb,EACA,QAAS,CACP,KAAAlb,EACA,OAAAkb,EACA,OAAAvB,CACF,EACA,QAAS,CAAE,OAAAiB,CAAO,CACpB,CACF,CACA,IAAMkH,GAASD,GAAY,OAAQ,IAAKnL,GAE/B,IADS,IAAI,YAAY,MAAM,EACjB,OAAOA,CAAG,EAC9BvnB,GACe,IAAI,YAAY,EACjB,OAAOA,EAAI,UAAU,CAAC,CAAC,CACvC,EACK4yB,GAAQF,GAAY,QAAS,IAAKnL,GAAO,CAC7C,IAAIxlB,EAAS,IACb,QAASK,EAAI,EAAGA,EAAImlB,EAAI,OAAQnlB,IAC9BL,GAAU,OAAO,aAAawlB,EAAInlB,CAAA,CAAE,EAEtC,OAAOL,CACT,EAAG/B,GAAO,CACRA,EAAMA,EAAI,UAAU,CAAC,EACrB,IAAMunB,EAAM,IAAI,WAAWvnB,EAAI,MAAM,EACrC,QAASoC,EAAI,EAAGA,EAAIpC,EAAI,OAAQoC,IAC9BmlB,EAAInlB,CAAA,EAAKpC,EAAI,WAAWoC,CAAC,EAE3B,OAAOmlB,CACT,CAAC,EACKsL,GAAQ,CACZ,KAAMF,GACN,QAASA,GACT,IAAKH,GAAM,OACX,OAAQI,GACR,MAAAA,GACA,OAAQA,GACR,GAAGJ,EACL,EACOM,GAAQD,GC1CR,SAAAE,GAAoBhxB,EAAQixB,EAAW,OAAQ,CACpD,IAAMzhB,EAAOuhB,GAAME,CAAA,EACnB,GAAI,CAACzhB,EACH,MAAM,IAAI,MAAM,yBAA0ByhB,IAAY,EAExD,OAAOzhB,EAAK,QAAQ,OAAO,GAAIA,EAAK,SAAWxP,GAAS,CAC1D,CCNO,SAAAkxB,GAAkB1f,EAAOyf,EAAW,OAAQ,CACjD,IAAMzhB,EAAOuhB,GAAME,CAAA,EACnB,GAAI,CAACzhB,EACH,MAAM,IAAI,MAAM,yBAA0ByhB,IAAY,EAExD,OAAOzhB,EAAK,QAAQ,OAAOgC,CAAK,EAAE,UAAU,CAAC,CAC/C,CCgBO,IAAM2f,GAAc5gB,GAA8B,CAEvD,GAAI,MAAM,QAAQA,CAAG,EACnB,OAAOA,EAAI,IAAKO,GAASqgB,GAAWrgB,CAAI,CAAC,EAG3C,GAAIP,GAAO,OAAOA,GAAQ,SAAU,CAElC,GAAI,OAAOA,EAAI,OAAa,UAAY,OAAO,KAAKA,CAAG,EAAE,SAAW,EAClE,OAAOwb,EAAI,MAAMxb,EAAI,KAAQ,EAE/B,GAAI,OAAOA,EAAI,QAAc,UAAY,OAAO,KAAKA,CAAG,EAAE,SAAW,EACnE,OAAWygB,GAAWzgB,EAAI,OAAW,QAAQ,EAG/C,IAAM6gB,EAAW,CAAC,EAClB,QAAWhgB,KAAO,OAAO,KAAKb,CAAG,EAC/B6gB,EAAShgB,CAAA,EAAO+f,GAAW5gB,EAAIa,CAAA,CAAI,EAErC,OAAOggB,EAGT,OAAO7gB,CACT,EAEa8gB,GAAc9gB,GAA8B,CAEvD,GAAI,MAAM,QAAQA,CAAG,EACnB,OAAOA,EAAI,IAAKO,GAASugB,GAAWvgB,CAAI,CAAC,EAG3C,GAAIP,GAAO,OAAOA,GAAQ,SAAU,CAElC,GAAIA,aAAe,WACjB,MAAO,CACL,OAAY2gB,GAAS3gB,EAAK,QAAQ,CACpC,EAGF,GAAIwb,EAAI,MAAMxb,CAAG,EACf,MAAO,CACL,MAAQA,EAAY,SAAS,CAC/B,EAGF,IAAM6gB,EAAW,CAAC,EAClB,QAAWhgB,KAAO,OAAO,KAAKb,CAAG,EAC/B6gB,EAAShgB,CAAA,EAAOigB,GAAW9gB,EAAIa,CAAA,CAAI,EAErC,OAAOggB,EAGT,OAAO7gB,CACT,ECxEM+gB,GAAYjN,EACf,IAAI,EACJ,OAAQxT,GAAiBkb,EAAI,MAAMlb,CAAG,IAAM,KAAM,CACjD,QAAS,WACX,CAAC,EACA,UAAWA,GAAiBkb,EAAI,MAAMlb,CAAG,CAAQ,EAEvC0gB,GAAS,CACpB,IAAKD,GACL,MAAOjN,EAAE,WAAW,UAAU,EAC9B,OAAQA,EAAE,OAAO,EACjB,MAAOA,EAAE,MAAMA,EAAE,QAAQ,CAAC,EAC1B,IAAKA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,QAAQ,CAAC,EACrC,QAASA,EAAE,QAAQ,CACrB,EAEamN,GAAM,CACjB,IAAK,CACH,KAAM,MACN,OAAQD,GAAO,GACjB,EACA,MAAO,CACL,KAAM,QACN,OAAQA,GAAO,KACjB,EACA,OAAQ,CACN,KAAM,SACN,OAAQA,GAAO,MACjB,EACA,IAAK,CACH,KAAM,MACN,OAAQA,GAAO,GACjB,EACA,QAAS,CACP,KAAM,UACN,OAAQA,GAAO,OACjB,CACF,ECzCaE,GAAS,IACTC,GAASD,GAAS,GAClBE,GAAOD,GAAS,GAChBE,GAAMD,GAAO,GCH1BE,GAAsBC,GAAArxB,GAAA,CAAA,EAITsxB,GAAW9zB,GACf,IAAI,YAAY,EAAE,OAAOA,CAAG,EAAE,WAI1B+zB,GAAe/zB,GACT,IAAI4zB,GAAA,QAAU,EACf,eAAe5zB,CAAG,EAWvB2P,GAAiBqkB,GAAwC,CACpE,IAAMxiB,EAASwiB,EAAQ,MAAMC,EAAW,EACxC,GAAI,CAACziB,GAAQ,OAAQ,OAAO,KAC5B,IAAMhB,EAAQgB,EAAO,OACrB,MAAO,CACL,cAAehB,EAAM,cACrB,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,QAASA,EAAM,QACf,UAAWA,EAAM,UACjB,WAAYA,EAAM,aAAeA,EAAM,WACzC,CACF,EAEa0jB,GAAoBF,GACxBC,GAAY,KAAKD,CAAO,EAe3BC,GACJ,olBClDWE,GAAiBC,GACrBC,GAAY,UAAUD,CAAG,EAAE,QAGvBE,GAAUF,GAA6B,CAClD,IAAMG,EAAKH,EAAI,GACf,GAAI,OAAOG,GAAO,SAChB,MAAM,IAAI,MAAM,qBAAqB,EAEvC,OAAOA,CACT,EAgCaC,GAAkBJ,GACtBK,GAAmBL,EAAK,CAC7B,GAAI,eACJ,KAAM,2BACR,CAAC,EAiBUK,GAAqB,CAChCL,EACAM,IACG,CACH,IAAMpkB,EAAMgkB,GAAOF,CAAG,EAClBO,EAAWP,EAAI,QAEnB,GADI,CAACO,GACD,OAAOA,GAAa,SAAU,OAC7B,MAAM,QAAQA,CAAQ,IACzBA,EAAW,CAACA,CAAQ,GAEtB,IAAMC,EAAQD,EAAS,KACpBE,GAAYA,EAAQ,KAAOH,EAAK,IAAMG,EAAQ,KAAO,GAAGvkB,IAAMokB,EAAK,IACtE,EACA,GAAKE,GACDA,EAAM,OAASF,EAAK,MAGpB,OAAOE,EAAM,iBAAoB,SAGrC,OAAOE,GAAYF,EAAM,eAAe,CAC1C,EAGME,GAAeC,GAAuC,CAC1D,IAAIC,EACJ,GAAI,CACFA,EAAM,IAAI,IAAID,CAAM,CACtB,MAAA,CACE,MACF,CACA,GAAK,CAAC,QAAS,QAAQ,EAAE,SAASC,EAAI,QAAQ,EAE9C,OAAYA,EAAI,SAGPD,EAFP,MAIJ,EAKME,GAAqB7O,EAAE,OAAO,CAClC,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,OAAO,EACf,WAAYA,EAAE,OAAO,EACrB,mBAAoBA,EAAE,OAAO,EAAE,SAAS,CAC1C,CAAC,EAEK8O,GAAU9O,EAAE,OAAO,CACvB,GAAIA,EAAE,OAAO,EACb,KAAMA,EAAE,OAAO,EACf,gBAAiBA,EAAE,MAAM,CAACA,EAAE,OAAO,EAAGA,EAAE,OAAOA,EAAE,QAAQ,CAAC,CAAC,CAAC,CAC9D,CAAC,EAEYiO,GAAcjO,EAAE,OAAO,CAClC,GAAIA,EAAE,OAAO,EACb,YAAaA,EAAE,MAAMA,EAAE,OAAO,CAAC,EAAE,SAAS,EAC1C,mBAAoBA,EAAE,MAAM6O,EAAkB,EAAE,SAAS,EACzD,QAAS7O,EAAE,MAAM8O,EAAO,EAAE,SAAS,CACrC,CAAC,EClIDC,GAAqCtB,GAAAnxB,GAAA,CAAA,EAW9B,SAAA0yB,GAAkBpjB,EAAcxQ,EAAiC,CACtE,GAAI,CACF,GAAI,IAAC2zB,GAAA,sBAAqB3zB,CAAK,EAC7B,MAAM,IAAI,KAEd,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EACT,GAAGrjB,kEACL,CACF,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAA8zB,GAAatjB,EAAcxQ,EAAiC,CAEjE,OADcA,EAAM,MAAM,6BAA6B,IAAM,KAOtD,CAAE,QAAS,GAAM,MAAAA,CAAM,EALrB,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,iBAAoB,CACpD,CAGJ,CAEO,SAAAujB,GAAevjB,EAAcxQ,EAAiC,CACnE,GAAI,CACFyP,GAAiBzP,CAAK,CACxB,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,0BAA6B,CAC7D,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAAg0B,GAAaxjB,EAAcxQ,EAAiC,CACjE,GAAI,CACF6O,GAAe7O,CAAK,CACtB,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,uBAA0B,CAC1D,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAAi0B,GAAgBzjB,EAAcxQ,EAAiC,CACpE,GAAI,CACFwO,GAAkBxO,CAAK,CACzB,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,0BAA6B,CAC7D,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAAk0B,GAAsB1jB,EAAcxQ,EAAiC,CAE1E,MAAI,CADUg0B,GAAIxjB,EAAMxQ,CAAK,EAClB,SAEL,CADai0B,GAAOzjB,EAAMxQ,CAAK,EACrB,QACL,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,mCAAsC,CACtE,EAGG,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAAm0B,GAAc3jB,EAAcxQ,EAAiC,CAClE,GAAI,CACFmP,GAAgBnP,CAAK,CACvB,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,wBAA2B,CAC3D,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAAo0B,GAAa5jB,EAAcxQ,EAAiC,CACjE,GAAI,CACFssB,EAAI,MAAMtsB,CAAK,CACjB,MAAA,CACE,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,wBAA2B,CAC3D,CACF,CACA,MAAO,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAGO,SAAAq0B,GAAkB7jB,EAAcxQ,EAAiC,CACtE,OAAI0yB,GAAiB1yB,CAAK,EACjB,CAAE,QAAS,GAAM,MAAAA,CAAM,EAEzB,CACL,QAAS,GACT,MAAO,IAAI6zB,EACT,GAAGrjB,6CACL,CACF,CACF,CC7GO,SAAA8jB,GACLC,EACA/jB,EACAiG,EACAzW,EACkB,CAClB,OAAQyW,EAAI,KAAA,CAAA,IACL,UACH,OAAO+d,GAAQD,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACtC,UACH,OAAOy0B,GAAQF,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACtC,SACH,OAAO00B,GAAOH,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACrC,QACH,OAAO20B,GAAMJ,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACpC,WACH,OAAO40B,GAAQL,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACtC,UACH,OAAO60B,GAAQN,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,QAEzC,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,4BAA4Bpd,EAAI,MAAM,CACnE,CAAA,CAEN,CAEO,SAAA+d,GACLD,EACA/jB,EACAiG,EACAzW,EACkB,CAClByW,EAAMA,EAGN,IAAMyG,EAAO,OAAOld,EACpB,OAAIkd,IAAS,YACP,OAAOzG,EAAI,SAAY,UAClB,CAAE,QAAS,GAAM,MAAOA,EAAI,OAAQ,EAEtC,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,qBAAwB,CACxD,EACS0M,IAAS,UACX,CACL,QAAS,GACT,MAAO,IAAI2W,EAAgB,GAAGrjB,qBAAwB,CACxD,EAIE,OAAOiG,EAAI,OAAU,WACnBzW,IAAUyW,EAAI,MACT,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,aAAgBiG,EAAI,OAAO,CAC3D,EAIG,CAAE,QAAS,GAAM,MAAAzW,CAAM,CAChC,CAEO,SAAAy0B,GACLF,EACA/jB,EACAiG,EACAzW,EACkB,CAKlB,OAJAyW,EAAMA,EAGO,OAAOzW,IACP,YACP,OAAOyW,EAAI,SAAY,SAClB,CAAE,QAAS,GAAM,MAAOA,EAAI,OAAQ,EAEtC,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,sBAAyB,CACzD,EACU,OAAO,UAAUxQ,CAAK,EAQ9B,OAAOyW,EAAI,OAAU,UACnBzW,IAAUyW,EAAI,MACT,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,aAAgBiG,EAAI,OAAO,CAC3D,EAKA,MAAM,QAAQA,EAAI,IAAI,GACpB,CAACA,EAAI,KAAK,SAASzW,CAAe,EAC7B,CACL,QAAS,GACT,MAAO,IAAI6zB,EACT,GAAGrjB,qBAAwBiG,EAAI,KAAK,KAAK,GAAG,IAC9C,CACF,EAKA,OAAOA,EAAI,SAAY,UACpBzW,EAAmByW,EAAI,QACnB,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,6BAAgCiG,EAAI,SACzC,CACF,EAKA,OAAOA,EAAI,SAAY,UACpBzW,EAAmByW,EAAI,QACnB,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,0BAA6BiG,EAAI,SACtC,CACF,EAIG,CAAE,QAAS,GAAM,MAAAzW,CAAM,EApDrB,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,sBAAyB,CACzD,CAkDJ,CAEO,SAAAkkB,GACLH,EACA/jB,EACAiG,EACAzW,EACkB,CAIlB,GAHAyW,EAAMA,EAGF,OAAOzW,EAAU,IACnB,OAAI,OAAOyW,EAAI,SAAY,SAClB,CAAE,QAAS,GAAM,MAAOA,EAAI,OAAQ,EAEtC,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,oBAAuB,CACvD,EACF,GAAW,OAAOxQ,GAAU,SAC1B,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,oBAAuB,CACvD,EAIF,GAAI,OAAOiG,EAAI,OAAU,UACnBzW,IAAUyW,EAAI,MAChB,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EAAgB,GAAGrjB,aAAgBiG,EAAI,OAAO,CAC3D,EAKJ,GAAI,MAAM,QAAQA,EAAI,IAAI,GACpB,CAACA,EAAI,KAAK,SAASzW,CAAe,EACpC,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EACT,GAAGrjB,qBAAwBiG,EAAI,KAAK,KAAK,GAAG,IAC9C,CACF,EAKJ,GAAI,OAAOA,EAAI,WAAc,UACvB6b,GAAQtyB,CAAK,EAAIyW,EAAI,UACvB,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,6BAAgCiG,EAAI,sBACzC,CACF,EAKJ,GAAI,OAAOA,EAAI,WAAc,UACvB6b,GAAQtyB,CAAK,EAAIyW,EAAI,UACvB,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,8BAAiCiG,EAAI,sBAC1C,CACF,EAKJ,GAAI,OAAOA,EAAI,cAAiB,UAC1B8b,GAAYvyB,CAAK,EAAIyW,EAAI,aAC3B,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,6BAAgCiG,EAAI,wBACzC,CACF,EAKJ,GAAI,OAAOA,EAAI,cAAiB,UAC1B8b,GAAYvyB,CAAK,EAAIyW,EAAI,aAC3B,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,8BAAiCiG,EAAI,wBAC1C,CACF,EAIJ,GAAI,OAAOA,EAAI,QAAW,SACxB,OAAQA,EAAI,OAAA,CAAA,IACL,WACH,OAAemd,GAASpjB,EAAMxQ,CAAK,EAAA,IAChC,MACH,OAAe8zB,GAAItjB,EAAMxQ,CAAK,EAAA,IAC3B,SACH,OAAe+zB,GAAMvjB,EAAMxQ,CAAK,EAAA,IAC7B,MACH,OAAeg0B,GAAIxjB,EAAMxQ,CAAK,EAAA,IAC3B,SACH,OAAei0B,GAAOzjB,EAAMxQ,CAAK,EAAA,IAC9B,gBACH,OAAek0B,GAAa1jB,EAAMxQ,CAAK,EAAA,IACpC,OACH,OAAem0B,GAAK3jB,EAAMxQ,CAAK,EAAA,IAC5B,MACH,OAAeo0B,GAAI5jB,EAAMxQ,CAAK,EAAA,IAC3B,WACH,OAAeq0B,GAAS7jB,EAAMxQ,CAAK,CAAA,CAIzC,MAAO,CAAE,QAAS,GAAM,MAAAA,CAAM,CAChC,CAEO,SAAA20B,GACLJ,EACA/jB,EACAiG,EACAzW,EACkB,CAGlB,OAFAyW,EAAMA,EAEF,CAACzW,GAAS,EAAEA,aAAiB,YACxB,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,wBAA2B,CAC3D,EAIE,OAAOiG,EAAI,WAAc,UACvBzW,EAAM,WAAayW,EAAI,UAClB,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,6BAAgCiG,EAAI,iBACzC,CACF,EAKA,OAAOA,EAAI,WAAc,UACvBzW,EAAM,WAAayW,EAAI,UAClB,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,8BAAiCiG,EAAI,iBAC1C,CACF,EAIG,CAAE,QAAS,GAAM,MAAAzW,CAAM,CAChC,CAEO,SAAA40B,GACLL,EACA/jB,EACAiG,EACAzW,EACkB,CAClB,OAAIssB,EAAI,MAAMtsB,CAAK,IAAM,KAChB,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,iBAAoB,CACpD,EAGK,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CAEO,SAAA60B,GACLN,EACA/jB,EACAiG,EACAzW,EACkB,CAElB,MAAI,CAACA,GAAS,OAAOA,GAAU,SACtB,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,qBAAwB,CACxD,EAGK,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CCtVO,IAAM80B,GAAmBlQ,EAC7B,OAAO,CACN,MAAOA,EAAE,QAAQ,MAAM,EACvB,IAAKkN,GAAO,IACZ,SAAUlN,EAAE,OAAO,EACnB,KAAMA,EAAE,OAAO,CACjB,CAAC,EACA,OAAO,EAGGmQ,GAAqBnQ,EAC/B,OAAO,CACN,IAAKA,EAAE,OAAO,EACd,SAAUA,EAAE,OAAO,CACrB,CAAC,EACA,OAAO,EAGGoQ,GAAcpQ,EAAE,MAAM,CAACkQ,GAAkBC,EAAkB,CAAC,EAG5D5tB,GAAN,KAAc,CAGnB,YACS8tB,EACAC,EACApV,EACPqV,EACA,CAJO,KAAA,IAAAF,EACA,KAAA,SAAAC,EACA,KAAA,KAAApV,EAGP,KAAK,SAAWqV,GAAY,CAC1B,MAAO,OACP,IAAAF,EACA,SAAAC,EACA,KAAApV,CACF,CACF,CAEA,OAAO,UAAU1O,EAA8B,CAC7C,OAAIyT,GAAM,GAAGzT,EAAK4jB,EAAW,EACpB7tB,GAAQ,YAAYiK,CAAG,EAEzB,IACT,CAEA,OAAO,YAAYgkB,EAA4B,CAC7C,OAAIvQ,GAAM,GAAGuQ,EAAMN,EAAgB,EAC1B,IAAI3tB,GAAQiuB,EAAK,IAAKA,EAAK,SAAUA,EAAK,IAAI,EAE9C,IAAIjuB,GAAQmlB,EAAI,MAAM8I,EAAK,GAAG,EAAGA,EAAK,SAAU,GAAIA,CAAI,CAEnE,CAEA,MAAyB,CACvB,MAAO,CACL,MAAO,OACP,IAAK,KAAK,IACV,SAAU,KAAK,SACf,KAAM,KAAK,IACb,CACF,CAEA,QAAS,CACP,OAAOxD,GAAW,KAAK,KAAK,CAAC,CAC/B,CACF,ECjEO,SAAAyD,GACLd,EACA/jB,EACAiG,EACAzW,EACkB,CAElB,MAAI,CAACA,GAAS,EAAEA,aAAiBmH,IACxB,CACL,QAAS,GACT,MAAO,IAAI0sB,EAAgB,GAAGrjB,wBAA2B,CAC3D,EAEK,CAAE,QAAS,GAAM,MAAAxQ,CAAM,CAChC,CCLO,SAAAs1B,GACLf,EACA/jB,EACAiG,EACAzW,EACkB,CAClB,OAAQyW,EAAI,KAAA,CAAA,IACL,UACH,OAAkB+d,GAAQD,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACjD,UACH,OAAkBy0B,GAAQF,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACjD,SACH,OAAkB00B,GAAOH,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IAChD,QACH,OAAkB20B,GAAMJ,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IAC/C,WACH,OAAkB40B,GAAQL,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACjD,UACH,OAAkB60B,GAAQN,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACjD,SACH,OAAOu1B,GAAOhB,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACrC,QACH,OAAOw1B,GAAMjB,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,IACpC,OACH,OAAYq1B,GAAKd,EAAU/jB,EAAMiG,EAAKzW,CAAK,EAAA,QAE3C,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,4BAA4Bpd,EAAI,MAAM,CACnE,CAAA,CAEN,CAEO,SAAA+e,GACLjB,EACA/jB,EACAiG,EACAzW,EACkB,CAElB,GAAI,CAAC,MAAM,QAAQA,CAAK,EACtB,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,oBAAuB,CACvD,EAIF,GAAI,OAAOiG,EAAI,WAAc,UACtBzW,EAAyB,OAASyW,EAAI,UACzC,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,6BAAgCiG,EAAI,oBACzC,CACF,EAKJ,GAAI,OAAOA,EAAI,WAAc,UACtBzW,EAAyB,OAASyW,EAAI,UACzC,MAAO,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,8BAAiCiG,EAAI,oBAC1C,CACF,EAKJ,IAAMgf,EAAWhf,EAAI,MACrB,QAAS7V,EAAI,EAAGA,EAAKZ,EAAyB,OAAQY,IAAK,CACzD,IAAM80B,EAAY11B,EAAMY,CAAA,EAClB+0B,EAAW,GAAGnlB,KAAQ5P,IACtBE,EAAM80B,GAAcrB,EAAUoB,EAAUF,EAAUC,CAAS,EACjE,GAAI,CAAC50B,EAAI,QACP,OAAOA,EAIX,MAAO,CAAE,QAAS,GAAM,MAAAd,CAAM,CAChC,CAEO,SAAAu1B,GACLhB,EACA/jB,EACAiG,EACAzW,EACkB,CAIlB,GAHAyW,EAAMA,EAGF,CAACzW,GAAS,OAAOA,GAAU,SAC7B,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EAAgB,GAAGrjB,qBAAwB,CACxD,EAGF,IAAMqlB,EAAgB,IAAI,IAAIpf,EAAI,QAAQ,EACpCqf,EAAgB,IAAI,IAAIrf,EAAI,QAAQ,EAGtCsf,EAAc/1B,EAClB,GAAI,OAAOyW,EAAI,YAAe,SAC5B,QAAW9E,KAAO8E,EAAI,WAAY,CAChC,GAAIzW,EAAM2R,CAAA,IAAS,MAAQmkB,EAAc,IAAInkB,CAAG,EAC9C,SAEF,IAAMqkB,EAAUvf,EAAI,WAAW9E,CAAA,EACzBskB,EAAW,GAAGzlB,KAAQmB,IACtBukB,EAAYN,GAAcrB,EAAU0B,EAAUD,EAASh2B,EAAM2R,CAAA,CAAI,EACjEwkB,EAAYD,EAAU,QAAUA,EAAU,MAAQl2B,EAAM2R,CAAA,EACxDykB,EAAkB,OAAOD,EAAc,IAE7C,GAAIC,GAAmBP,EAAc,IAAIlkB,CAAG,EAC1C,MAAO,CACL,QAAS,GACT,MAAO,IAAIkiB,EAAgB,GAAGrjB,6BAAgCmB,IAAM,CACtE,EACF,GAAW,CAACykB,GAAmB,CAACF,EAAU,QACxC,OAAOA,EAGLC,IAAcn2B,EAAM2R,CAAA,IAClBokB,IAAgB/1B,IAElB+1B,EAAc,CAAE,GAAG/1B,CAAM,GAE3B+1B,EAAYpkB,CAAA,EAAOwkB,GAKzB,MAAO,CAAE,QAAS,GAAM,MAAOJ,CAAY,CAC7C,CC3IO,SAAAM,EAAkB73B,EAAa83B,EAA0B,CAC9D,GAAI93B,EAAI,MAAM,GAAG,EAAE,OAAS,EAC1B,MAAM,IAAI,MAAM,oCAAoC,EAGtD,GAAIA,EAAI,WAAW,MAAM,EACvB,OAAOA,EAET,GAAIA,EAAI,WAAW,GAAG,EAAG,CACvB,GAAI,CAAC83B,EACH,MAAM,IAAI,MAAM,yCAAyC93B,GAAK,EAEhE,MAAO,GAAG83B,IAAU93B,IAEtB,MAAO,OAAOA,GAChB,CAEO,SAAAo3B,GACLrB,EACA/jB,EACAiG,EACAzW,EACAu2B,EAAY,GACM,CAClB,IAAIljB,EAEAmjB,EACJ,GAAI/f,EAAI,OAAS,QAAS,CACxB,GAAI,CAACggB,GAAsBz2B,CAAK,EAC9B,MAAO,CACL,QAAS,GACT,MAAO,IAAI6zB,EACT,GAAGrjB,yDACL,CACF,EAEF,GAAKkmB,GAAgBjgB,EAAI,KAAMzW,EAAM,KAAK,EAWxCw2B,EAAeG,GAAgBpC,EAAU,CACvC,KAAM,MACN,IAAKv0B,EAAM,KACb,CAAC,MAbD,QAAIyW,EAAI,OACC,CACL,QAAS,GACT,MAAO,IAAIod,EACT,GAAGrjB,0BAA6BiG,EAAI,KAAK,KAAK,IAAI,GACpD,CACF,EAEK,CAAE,QAAS,GAAM,MAAAzW,CAAM,OAQhCw2B,EAAeG,GAAgBpC,EAAU9d,CAAG,EAG9C,QAAWmgB,KAAeJ,EAAc,CACtC,IAAMvgB,EAASsgB,EACOhB,GAAOhB,EAAU/jB,EAAMomB,EAAa52B,CAAK,EACzCs1B,GAASf,EAAU/jB,EAAMomB,EAAa52B,CAAK,EACjE,GAAIiW,EAAO,QACT,OAAOA,EAET5C,IAAAA,EAAU4C,EAAO,OAEnB,OAAIugB,EAAa,OAAS,EACjB,CACL,QAAS,GACT,MAAO,IAAI3C,EACT,GAAGrjB,iDACL,CACF,EAEK,CAAE,QAAS,GAAO,MAAA6C,CAAM,CACjC,CAEO,SAAAwjB,GACLtC,EACA/jB,EACAiG,EACAzW,EACAu2B,EAAY,GACZ,CACA,IAAMz1B,EAAM80B,GAAcrB,EAAU/jB,EAAMiG,EAAKzW,EAAOu2B,CAAS,EAC/D,GAAI,CAACz1B,EAAI,QAAS,MAAMA,EAAI,MAC5B,OAAOA,EAAI,KACb,CAEO,SAAA61B,GACLpC,EACA9d,EACe,CACf,OAAIA,EAAI,OAAS,MACR,CAAC8d,EAAS,cAAc9d,EAAI,GAAG,CAAC,EAC9BA,EAAI,OAAS,QACfA,EAAI,KAAK,IAAKwe,GAAQV,EAAS,cAAcU,CAAG,CAAC,EAAE,KAAK,EAExD,CAACxe,CAAG,CAEf,CAEO,SAAAqgB,GAKLrlB,EAAoBkD,EAAsB,CAE1C,GAAIlD,EAAO,WAAa,OAIxB,IAAI,CAAC,MAAM,QAAQA,EAAO,QAAQ,EAAG,CACnCkD,EAAI,SAAS,CACX,KAAMiQ,EAAE,aAAa,aACrB,SAAU,OAAOnT,EAAO,SACxB,SAAU,OACZ,CAAC,EACD,OAGF,GAAIA,EAAO,aAAe,OAAW,CAC/BA,EAAO,SAAS,OAAS,GAC3BkD,EAAI,SAAS,CACX,KAAMiQ,EAAE,aAAa,OACrB,QAAS,mDACX,CAAC,EAEH,OAGF,QAAWmS,KAAStlB,EAAO,SACrBA,EAAO,WAAWslB,CAAA,IAAW,QAC/BpiB,EAAI,SAAS,CACX,KAAMiQ,EAAE,aAAa,OACrB,QAAS,mBAAmBmS,gBAC9B,CAAC,EAGP,CAIA,IAAML,GAAkB,CAACM,EAAgB9Z,IAAiB,CACxD,IAAM+Z,EAASZ,EAASnZ,CAAI,EAC5B,OAAI8Z,EAAK,SAASC,CAAM,EACf,GAGLA,EAAO,SAAS,OAAO,EAClBD,EAAK,SAASC,EAAO,QAAQ,QAAS,EAAE,CAAC,EAEzCD,EAAK,SAASC,EAAS,OAAO,CAEzC,EC9JaC,GAAatS,EACvB,OAAO,CACN,KAAMA,EAAE,QAAQ,SAAS,EACzB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,QAASA,EAAE,QAAQ,EAAE,SAAS,EAC9B,MAAOA,EAAE,QAAQ,EAAE,SAAS,CAC9B,CAAC,EACA,OAAO,EAGGuS,GAAavS,EACvB,OAAO,CACN,KAAMA,EAAE,QAAQ,SAAS,EACzB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,QAASA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACnC,QAASA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACnC,QAASA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACnC,KAAMA,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EACxC,MAAOA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CACnC,CAAC,EACA,OAAO,EAGGwS,GAAkBxS,EAAE,KAAK,CACpC,WACA,MACA,SACA,MACA,SACA,gBACA,OACA,MACA,UACF,CAAC,EAGYyS,GAAYzS,EACtB,OAAO,CACN,KAAMA,EAAE,QAAQ,QAAQ,EACxB,OAAQwS,GAAgB,SAAS,EACjC,YAAaxS,EAAE,OAAO,EAAE,SAAS,EACjC,QAASA,EAAE,OAAO,EAAE,SAAS,EAC7B,UAAWA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACrC,UAAWA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACrC,aAAcA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACxC,aAAcA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACxC,KAAMA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAClC,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,YAAaA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAC3C,CAAC,EACA,OAAO,EAGG0S,GAAa1S,EACvB,OAAO,CACN,KAAMA,EAAE,QAAQ,SAAS,EACzB,YAAaA,EAAE,OAAO,EAAE,SAAS,CACnC,CAAC,EACA,OAAO,EAGG2S,GAAe3S,EAAE,mBAAmB,OAAQ,CACvDsS,GACAC,GACAE,GACAC,EACF,CAAC,EAMYE,GAAW5S,EACrB,OAAO,CACN,KAAMA,EAAE,QAAQ,OAAO,EACvB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,UAAWA,EAAE,OAAO,EAAE,SAAS,EAC/B,UAAWA,EAAE,OAAO,EAAE,SAAS,CACjC,CAAC,EACA,OAAO,EAGG6S,GAAa7S,EACvB,OAAO,CACN,KAAMA,EAAE,QAAQ,UAAU,EAC1B,YAAaA,EAAE,OAAO,EAAE,SAAS,CACnC,CAAC,EACA,OAAO,EAGG8S,GAAc9S,EAAE,mBAAmB,OAAQ,CAAC4S,GAAUC,EAAU,CAAC,EAMjEE,GAAS/S,EACnB,OAAO,CACN,KAAMA,EAAE,QAAQ,KAAK,EACrB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,IAAKA,EAAE,OAAO,CAChB,CAAC,EACA,OAAO,EAGGgT,GAAchT,EACxB,OAAO,CACN,KAAMA,EAAE,QAAQ,OAAO,EACvB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,KAAMA,EAAE,OAAO,EAAE,MAAM,EACvB,OAAQA,EAAE,QAAQ,EAAE,SAAS,CAC/B,CAAC,EACA,OAAO,EAGGiT,GAAgBjT,EAAE,mBAAmB,OAAQ,CAAC+S,GAAQC,EAAW,CAAC,EAMlEE,GAAUlT,EACpB,OAAO,CACN,KAAMA,EAAE,QAAQ,MAAM,EACtB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,OAAQA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACpC,QAASA,EAAE,OAAO,EAAE,SAAS,CAC/B,CAAC,EACA,OAAO,EAMGmT,GAAWnT,EACrB,OAAO,CACN,KAAMA,EAAE,QAAQ,OAAO,EACvB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,MAAOA,EAAE,MAAM,CAAC2S,GAAcG,GAAaI,GAASD,EAAa,CAAC,EAClE,UAAWjT,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACrC,UAAWA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CACvC,CAAC,EACA,OAAO,EAGGoT,GAAoBD,GAAS,MACxCnT,EACG,OAAO,CACN,MAAO2S,EACT,CAAC,EACA,OAAO,CACZ,EAGaU,GAAWrT,EACrB,OAAO,CACN,KAAMA,EAAE,QAAQ,OAAO,EACvB,YAAaA,EAAE,OAAO,EAAE,SAAS,CACnC,CAAC,EACA,OAAO,EAGGsT,GAAYtT,EACtB,OAAO,CACN,KAAMA,EAAE,QAAQ,QAAQ,EACxB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,SAAUA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACtC,SAAUA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACtC,WAAYA,EAAE,OACZA,EAAE,MAAM,CAACiT,GAAeH,GAAaK,GAAUD,GAASP,EAAY,CAAC,CACvE,CACF,CAAC,EACA,OAAO,EACP,YAAYT,EAA4B,EAM9BqB,GAAoBvT,EAC9B,OAAO,CACN,KAAMA,EAAE,QAAQ,QAAQ,EACxB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,SAAUA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACtC,WAAYA,EAAE,OAAOA,EAAE,MAAM,CAAC2S,GAAcS,EAAiB,CAAC,CAAC,CACjE,CAAC,EACA,OAAO,EACP,YAAYlB,EAA4B,EAG9BsB,GAAcxT,EACxB,OAAO,CACN,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,SAAUA,EAAE,OAAO,EACnB,OAAQA,EAAE,MAAM,CAACiT,GAAeK,EAAS,CAAC,EAAE,SAAS,CACvD,CAAC,EACA,OAAO,EAGGG,GAA6BzT,EACvC,OAAO,CACN,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,OAAQA,EAAE,MAAM,CAACiT,GAAeK,EAAS,CAAC,EAAE,SAAS,CACvD,CAAC,EACA,OAAO,EAKGI,GAAe1T,EACzB,OAAO,CACN,KAAMA,EAAE,OAAO,EACf,YAAaA,EAAE,OAAO,EAAE,SAAS,CACnC,CAAC,EACA,OAAO,EAGG2T,GAAe3T,EACzB,OAAO,CACN,KAAMA,EAAE,QAAQ,OAAO,EACvB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,WAAYuT,GAAkB,SAAS,EACvC,OAAQC,GAAY,SAAS,EAC7B,OAAQE,GAAa,MAAM,EAAE,SAAS,CACxC,CAAC,EACA,OAAO,EAGGE,GAAmB5T,EAC7B,OAAO,CACN,KAAMA,EAAE,QAAQ,WAAW,EAC3B,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,WAAYuT,GAAkB,SAAS,EACvC,MAAOC,GAAY,SAAS,EAC5B,OAAQA,GAAY,SAAS,EAC7B,OAAQE,GAAa,MAAM,EAAE,SAAS,CACxC,CAAC,EACA,OAAO,EAGGG,GAAsB7T,EAChC,OAAO,CACN,KAAMA,EAAE,QAAQ,cAAc,EAC9B,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,WAAYuT,GAAkB,SAAS,EACvC,QAASE,GAA2B,SAAS,EAC7C,OAAQC,GAAa,MAAM,EAAE,SAAS,CACxC,CAAC,EACA,OAAO,EAMGI,GAAY9T,EACtB,OAAO,CACN,KAAMA,EAAE,QAAQ,QAAQ,EACxB,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,IAAKA,EAAE,OAAO,EAAE,SAAS,EACzB,OAAQsT,EACV,CAAC,EACA,OAAO,EAUGS,GAAc/T,EAAE,OAgB1B9T,GAAQ,CACP,GAAI,GAACA,GAAO,OAAOA,GAAQ,WAIvBA,EAAI,OAAY,OAIpB,OAAQA,EAAI,KAAA,CAAA,IACL,SACH,OAAO4nB,GAAU,MAAM5nB,CAAG,EAAA,IAEvB,QACH,OAAOynB,GAAa,MAAMznB,CAAG,EAAA,IAC1B,YACH,OAAO0nB,GAAiB,MAAM1nB,CAAG,EAAA,IAC9B,eACH,OAAO2nB,GAAoB,MAAM3nB,CAAG,EAAA,IAEjC,OACH,OAAOgnB,GAAQ,MAAMhnB,CAAG,EAAA,IAErB,QACH,OAAOinB,GAAS,MAAMjnB,CAAG,EAAA,IACtB,QACH,OAAOmnB,GAAS,MAAMnnB,CAAG,EAAA,IACtB,SACH,OAAOonB,GAAU,MAAMpnB,CAAG,EAAA,IAEvB,UACH,OAAOomB,GAAW,MAAMpmB,CAAG,EAAA,IACxB,UACH,OAAOqmB,GAAW,MAAMrmB,CAAG,EAAA,IACxB,SACH,OAAOumB,GAAU,MAAMvmB,CAAG,EAAA,IACvB,QACH,OAAO0mB,GAAS,MAAM1mB,CAAG,EAAA,IACtB,WACH,OAAO2mB,GAAW,MAAM3mB,CAAG,EAAA,IACxB,UACH,OAAOwmB,GAAW,MAAMxmB,CAAG,CAAA,CAEjC,EACCA,GACK,CAACA,GAAO,OAAOA,GAAQ,SAClB,CACL,QAAS,oBACT,MAAO,EACT,EAGEA,EAAI,OAAY,OACX,CACL,QAAS,mBACT,MAAO,EACT,EAGK,CACL,QAAS,iBAAiBA,EAAI,8IAC9B,MAAO,EACT,CAEJ,EAGa8nB,GAAahU,EACvB,OAAO,CACN,QAASA,EAAE,QAAQ,CAAC,EACpB,GAAIA,EAAE,OAAO,EAAE,OAAQrU,GAActB,GAAK,QAAQsB,CAAC,EAAG,CACpD,QAAS,sBACX,CAAC,EACD,SAAUqU,EAAE,OAAO,EAAE,SAAS,EAC9B,YAAaA,EAAE,OAAO,EAAE,SAAS,EACjC,KAAMA,EAAE,OAAO+T,EAAW,CAC5B,CAAC,EACA,OAAO,EACP,YAAY,CAAC/F,EAAKje,IAAQ,CACzB,QAAWkkB,KAASjG,EAAI,KAAM,CAC5B,IAAMnc,EAAMmc,EAAI,KAAKiG,CAAA,EAEnBA,IAAU,SACTpiB,EAAI,OAAS,UACZA,EAAI,OAAS,aACbA,EAAI,OAAS,SACbA,EAAI,OAAS,iBAEf9B,EAAI,SAAS,CACX,KAAMiQ,EAAE,aAAa,OACrB,QAAS,8EACX,CAAC,EAGP,CAAC,EAUI,SAAAkU,GAAe1nB,EAA8C,CAClE,OAAOA,IAAQ,MAAQ,OAAOA,GAAQ,QACxC,CAEO,SAAA2nB,GACLvmB,EACAwmB,EAC4B,CAC5B,OAAOA,KAAQxmB,CACjB,CAEO,IAAMymB,GAAsBrU,EAAE,OAAO,CAAE,MAAOA,EAAE,OAAO,CAAE,CAAC,EAE1D,SAAA6R,GACLz2B,EAC8B,CAC9B,OAAOi5B,GAAoB,UAAUj5B,CAAK,EAAE,OAC9C,CAiBO,IAAM6zB,EAAN,cAA8B,KAAM,CAAC,EAC/BqF,GAAN,cAAkC,KAAM,CAAC,EACnCC,GAAN,cAAsC,KAAM,CAAC,EC5a7C,SAAAC,GACL7E,EACA/jB,EACAiG,EACA3F,EACkB,CAElB,IAAM9Q,EAAQ8Q,GAAO,OAAOA,GAAQ,SAAWA,EAAM,CAAC,EAEhD+kB,EAAgB,IAAI,IAAIpf,EAAI,UAAY,CAAC,CAAC,EAG5Csf,EAAc/1B,EAClB,GAAI,OAAOyW,EAAI,YAAe,SAC5B,QAAW9E,KAAO8E,EAAI,WAAY,CAChC,IAAMuf,EAAUvf,EAAI,WAAW9E,CAAA,EACzBukB,EACJF,EAAQ,OAAS,QACbR,GAAMjB,EAAU5iB,EAAKqkB,EAASh2B,EAAM2R,CAAA,CAAI,EACpB2iB,GAASC,EAAU5iB,EAAKqkB,EAASh2B,EAAM2R,CAAA,CAAI,EAC/DwkB,EAAYD,EAAU,QAAUA,EAAU,MAAQl2B,EAAM2R,CAAA,EACxDykB,EAAkB,OAAOD,EAAc,IAE7C,GAAIC,GAAmBP,EAAc,IAAIlkB,CAAG,EAC1C,MAAO,CACL,QAAS,GACT,MAAO,IAAIkiB,EAAgB,GAAGrjB,6BAAgCmB,IAAM,CACtE,EACF,GAAW,CAACykB,GAAmB,CAACF,EAAU,QACxC,OAAOA,EAGLC,IAAcn2B,EAAM2R,CAAA,IAClBokB,IAAgB/1B,IAElB+1B,EAAc,CAAE,GAAG/1B,CAAM,GAE3B+1B,EAAYpkB,CAAA,EAAOwkB,GAKzB,MAAO,CAAE,QAAS,GAAM,MAAOJ,CAAY,CAC7C,CCrCO,SAAAsD,GACL9E,EACA9d,EACAzW,EACA,CACA,IAAMc,EAAwBy0B,GAAOhB,EAAU,SAAU9d,EAAI,OAAQzW,CAAK,EAC1E,GAAI,CAACc,EAAI,QAAS,MAAMA,EAAI,MAC5B,OAAOA,EAAI,KACb,CAEO,SAAAw4B,GACL/E,EACA9d,EACAzW,EACA,CACA,GAAIyW,EAAI,WAAY,CAClB,IAAM3V,EAAqBs4B,GAAO7E,EAAU,SAAU9d,EAAI,WAAYzW,CAAK,EAC3E,GAAI,CAACc,EAAI,QAAS,MAAMA,EAAI,MAC5B,OAAOA,EAAI,MAEf,CAEO,SAAAy4B,GACLhF,EACA9d,EACAzW,EACA,CACA,GAAIyW,EAAI,OAAO,OAEb,OAAOogB,GAAiBtC,EAAU,QAAS9d,EAAI,MAAM,OAAQzW,EAAO,EAAI,CAE5E,CAEO,SAAAw5B,GACLjF,EACA9d,EACAzW,EACA,CACA,GAAIyW,EAAI,QAAQ,OAEd,OAAOogB,GAAiBtC,EAAU,SAAU9d,EAAI,OAAO,OAAQzW,EAAO,EAAI,CAE9E,CAEO,SAAAy5B,GACLlF,EACA9d,EACAzW,EACA,CACA,GAAIyW,EAAI,SAAS,OAEf,OAAOogB,GACLtC,EACA,UACA9d,EAAI,QAAQ,OACZzW,EACA,EACF,CAEJ,CC5CO,IAAM05B,GAAN,KAAe,CAIpB,YAAYC,EAAqB,CAC/B,GAJF,KAAA,KAAgC,IAAI,IACpC,KAAA,KAAiC,IAAI,IAG/BA,GAAM,OACR,QAAW/G,KAAO+G,EAChB,KAAK,IAAI/G,CAAG,CAGlB,CAKA,IAAIA,EAAuB,CACzB,IAAMljB,EAAM2mB,EAASzD,EAAI,EAAE,EAC3B,GAAI,KAAK,KAAK,IAAIljB,CAAG,EACnB,MAAM,IAAI,MAAM,GAAGA,+BAAiC,EAMtDkqB,GAAehH,EAAKljB,CAAG,EAEvB,KAAK,KAAK,IAAIA,EAAKkjB,CAAG,EACtB,OAAW,CAACiH,EAAQpjB,CAAA,IAAQqjB,GAASlH,CAAG,EACtC,KAAK,KAAK,IAAIiH,EAAQpjB,CAAG,CAE7B,CAKA,OAAO/G,EAAa,CAClBA,EAAM2mB,EAAS3mB,CAAG,EAClB,IAAMkjB,EAAM,KAAK,KAAK,IAAIljB,CAAG,EAC7B,GAAI,CAACkjB,EACH,MAAM,IAAI,MAAM,qBAAqBljB,oBAAsB,EAE7D,OAAW,CAACmqB,EAAQE,CAAA,IAASD,GAASlH,CAAG,EACvC,KAAK,KAAK,OAAOiH,CAAM,EAEzB,KAAK,KAAK,OAAOnqB,CAAG,CACtB,CAKA,IAAIA,EAAqC,CACvC,OAAAA,EAAM2mB,EAAS3mB,CAAG,EACX,KAAK,KAAK,IAAIA,CAAG,CAC1B,CAKA,OAAOA,EAAsC,CAC3C,OAAAA,EAAM2mB,EAAS3mB,CAAG,EACX,KAAK,KAAK,IAAIA,CAAG,CAC1B,CAKA,cAAcA,EAAasN,EAA+B,CACxD,IAAMvG,EAAM,KAAK,OAAO/G,CAAG,EAC3B,GAAI,CAAC+G,EACH,MAAM,IAAI0iB,GAAwB,sBAAsBzpB,GAAK,EAE/D,GAAIsN,GAAS,CAACA,EAAM,SAASvG,EAAI,IAAI,EACnC,MAAM,IAAIyiB,GACR,SAASlc,EAAM,KAAK,MAAM,cAActN,GAC1C,EAEF,OAAO+G,CACT,CAKA,SAASwgB,EAAgBj3B,EAAkC,CACzDi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CAAC,SAAU,QAAQ,CAAC,EAC3D,GAAI,CAAC6B,GAAM94B,CAAK,EACd,MAAM,IAAI6zB,EAAgB,yBAAyB,EAErD,GAAIpd,EAAI,OAAS,SACf,OAAyB8e,GAAO,KAAM,SAAU9e,EAAI,OAAQzW,CAAK,EACnE,GAAWyW,EAAI,OAAS,SACtB,OAAyB8e,GAAO,KAAM,SAAU9e,EAAKzW,CAAK,EAG1D,MAAM,IAAIk5B,GAAoB,uCAAuC,CAEzE,CAKA,kBAAkBjC,EAAgBj3B,EAAgB,CAChDi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CAAC,QAAQ,CAAC,EACjD,GAAI,CAAC6B,GAAM94B,CAAK,EACd,MAAM,IAAI6zB,EAAgB,0BAA0B,EAEtD,GAAI,CAACkF,GAAQ/4B,EAAO,OAAO,GAAK,OAAOA,EAAM,OAAU,SACrD,MAAM,IAAI6zB,EAAgB,+BAA+B,EAE3D,IAAMmG,EAASh6B,EAAiC,OAAS,GACzD,GAAIq2B,EAAS2D,CAAK,IAAM/C,EACtB,MAAM,IAAIpD,EACR,0BAA0BoD,UAAe+C,GAC3C,EAEF,OAAOX,GAAkB,KAAM5iB,EAAkBzW,CAAK,CACxD,CAKA,sBAAsBi3B,EAAgBj3B,EAAgB,CACpDi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CACrC,QACA,YACA,cACF,CAAC,EACD,OAAOqC,GACL,KACA7iB,EACAzW,CACF,CACF,CAKA,qBAAqBi3B,EAAgBj3B,EAAgB,CACnDi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CAAC,WAAW,CAAC,EACpD,OAAOsC,GAAqB,KAAM9iB,EAAyBzW,CAAK,CAClE,CAKA,sBAAsBi3B,EAAgBj3B,EAAgB,CACpDi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CAAC,QAAS,WAAW,CAAC,EAC7D,OAAOuC,GACL,KACA/iB,EACAzW,CACF,CACF,CAKA,uBAAoCi3B,EAAgBj3B,EAAmB,CACrEi3B,EAASZ,EAASY,CAAM,EACxB,IAAMxgB,EAAM,KAAK,cAAcwgB,EAAQ,CAAC,cAAc,CAAC,EACvD,OAAOwC,GAAuB,KAAMhjB,EAA4BzW,CAAK,CACvE,CAKA,cAAci3B,EAAgBhC,EAAa,CACzC,OAAAgC,EAASZ,EAASY,CAAM,EACjBZ,EAASpB,EAAKgC,CAAM,CAC7B,CACF,EAEA,SAAA6C,GAAmBlH,EAAmD,CACpE,QAAWiG,KAASjG,EAAI,KACtB,KAAM,CAAC,OAAOA,EAAI,MAAMiG,IAASjG,EAAI,KAAKiG,CAAA,CAAM,EAC5CA,IAAU,SACZ,KAAM,CAAC,OAAOjG,EAAI,KAAMA,EAAI,KAAKiG,CAAA,CAAM,EAG7C,CAKA,SAAAe,GAAwBxoB,EAAUklB,EAAsB,CACtD,QAAW/kB,KAAKH,EACVA,EAAI,OAAS,MACfA,EAAI,IAAMilB,EAASjlB,EAAI,IAAKklB,CAAO,EAC1BllB,EAAI,OAAS,QACtBA,EAAI,KAAOA,EAAI,KAAK,IAAK6jB,GAAQoB,EAASpB,EAAKqB,CAAO,CAAC,EAC9C,MAAM,QAAQllB,EAAIG,CAAA,CAAE,EAC7BH,EAAIG,CAAA,EAAKH,EAAIG,CAAA,EAAG,IAAKF,GACf,OAAOA,GAAS,SACXA,EAAK,WAAW,GAAG,EAAIglB,EAAShlB,EAAMilB,CAAO,EAAIjlB,EAC/CA,GAAQ,OAAOA,GAAS,SAC1BuoB,GAAevoB,EAAMilB,CAAO,EAE9BjlB,CACR,EACQD,EAAIG,CAAA,GAAM,OAAOH,EAAIG,CAAA,GAAO,WACrCH,EAAIG,CAAA,EAAKqoB,GAAexoB,EAAIG,CAAA,EAAI+kB,CAAO,GAG3C,OAAOllB,CACT,CCtNO,IAAM6oB,GAAanpB,GAA6B,CAErD,GAAI,MAAM,QAAQA,CAAG,EACnB,OAAOA,EAAI,IAAKO,GAAS4oB,GAAU5oB,CAAI,CAAC,EAG1C,GAAIP,GAAO,OAAOA,GAAQ,SAAU,CAElC,GAAIA,aAAe3J,GACjB,OAAO2J,EAAI,SAGb,GAAIwb,EAAI,MAAMxb,CAAG,GAAKA,aAAe,WACnC,OAAOA,EAGT,IAAM6gB,EAAW,CAAC,EAClB,QAAWhgB,KAAO,OAAO,KAAKb,CAAG,EAC/B6gB,EAAShgB,CAAA,EAAOsoB,GAAUnpB,EAAIa,CAAA,CAAI,EAEpC,OAAOggB,EAGT,OAAO7gB,CACT,EAEaopB,GAAappB,GAA6B,CAErD,GAAI,MAAM,QAAQA,CAAG,EACnB,OAAOA,EAAI,IAAKO,GAAS6oB,GAAU7oB,CAAI,CAAC,EAG1C,GAAIP,GAAO,OAAOA,GAAQ,SAAU,CAElC,IACGA,EAAI,QAAa,QACf,OAAOA,EAAI,KAAW,UACrB,OAAOA,EAAI,UAAgB,WAC/B+T,GAAM,GAAG/T,EAAKkkB,EAAW,EAEzB,OAAO7tB,GAAQ,YAAY2J,CAAG,EAGhC,GAAIwb,EAAI,MAAMxb,CAAG,GAAKA,aAAe,WACnC,OAAOA,EAGT,IAAM6gB,EAAW,CAAC,EAClB,QAAWhgB,KAAO,OAAO,KAAKb,CAAG,EAC/B6gB,EAAShgB,CAAA,EAAOuoB,GAAUppB,EAAIa,CAAA,CAAI,EAEpC,OAAOggB,EAGT,OAAO7gB,CACT,EAEahD,GAAagD,GACjB8gB,GAAWqI,GAAUnpB,CAAG,CAAC,EAGrBzC,GAAgByC,GACpB,KAAK,UAAUhD,GAAUgD,CAAG,CAAC,EAGzBjD,GAAaiD,GACjBopB,GAAUxI,GAAW5gB,CAAG,CAAC,EAGrBlD,GAAmBkD,GACvBjD,GAAU,KAAK,MAAMiD,CAAG,CAAC,ECnErBqpB,GAAoBvV,EAAE,OAAO,CACxC,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,QAASA,EAAE,OAAO,EAAE,SAAS,CAC/B,CAAC,EAGWwV,IAAAC,IACVA,EAAAA,EAAA,QAAU,CAAA,EAAV,UACAA,EAAAA,EAAA,gBAAkB,CAAA,EAAlB,kBACAA,EAAAA,EAAA,QAAU,GAAA,EAAV,UACAA,EAAAA,EAAA,eAAiB,GAAA,EAAjB,iBACAA,EAAAA,EAAA,aAAe,GAAA,EAAf,eACAA,EAAAA,EAAA,UAAY,GAAA,EAAZ,YACAA,EAAAA,EAAA,iBAAmB,GAAA,EAAnB,mBACAA,EAAAA,EAAA,gBAAkB,GAAA,EAAlB,kBACAA,EAAAA,EAAA,kBAAoB,GAAA,EAApB,oBACAA,EAAAA,EAAA,oBAAsB,GAAA,EAAtB,sBACAA,EAAAA,EAAA,qBAAuB,GAAA,EAAvB,uBACAA,EAAAA,EAAA,gBAAkB,GAAA,EAAlB,kBACAA,EAAAA,EAAA,mBAAqB,GAAA,EAArB,qBACAA,EAAAA,EAAA,gBAAkB,GAAA,EAAlB,kBAdUA,IAAAD,IAAA,CAAA,CAAA,EAiBCE,GAAoB,CAC/B,CAAC,CAAA,EAA+B,kBAChC,CAAC,GAAA,EAAuB,UACxB,CAAC,GAAA,EAA8B,iBAC/B,CAAC,GAAA,EAA4B,yBAC7B,CAAC,GAAA,EAAyB,YAC1B,CAAC,GAAA,EAAgC,mBACjC,CAAC,GAAA,EAA+B,kBAChC,CAAC,GAAA,EAAiC,oBAClC,CAAC,GAAA,EAAmC,sBACpC,CAAC,GAAA,EAAoC,uBACrC,CAAC,GAAA,EAA+B,kBAChC,CAAC,GAAA,EAAkC,qBACnC,CAAC,GAAA,EAA+B,iBAClC,EAEaC,GAAsB,CACjC,CAAC,CAAA,EAA+B,mBAChC,CAAC,GAAA,EAAuB,UACxB,CAAC,GAAA,EAA8B,kBAC/B,CAAC,GAAA,EAA4B,0BAC7B,CAAC,GAAA,EAAyB,YAC1B,CAAC,GAAA,EAAgC,qBACjC,CAAC,GAAA,EAA+B,oBAChC,CAAC,GAAA,EAAiC,sBAClC,CAAC,GAAA,EAAmC,wBACpC,CAAC,GAAA,EAAoC,yBACrC,CAAC,GAAA,EAA+B,mBAChC,CAAC,GAAA,EAAkC,uBACnC,CAAC,GAAA,EAA+B,kBAClC,EAEaC,GAAN,KAAmB,CAGxB,YAAmBhoB,EAAkBioB,EAAkB,CAApC,KAAA,KAAAjoB,EAAkB,KAAA,QAAAioB,EAFrC,KAAA,QAAU,EAE8C,CAC1D,EAEaC,EAAN,cAAwB,KAAM,CAInC,YACS5lB,EACAzB,EACPM,EACA8mB,EACA,CACA,MAAM9mB,GAAWN,GAASknB,GAAoBzlB,CAAA,CAAO,EAL9C,KAAA,OAAAA,EACA,KAAA,MAAAzB,EALT,KAAA,QAAU,GAUH,KAAK,QACR,KAAK,MAAQinB,GAAkBxlB,CAAA,GAEjC,KAAK,QAAU2lB,CACjB,CACF,EAEaE,GAAN,cAAuCD,CAAU,CACtD,YACSE,EACAC,EACAC,EACP,CACA,MACE,EACAP,GAAoB,CAAA,EACpB,6DACF,EARO,KAAA,YAAAK,EACA,KAAA,gBAAAC,EACA,KAAA,aAAAC,CAOT,CACF,ECrGO,SAAAC,GACLzf,EACA,CACA,OAAIA,EAAO,OAAS,YACX,OAEF,KACT,CAEO,SAAA0f,GACL9rB,EACAoM,EACA2f,EACAhnB,EACQ,CACR,IAAMvE,EAAM,IAAI,IAAIurB,CAAU,EAI9B,GAHAvrB,EAAI,SAAW,SAASR,IAGpB+E,EACF,OAAW,CAACtC,EAAK3R,CAAA,IAAU,OAAO,QAAQiU,CAAM,EAAG,CACjD,IAAMinB,EAAc5f,EAAO,YAAY,aAAa3J,CAAA,EACpD,GAAI,CAACupB,EACH,MAAM,IAAI,MAAM,4BAA4BvpB,GAAK,EAE/C3R,IAAU,SACRk7B,EAAY,OAAS,QACM,CAAC,EACzB,OAAOl7B,CAAK,EAAE,QAAS8Q,GAAQ,CAClCpB,EAAI,aAAa,OACfiC,EACAwpB,GAAiBD,EAAY,MAAM,KAAMpqB,CAAG,CAC9C,CACF,CAAC,EAEDpB,EAAI,aAAa,IAAIiC,EAAKwpB,GAAiBD,EAAY,KAAMl7B,CAAK,CAAC,GAM3E,OAAO0P,EAAI,SAAS,CACtB,CAEO,SAAAyrB,GACLje,EAQAld,EACQ,CACR,GAAIkd,IAAS,UAAYA,IAAS,UAChC,OAAO,OAAOld,CAAK,EAErB,GAAIkd,IAAS,QACX,OAAO,OAAO,OAAOld,CAAK,CAAC,EAC7B,GAAWkd,IAAS,UAClB,OAAO,OAAO,OAAOld,CAAK,EAAI,CAAC,EACjC,GAAWkd,IAAS,UAClB,OAAOld,EAAQ,OAAS,QAC1B,GAAWkd,IAAS,WAClB,OAAIld,aAAiB,KACZA,EAAM,YAAY,EAEpB,OAAOA,CAAK,EAErB,MAAM,IAAI,MAAM,iCAAiCkd,GAAM,CACzD,CAEO,SAAAke,GAA0BX,EAA2B,CAC1D,IAAMY,EAAsB,CAAC,EAC7B,OAAW,CAACC,EAAQt7B,CAAA,IAAU,OAAO,QAAQy6B,CAAO,EAClDY,EAAWC,EAAO,YAAY,CAAA,EAAKt7B,EAGrC,OAAOq7B,CACT,CAEO,SAAAE,GACLjgB,EACA9I,EACA0gB,EACS,CACT,IAAMuH,EAAmBvH,GAAM,SAAW,CAAC,EAC3C,OAAI5X,EAAO,OAAS,cACd4X,GAAM,WACRuH,EAAQ,cAAA,EAAkBvH,EAAK,UAE7B1gB,GAAQ,OAAOA,GAAS,WACrBioB,EAAQ,cAAA,IACXA,EAAQ,cAAA,EAAkB,sBAIzBA,CACT,CAEO,SAAAe,GACLf,EACAjoB,EACyB,CACzB,GAAI,GAACioB,EAAQ,cAAA,GAAmB,OAAOjoB,EAAS,KAGhD,OAAIA,aAAgB,YACXA,EAELioB,EAAQ,cAAA,EAAgB,WAAW,OAAO,EACrC,IAAI,YAAY,EAAE,OAAOjoB,EAAK,SAAS,CAAC,EAE7CioB,EAAQ,cAAA,EAAgB,WAAW,kBAAkB,EAChD,IAAI,YAAY,EAAE,OAAOpsB,GAAamE,CAAI,CAAC,EAE7CA,CACT,CAEO,SAAAipB,GAAgC3mB,EAA8B,CACnE,IAAI4mB,EACJ,OAAI5mB,KAAUslB,GACZsB,EAAU5mB,EACDA,GAAU,KAAOA,EAAS,IACnC4mB,EAAU,IACD5mB,GAAU,KAAOA,EAAS,IACnC4mB,EAAU,IACD5mB,GAAU,KAAOA,EAAS,IACnC4mB,EAAU,IACD5mB,GAAU,KAAOA,EAAS,IACnC4mB,EAAU,IAEVA,EAAU,IAELA,CACT,CAEO,SAAAC,GACLzG,EACA1iB,EACK,CACL,GAAI0iB,EAAU,CACZ,GAAIA,EAAS,SAAS,kBAAkB,GAAK1iB,GAAM,WACjD,GAAI,CACF,IAAMhU,EAAM,IAAI,YAAY,EAAE,OAAOgU,CAAI,EACzC,OAAO5E,GAAgBpP,CAAG,CAC5B,OAAS2C,EAAT,CACE,MAAM,IAAIu5B,EACR,EACA,kCAAkC,OAAOv5B,CAAC,GAC5C,CACF,CAEF,GAAI+zB,EAAS,WAAW,OAAO,GAAK1iB,GAAM,WACxC,GAAI,CACF,OAAO,IAAI,YAAY,EAAE,OAAOA,CAAI,CACtC,OAASrR,EAAT,CACE,MAAM,IAAIu5B,EACR,EACA,kCAAkC,OAAOv5B,CAAC,GAC5C,CACF,EAGJ,OAAIqR,aAAgB,YACX,IAAI,WAAWA,CAAI,EAErBA,CACT,CC/JO,IAAMopB,GAAN,KAAa,CAAb,aAAA,CACL,KAAA,MAAsBC,GACtB,KAAA,IAAM,IAAInC,EAAS,CAKnB,MAAM,KACJuB,EACAa,EACA7nB,EACAzB,EACA0gB,EACA,CACA,OAAO,KAAK,QAAQ+H,CAAU,EAAE,KAAKa,EAAY7nB,EAAQzB,EAAM0gB,CAAI,CACrE,CAEA,QAAQ+H,EAA0B,CAChC,OAAO,IAAIc,GAAc,KAAMd,CAAU,CAC3C,CAKA,WAAWrI,EAAiB,CAC1B,KAAK,IAAI,IAAIA,CAAG,CAClB,CAEA,YAAY+G,EAAoB,CAC9B,QAAW/G,KAAO+G,EAChB,KAAK,WAAW/G,CAAG,CAEvB,CAEA,cAAcljB,EAAa,CACzB,KAAK,IAAI,OAAOA,CAAG,CACrB,CACF,EAEaqsB,GAAN,KAAoB,CAKzB,YAAYC,EAAoBf,EAA0B,CAF1D,KAAA,QAAkC,CAAC,EAGjC,KAAK,WAAae,EAClB,KAAK,IAAM,OAAOf,GAAe,SAAW,IAAI,IAAIA,CAAU,EAAIA,CACpE,CAEA,UAAUtpB,EAAa3R,EAAqB,CAC1C,KAAK,QAAQ2R,CAAA,EAAO3R,CACtB,CAEA,YAAY2R,EAAmB,CAC7B,OAAO,KAAK,QAAQA,CAAA,CACtB,CAEA,MAAM,KACJmqB,EACA7nB,EACAzB,EACA0gB,EACA,CACA,IAAMzc,EAAM,KAAK,WAAW,IAAI,cAAcqlB,CAAU,EACxD,GAAI,CAACrlB,GAAQA,EAAI,OAAS,SAAWA,EAAI,OAAS,YAChD,MAAM,IAAI,MACR,oBAAoBqlB,kCACtB,EAGF,IAAMG,EAAalB,GAA0BtkB,CAAG,EAC1CylB,EAAUlB,GAAuBc,EAAYrlB,EAAK,KAAK,IAAKxC,CAAM,EAClEkoB,EAAcZ,GAA2B9kB,EAAKjE,EAAM,CACxD,QAAS,CACP,GAAG,KAAK,QACR,GAAG0gB,GAAM,OACX,EACA,SAAUA,GAAM,QAClB,CAAC,EAEKpyB,EAAM,MAAM,KAAK,WAAW,MAChCo7B,EACAD,EACAE,EACA3pB,CACF,EAEMkpB,EAAUD,GAAuB36B,EAAI,MAAM,EACjD,GAAI46B,IAAY,IAAsB,CACpC,GAAI,CACF,KAAK,WAAW,IAAI,sBAAsBI,EAAYh7B,EAAI,IAAI,CAChE,OAASK,EAAT,CACE,MAAIA,aAAa0yB,EACT,IAAI8G,GAAyBmB,EAAY36B,EAAGL,EAAI,IAAI,EAEpDK,CAEV,CACA,OAAO,IAAIq5B,GAAa15B,EAAI,KAAMA,EAAI,OAAO,MAE7C,OAAIA,EAAI,MAAQs7B,GAAoBt7B,EAAI,IAAI,EACpC,IAAI45B,EACRgB,EACA56B,EAAI,KAAK,MACTA,EAAI,KAAK,QACTA,EAAI,OACN,EAEM,IAAI45B,EAAUgB,CAAO,CAGjC,CACF,EAEA,eAAAG,GACEK,EACAD,EACAE,EACAE,EAC+B,CAC/B,GAAI,CAGF,IAAM5B,EAAUW,GAAiBe,CAAW,EACtCG,EAA4C,CAChD,OAAQL,EACR,QAAAxB,EACA,KAAMe,GAAqBf,EAAS4B,CAAW,EAC/C,OAAQ,MACV,EACMv7B,EAAM,MAAM,MAAMo7B,EAASI,CAAO,EAClCC,EAAU,MAAMz7B,EAAI,YAAY,EACtC,MAAO,CACL,OAAQA,EAAI,OACZ,QAAS,OAAO,YAAYA,EAAI,QAAQ,QAAQ,CAAC,EACjD,KAAM66B,GAAsB76B,EAAI,QAAQ,IAAI,cAAc,EAAGy7B,CAAO,CACtE,CACF,OAASp7B,EAAT,CACE,MAAM,IAAIu5B,EAAU,EAAsB,OAAOv5B,CAAC,CAAC,CACrD,CACF,CAEA,SAAAi7B,GAA6B7rB,EAAoC,CAC/D,OAAO4pB,GAAkB,UAAU5pB,CAAC,EAAE,OACxC,CCpKA,IAAMisB,GAAc,IAAIZ,GCCXa,GAAa,CACxB,oBAAqB,CACnB,QAAS,EACT,GAAI,yBACJ,KAAM,CACJ,WAAY,CACV,KAAM,SACN,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,KAAM,SACR,EACA,IAAK,CACH,KAAM,QACR,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CACR,KACA,QACA,UACA,kBACA,YACA,WACF,EACA,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACN,KAAM,CACJ,8CACA,qDACA,6CACA,4CACA,2CACA,iDACA,8CACA,0CACA,0CACF,CACF,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,EACA,gBAAiB,CACf,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,cAAe,CACb,KAAM,QACR,EACA,cAAe,CACb,KAAM,QACR,CACF,CACF,EACA,mBAAoB,CAClB,KAAM,SACN,SAAU,CACR,KACA,QACA,UACA,eACA,YACA,WACF,EACA,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACN,KAAM,CACJ,8CACA,qDACA,6CACA,4CACA,2CACA,iDACA,8CACA,yCACF,CACF,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,sCACA,8CACA,wCACA,+CACF,CACF,EACA,aAAc,CACZ,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,WAAY,CACV,KAAM,SACN,SAAU,CACR,KACA,aACA,UACA,aACA,YACA,qBACF,EACA,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,WAAY,CACV,KAAM,MACN,IAAK,4CACP,EACA,QAAS,CACP,KAAM,QACR,EACA,kBAAmB,CACjB,KAAM,QACR,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,EACA,WAAY,CACV,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,oBAAqB,CACnB,KAAM,QACN,MAAO,CACL,KAAM,SACR,CACF,CACF,CACF,EACA,kBAAmB,CACjB,KAAM,SACN,SAAU,CAAC,KAAM,UAAW,YAAa,YAAa,aAAa,EACnE,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,EACA,gBAAiB,CACf,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,KACV,CACF,EACA,kBAAmB,CACjB,KAAM,QACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,WACR,YACE,6FACJ,EACA,UAAW,CACT,KAAM,SACN,OAAQ,WACR,YACE,8FACJ,EACA,YAAa,CACX,KAAM,MACN,IAAK,+CACP,EACA,QAAS,CACP,KAAM,SACN,YAAa,gCACf,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,eAAgB,CACd,KAAM,SACN,OAAQ,KACV,EACA,eAAgB,CACd,KAAM,SACN,OAAQ,UACV,EACA,eAAgB,CACd,KAAM,SACN,OAAQ,UACV,EACA,UAAW,CACT,KAAM,SACR,EACA,aAAc,CACZ,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CACR,KACA,aACA,UACA,aACA,YACA,mBACF,EACA,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,WAAY,CACV,KAAM,MACN,IAAK,4CACP,EACA,QAAS,CACP,KAAM,QACR,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,sCACA,8CACA,wCACA,+CACF,CACF,EACA,cAAe,CACb,KAAM,MACN,IAAK,8CACP,EACA,WAAY,CACV,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,kBAAmB,CACjB,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,yCACP,CACF,CACF,CACF,EACA,SAAU,CACR,KAAM,SACN,SAAU,CACR,MACA,SACA,iBACA,YACA,YACF,EACA,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,QACR,EACA,eAAgB,CACd,KAAM,QACN,MAAO,CACL,KAAM,SACR,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,WAAY,CACV,KAAM,MACN,IAAK,uCACP,EACA,UAAW,CACT,KAAM,MACN,IAAK,wCACP,EACA,gBAAiB,CACf,KAAM,SACR,EACA,WAAY,CACV,KAAM,QACR,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,SAAU,CACR,MACA,SACA,iBACA,YACA,YACF,EACA,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,QACR,EACA,eAAgB,CACd,KAAM,QACN,MAAO,CACL,KAAM,SACR,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,WAAY,CACV,KAAM,MACN,IAAK,6CACP,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,EACA,UAAW,CACT,KAAM,MACN,IAAK,wCACP,EACA,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,wCACP,CACF,EACA,gBAAiB,CACf,KAAM,SACR,EACA,WAAY,CACV,KAAM,QACR,EACA,iBAAkB,CAChB,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,SAAU,CAAC,MAAO,SAAU,WAAW,EACvC,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,QACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,UAAW,CACT,KAAM,MACN,IAAK,wCACP,EACA,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,wCACP,CACF,EACA,gBAAiB,CACf,KAAM,SACR,EACA,iBAAkB,CAChB,KAAM,SACN,OAAQ,UACV,EACA,WAAY,CACV,KAAM,QACR,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,CACF,CACF,EACA,QAAS,CACP,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,SAAU,CAAC,MAAO,KAAK,EACvB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,WAAY,CACV,KAAM,SACN,SAAU,CACR,MACA,MACA,QACA,WACA,YACA,aACA,MACF,EACA,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,SACR,EACA,SAAU,CACR,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,KACV,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,WAAY,CACV,KAAM,MACN,IAAK,uCACP,EACA,KAAM,CACJ,KAAM,MACN,IAAK,qCACP,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CACR,MACA,MACA,QACA,QACA,YACA,aACA,MACF,EACA,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,WAAY,CACV,KAAM,MACN,IAAK,6CACP,EACA,KAAM,CACJ,KAAM,MACN,IAAK,qCACP,CACF,CACF,EACA,mBAAoB,CAClB,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,WAAY,CACV,KAAM,SACN,WAAY,CACV,cAAe,CACb,KAAM,MACN,IAAK,8CACP,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,WAAY,CACV,cAAe,CACb,KAAM,MACN,IAAK,8CACP,CACF,CACF,EACA,SAAU,CACR,KAAM,SACN,SAAU,CAAC,MAAO,WAAY,OAAQ,WAAW,EACjD,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,SAAU,CACR,KAAM,QACR,EACA,KAAM,CACJ,KAAM,SACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,0CACA,yCACF,CACF,EACA,WAAY,CACV,KAAM,MACN,IAAK,uCACP,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,QAAS,QAAQ,EAC5B,WAAY,CACV,MAAO,CACL,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,QAAS,SAAU,QAAQ,EACtC,WAAY,CACV,MAAO,CACL,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,CACF,CACF,EACA,mBAAoB,CAClB,KAAM,SACN,YAAa,CACX,wCACA,6CACA,yCACF,CACF,EACA,WAAY,CACV,KAAM,QACN,YACE,4GACJ,EACA,gBAAiB,CACf,KAAM,QACN,YACE,qHACJ,EACA,aAAc,CACZ,KAAM,QACN,YACE,2HACJ,EACA,iBAAkB,CAChB,KAAM,SACN,YAAa,iDACb,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,gBAAiB,CACf,KAAM,UACN,YACE,oFACJ,CACF,CACF,EACA,wBAAyB,CACvB,KAAM,SACN,YAAa,uCACb,WAAY,CACV,QAAS,CACP,KAAM,SACN,YAAa,yCACf,CACF,CACF,EACA,gBAAiB,CACf,KAAM,SACN,YAAa,6BACb,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,OAAQ,CACN,KAAM,UACN,YAAa,4CACf,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,YAAa,mBACb,SAAU,CAAC,YAAY,EACvB,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,WAAY,CACV,KAAM,MACN,IAAK,4CACP,CACF,CACF,EACA,cAAe,CACb,KAAM,SACN,YAAa,mCACb,SAAU,CAAC,kBAAmB,iBAAiB,EAC/C,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,gBAAiB,CACf,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,EACA,gBAAiB,CACf,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,CACF,CACF,EACA,oBAAqB,CACnB,KAAM,SACN,WAAY,CACV,QAAS,CACP,KAAM,QACR,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,WAAY,CACV,QAAS,CACP,KAAM,QACR,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,YAAa,qCACb,SAAU,CAAC,iBAAiB,EAC5B,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,gBAAiB,CACf,KAAM,UACN,YAAa,qDACf,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,YAAa,6BACb,WAAY,CACV,QAAS,CACP,KAAM,SACN,YAAa,yCACf,CACF,CACF,EACA,cAAe,CACb,KAAM,SACN,YAAa,yCACb,SAAU,CAAC,aAAa,EACxB,WAAY,CACV,YAAa,CACX,KAAM,SACN,YAAa,iDACf,CACF,CACF,CACF,CACF,EACA,qCAAsC,CACpC,QAAS,EACT,GAAI,0CACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YACE,8FACF,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,KAAM,SACN,OAAQ,KACV,EACA,KAAM,CACJ,KAAM,SACN,YAAa,uCACf,CACF,CACF,CACF,CACF,CACF,CACF,EACA,kCAAmC,CACjC,QAAS,EACT,GAAI,uCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YACE,6EACF,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,EACA,SAAU,CACR,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,mCAAoC,CAClC,QAAS,EACT,GAAI,wCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,wCACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAS,UAAW,WAAW,EAC1C,WAAY,CACV,MAAO,CACL,KAAM,QACN,KAAM,CACJ,8CACA,iDACA,8CACA,6CACA,2CACA,4CACA,0CACA,qDACA,4CACA,0CACF,CACF,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,EACA,gBAAiB,CACf,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,KACV,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,KACV,CACF,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,MACN,IAAK,yCACP,CACF,EACA,OAAQ,CACN,CACE,KAAM,kBACR,CACF,CACF,CACF,CACF,EACA,oCAAqC,CACnC,QAAS,EACT,GAAI,yCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,0DACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,KAAM,SACN,OAAQ,KACV,EACA,KAAM,CACJ,KAAM,SACN,YAAa,sCACf,CACF,CACF,CACF,CACF,CACF,CACF,EACA,8BAA+B,CAC7B,QAAS,EACT,GAAI,mCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,gCACb,WAAY,CACV,KA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A,IAAK,CACH,KAAM,SACN,OAAQ,MACR,YACE,2FACJ,EACA,IAAK,CACH,KAAM,SACN,OAAQ,MACR,YACE,0FACJ,EACA,IAAK,CACH,KAAM,SACN,UAAW,IACX,YACE,2DACJ,EACA,IAAK,CACH,KAAM,UACN,YACE,kEACJ,EACA,IAAK,CACH,KAAM,SACN,OAAQ,WACR,YAAa,wCACf,CACF,CACF,EACA,WAAY,CACV,KAAM,SACN,YACE,iFACF,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,sCACP,EACA,UAAW,EACb,CACF,CACF,EACA,UAAW,CACT,KAAM,SACN,YACE,0IACF,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,UAAW,IACX,YACE,2DACJ,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,qDACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,aAAa,EACxB,WAAY,CACV,YAAa,CACX,KAAM,QACN,MAAO,CACL,KAAM,QACR,EACA,YACE,4JACJ,EACA,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,KACV,EACA,YACE,qDACJ,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,+BAAgC,CAC9B,QAAS,EACT,GAAI,oCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,eACN,YAAa,8BACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,OAAQ,CACN,KAAM,UACN,YAAa,wCACf,CACF,CACF,EACA,QAAS,CACP,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,+CACA,4CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,cACR,CACF,CACF,EACA,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAO,QAAQ,EAC1B,WAAY,CACV,IAAK,CACH,KAAM,SACR,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,SACN,YAAa,CAAC,gBAAgB,CAChC,EACA,QAAS,CACP,KAAM,QACR,CACF,CACF,CACF,CACF,EACA,iCAAkC,CAChC,QAAS,EACT,GAAI,sCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,6BACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,aAAc,SAAS,EAClC,WAAY,CACV,WAAY,CACV,KAAM,MACN,IAAK,4CACP,EACA,OAAQ,CACN,KAAM,QACR,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CACR,KACA,aACA,UACA,aACA,WACF,EACA,WAAY,CACV,GAAI,CACF,KAAM,SACR,EACA,WAAY,CACV,KAAM,MACN,IAAK,4CACP,EACA,OAAQ,CACN,KAAM,SACN,aAAc,IACd,UAAW,GACb,EACA,QAAS,CACP,KAAM,QACN,KAAM,CACJ,qCACA,gCACF,CACF,EACA,WAAY,CACV,KAAM,SACN,OAAQ,KACV,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,WAAY,CACV,KAAM,SACN,YAAa,CACX,yCACA,8CACA,+CACA,2CACA,yCACA,yCACF,CACF,EACA,WAAY,CACV,KAAM,QACN,YAAa,sDACf,EACA,gBAAiB,CACf,KAAM,QACN,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ACT,KAAM,UACN,QAAS,CACX,EACA,SAAU,CACR,KAAM,SACR,EACA,YAAa,CACX,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,KACV,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,uDACP,CACF,CACF,CACF,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,UAAW,OAAO,EAC7B,WAAY,CACV,QAAS,CACP,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,QACR,CACF,CACF,CACF,CACF,CACF,EACA,8BAA+B,CAC7B,QAAS,EACT,GAAI,mCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,oCACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,aAAc,UAAU,EACnC,WAAY,CACV,WAAY,CACV,KAAM,SACN,YACE,iFACJ,EACA,SAAU,CACR,KAAM,QACR,CACF,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,YAAa,aAAc,SAAU,KAAK,EACrD,WAAY,CACV,UAAW,CACT,KAAM,QACR,EACA,WAAY,CACV,KAAM,QACR,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACR,EACA,eAAgB,CACd,KAAM,SACR,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,iBACR,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,KAAM,CACJ,WAAY,CACV,KAAM,SACN,SAAU,CACR,OACA,YACA,WACA,aACA,YACA,YACA,MACF,EACA,WAAY,CACV,KAAM,CACJ,KAAM,QACR,EACA,UAAW,CACT,KAAM,SACR,EACA,SAAU,CACR,KAAM,S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MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,MAAO,OAAQ,KAAK,EAC/B,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,KAAM,CACJ,KAAM,SACN,OAAQ,KACV,EACA,IAAK,CACH,KAAM,QACR,CACF,CACF,CACF,CACF,EACA,6BAA8B,CAC5B,QAAS,EACT,GAAI,kCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YACE,kJACF,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,UAAU,EACrB,WAAY,CACV,SAAU,CACR,KAAM,SACN,YACE,sDACJ,CACF,CACF,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,wDACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,UAAU,EACrB,WAAY,CACV,SAAU,CACR,KAAM,SACN,YACE,2DACJ,CACF,CACF,CACF,CACF,CACF,CACF,EACA,6BAA8B,CAC5B,QAAS,EACT,GAAI,kCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,eACN,YAAa,6BACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,OAAQ,CACN,KAAM,UACN,YAAa,wCACf,CACF,CACF,EACA,QAAS,CACP,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,6CACA,6CACA,8CACA,gDACA,0CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,cACR,EACA,CACE,KAAM,iBACR,CACF,CACF,EACA,OAAQ,CACN,KAAM,SACN,SAAU,CACR,MACA,SACA,SACA,OACA,SACA,MACA,QACA,SACA,MACA,QACA,MACF,EACA,SAAU,CAAC,OAAQ,OAAO,EAC1B,WAAY,CACV,IAAK,CACH,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,EACA,KAAM,CACJ,KAAM,SACN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,CACnB,KAAM,SACN,SAAU,CAAC,MAAO,QAAQ,EAC1B,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,YAAa,CACX,KAAM,SACN,aAAc,GACd,UAAW,GACb,EACA,YAAa,CACX,KAAM,SACN,aAAc,IACd,UAAW,IACb,EACA,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,QACR,EACA,eAAgB,CACd,KAAM,SACR,EACA,aAAc,CACZ,KAAM,SACR,EACA,WAAY,CACV,KAAM,SACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,qCACP,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACR,EACA,YAAa,CACX,KAAM,MACN,IAAK,uCACP,EACA,UAAW,CACT,KAAM,SACR,EACA,SAAU,CACR,KAAM,SACN,OAAQ,QACV,EACA,eAAgB,CACd,KAAM,MACN,IAAK,uCACP,EACA,UAAW,CACT,KAAM,SACN,OAAQ,QACV,EACA,WAAY,CACV,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,YAAa,CACX,KAAM,QACN,MAAO,CACL,KAAM,QACN,KAAM,CACJ,2CACA,2CACA,yCACA,8CACA,uCACA,wCACF,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CAAC,SAAS,EACpB,WAAY,CACV,QAAS,CACP,KAAM,UACN,QAAS,EACX,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CAAC,QAAS,YAAY,EAChC,WAAY,CACV,MAAO,CACL,KAAM,QACR,EACA,WAAY,CACV,KAAM,SACN,YAAa,CAAC,OAAQ,OAAQ,MAAM,CACtC,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,SAAU,CAAC,SAAU,OAAO,EAC5B,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,QACV,CACF,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,QACV,CACF,CACF,CACF,EACA,oBAAqB,CACnB,KAAM,SACN,WAAY,CACV,UAAW,CACT,KAAM,SACN,OAAQ,WACR,YAAa,kCACf,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,SACN,YACE,iEACJ,EACA,YAAa,CACX,KAAM,UACN,YAAa,2BACf,EACA,wBAAyB,CACvB,KAAM,UACN,YACE,6DACJ,EACA,uBAAwB,CACtB,KAAM,UACN,YACE,oEACJ,EACA,YAAa,CACX,KAAM,UACN,YAAa,2BACf,EACA,eAAgB,CACd,KAAM,UACN,YAAa,+BACf,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,WAAY,CACV,KAAM,CACJ,KAAM,SACN,YAAa,4BACb,YAAa,CAAC,SAAU,SAAU,aAAc,QAAQ,CAC1D,EACA,wBAAyB,CACvB,KAAM,UACN,YAAa,gDACf,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,mDACb,WAAY,CACV,KAAM,SACN,WAAY,CAAC,CACf,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,aAAa,EACxB,WAAY,CACV,YAAa,CACX,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,CACF,EACA,uBAAwB,CACtB,QAAS,EACT,GAAI,4BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yCACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACN,OAAQ,eACV,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,MACN,IAAK,6CACP,CACF,CACF,CACF,CACF,EACA,wBAAyB,CACvB,QAAS,EACT,GAAI,6BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,iDACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,eACV,EACA,UAAW,EACb,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,UAAU,EACrB,WAAY,CACV,SAAU,CACR,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,6CACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,sDACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,oBAAqB,CACnB,QAAS,EACT,GAAI,yBACJ,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,YAAa,8BACb,IAAK,eACL,OAAQ,CACN,KAAM,SACN,WAAY,CACV,YAAa,CACX,KAAM,SACN,aAAc,GACd,UAAW,GACb,EACA,YAAa,CACX,KAAM,SACN,aAAc,IACd,UAAW,IACb,EACA,OAAQ,CACN,KAAM,OACN,OAAQ,CAAC,YAAa,YAAY,EAClC,QAAS,GACX,EACA,OAAQ,CACN,KAAM,OACN,OAAQ,CAAC,YAAa,YAAY,EAClC,QAAS,GACX,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CAAC,uCAAuC,CAChD,CACF,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,uDACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,aAAa,EACxB,WAAY,CACV,YAAa,CACX,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,mDACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,KAAM,CACJ,KAAM,SACN,YAAa,8BACf,EACA,EAAG,CACD,KAAM,SACN,YACE,oHACJ,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,kCAAmC,CACjC,QAAS,EACT,GAAI,uCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,mDACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,KAAM,CACJ,KAAM,SACN,YAAa,8BACf,EACA,EAAG,CACD,KAAM,SACN,YAAa,+CACf,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,0CACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,YACE,2FACF,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,UAAU,EACrB,WAAY,CACV,SAAU,CACR,KAAM,MACN,IAAK,sCACP,CACF,CACF,EACA,SAAU,CACR,KAAM,SACN,SAAU,CAAC,MAAO,QAAS,aAAa,EACxC,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,QACR,EACA,YAAa,CACX,KAAM,QACR,EACA,MAAO,CACL,KAAM,OACN,OAAQ,CAAC,SAAS,EAClB,QAAS,GACX,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,UAAU,EACrB,WAAY,CACV,SAAU,CACR,KAAM,MACN,IAAK,0CACP,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,MAAO,QAAS,aAAa,EACxC,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,QACR,EACA,YAAa,CACX,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACR,CACF,CACF,CACF,CACF,EACA,mBAAoB,CAClB,QAAS,EACT,GAAI,wBACJ,YAAa,0DACb,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,iCACP,EACA,UAAW,CACb,CACF,CACF,EACA,MAAO,CACL,KAAM,SACN,SAAU,CAAC,QAAS,KAAK,EACzB,WAAY,CACV,MAAO,CACL,KAAM,OACN,OAAQ,CAAC,SAAS,EAClB,QAAS,GACX,EACA,IAAK,CACH,KAAM,QACR,EACA,YAAa,CACX,KAAM,MACN,IAAK,uCACP,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,YACE,mIACF,SAAU,CAAC,QAAS,QAAQ,EAC5B,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,CACX,EACA,OAAQ,CACN,KAAM,UACN,QAAS,CACX,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,EACA,UAAW,CACb,CACF,CACF,EACA,UAAW,CACT,KAAM,SACN,SAAU,CAAC,QAAS,WAAY,KAAK,EACrC,WAAY,CACV,MAAO,CACL,KAAM,QACR,EACA,SAAU,CACR,KAAM,QACR,EACA,IAAK,CACH,KAAM,QACR,EACA,YAAa,CACX,KAAM,MACN,IAAK,uCACP,CACF,CACF,CACF,CACF,EACA,mBAAoB,CAClB,QAAS,EACT,GAAI,wBACJ,YACE,oEACF,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,MACN,IAAK,gCACP,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,uCACA,yCACA,wCACA,uCACA,kCACF,CACF,CACF,CACF,EACA,WAAY,CACV,KAAM,SACN,SAAU,CAAC,MAAO,MAAO,SAAU,QAAS,WAAW,EACvD,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,0CACP,EACA,MAAO,CACL,KAAM,SACR,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,QACN,KAAM,CACJ,iCACA,mCACA,iCACA,yCACF,CACF,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,MAAO,UAAU,EAC5B,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,MAAO,EACT,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,SAAU,CAAC,MAAO,UAAW,QAAQ,EACrC,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,QAAS,CACP,KAAM,UACN,MAAO,EACT,EACA,OAAQ,CACN,KAAM,MACN,IAAK,sCACP,CACF,CACF,CACF,CACF,EACA,4BAA6B,CAC3B,QAAS,EACT,GAAI,iCACJ,YACE,uGACF,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,SAAU,OAAO,EAC5B,WAAY,CACV,OAAQ,CACN,KAAM,MACN,IAAK,2BACP,EACA,MAAO,CACL,KAAM,QACN,KAAM,CAAC,4BAA6B,6BAA6B,CACnE,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,SAAU,OAAO,EAC5B,WAAY,CACV,OAAQ,CACN,KAAM,MACN,IAAK,gCACP,EACA,MAAO,CACL,KAAM,QACN,KAAM,CACJ,iCACA,kCACF,CACF,CACF,CACF,CACF,CACF,EACA,gBAAiB,CACf,QAAS,EACT,GAAI,qBACJ,KAAM,CACJ,SAAU,CACR,KAAM,SACN,SAAU,CAAC,MAAO,MAAO,SAAU,SAAU,WAAW,EACxD,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,0CACP,EACA,OAAQ,CACN,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACN,KAAM,CACJ,iCACA,mCACA,iCACA,yCACF,CACF,EACA,WAAY,CACV,KAAM,SACR,EACA,YAAa,CACX,KAAM,SACR,EACA,UAAW,CACT,KAAM,SACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,oCACP,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,EACA,WAAY,CACV,KAAM,MACN,IAAK,uCACP,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,WAAY,CACV,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,EACA,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,EACA,cAAe,CACb,KAAM,SACR,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,MACN,IAAK,iCACP,EACA,MAAO,CACL,KAAM,MACN,IAAK,iCACP,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CAAC,qCAAqC,CAC9C,CACF,CACF,EACA,SAAU,CACR,KAAM,SACN,SAAU,CAAC,OAAQ,QAAQ,EAC3B,WAAY,CACV,KAAM,CACJ,KAAM,QACN,KAAM,CACJ,kCACA,sCACA,oCACF,CACF,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,kCACA,sCACA,oCACF,CACF,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,KAAM,WAAW,EAC5B,WAAY,CACV,GAAI,CACF,KAAM,MACN,IAAK,0CACP,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,MACN,IAAK,iCACP,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,wCACA,sCACA,oCACF,CACF,EACA,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,QACN,KAAM,CACJ,wCACA,sCACA,oCACF,CACF,CACF,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CAAC,MAAO,UAAU,EAC5B,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,SAAU,CACR,KAAM,UACN,MAAO,EACT,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,SAAU,CAAC,MAAO,UAAW,QAAQ,EACrC,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,QAAS,CACP,KAAM,UACN,MAAO,EACT,EACA,OAAQ,CACN,KAAM,MACN,IAAK,sCACP,CACF,CACF,EACA,cAAe,CACb,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,qCACP,CACF,CACF,EACA,cAAe,CACb,KAAM,SACN,SAAU,CAAC,MAAO,MAAO,MAAO,UAAW,cAAe,WAAW,EACrE,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,QAAS,CACP,KAAM,MACN,IAAK,qCACP,EACA,YAAa,CACX,KAAM,QACR,EACA,YAAa,CACX,KAAM,SACN,aAAc,IACd,UAAW,GACb,EACA,kBAAmB,CACjB,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,6BACP,CACF,EACA,OAAQ,CACN,KAAM,QACR,EACA,UAAW,CACT,KAAM,UACN,QAAS,CACX,EACA,OAAQ,CACN,KAAM,MACN,IAAK,6CACP,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,qBAAsB,CACpB,KAAM,SACN,WAAY,CACV,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,iBAAkB,CAChB,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CAAC,6CAA6C,CACtD,CACF,CACF,EACA,qBAAsB,CACpB,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,eAAgB,CACd,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,SACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,uCACP,CACF,CACF,CACF,CACF,CACF,EACA,iCAAkC,CAChC,QAAS,EACT,GAAI,sCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YACE,oFACF,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAO,OAAO,EACzB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,8CACP,CACF,EACA,MAAO,CACL,KAAM,MACN,IAAK,+CACP,CACF,CACF,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,MAAO,CACL,KAAM,SACN,WAAY,CACV,cAAe,CACb,KAAM,QACR,EACA,eAAgB,CACd,KAAM,QACR,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,YAAa,sDACb,IAAK,MACL,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAO,cAAe,WAAW,EAC5C,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,YAAa,CACX,KAAM,SACN,aAAc,GACd,UAAW,GACb,EACA,YAAa,CACX,KAAM,SACN,aAAc,IACd,UAAW,GACb,EACA,kBAAmB,CACjB,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,6BACP,CACF,EACA,OAAQ,CACN,KAAM,OACN,OAAQ,CAAC,YAAa,YAAY,EAClC,QAAS,GACX,EACA,OAAQ,CACN,KAAM,QACN,KAAM,CAAC,uCAAuC,CAChD,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,4CACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACN,OAAQ,eACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,sCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yCACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACN,OAAQ,eACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,KAAM,CACJ,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,cACR,EACA,CACE,KAAM,gBACR,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,iCACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACN,OAAQ,eACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,SACN,YAAa,CACX,qBACA,mBACA,kBACF,EACA,QAAS,oBACX,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,KAAM,CACJ,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,cACR,EACA,CACE,KAAM,gBACR,CACF,CACF,CACF,CACF,EACA,mBAAoB,CAClB,QAAS,EACT,GAAI,wBACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YACE,+DACF,WAAY,CACV,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,KAAM,CACJ,KAAM,QACN,MAAO,C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,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,aACR,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yBACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,EACT,QAAS,GACX,EACA,aAAc,CACZ,KAAM,UACN,QAAS,GACT,QAAS,EACT,QAAS,GACX,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACN,KAAM,CACJ,wCACA,sCACA,oCACF,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,UACR,CACF,CACF,CACF,CACF,EACA,oBAAqB,CACnB,QAAS,EACT,GAAI,yBACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,iCACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,QACN,MAAO,CACL,KAAM,SACN,OAAQ,QACV,EACA,UAAW,EACb,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,iCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yBACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OA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,UACN,QAAS,CACX,EACA,IAAK,CACH,KAAM,UACN,QAAS,CACX,CACF,CACF,CACF,CACF,EACA,kBAAmB,CACjB,QAAS,EACT,GAAI,uBACJ,KAAM,CACJ,KAAM,CACJ,YAAa,6BACb,KAAM,SACN,IAAK,MACL,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,UAAW,WAAW,EACjC,WAAY,CACV,QAAS,CACP,KAAM,MACN,IAAK,gCACP,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,CACF,CACF,CACF,EACA,uBAAwB,CACtB,QAAS,EACT,GAAI,4BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,uCACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,GAAG,EACd,WAAY,CACV,EAAG,CACD,KAAM,SACN,YACE,oHACJ,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,SACN,YACE,+FACJ,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,UAAW,CACT,KAAM,UACN,YACE,iHACJ,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,iCACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,gBACR,CACF,CACF,CACF,CACF,EACA,sBAAuB,CACrB,QAAS,EACT,GAAI,2BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,IAAK,MACL,YACE,oIACF,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAQ,WAAW,EAC9B,WAAY,CACV,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,EACA,MAAO,CACL,KAAM,QACN,UAAW,EACX,MAAO,CACL,KAAM,QACN,KAAM,CACJ,2CACA,6CACA,uCACF,CACF,CACF,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,CACF,CACF,CACF,EACA,YAAa,CACX,KAAM,SACN,YAAa,oDACb,WAAY,CAAC,CACf,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CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,sCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,0BAA2B,CACzB,QAAS,EACT,GAAI,+BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,wCACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yBAA0B,CACxB,QAAS,EACT,GAAI,8BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,sCACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,+CACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACN,OAAQ,eACV,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,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,CACL,KAAM,SACN,OAAQ,eACV,CACF,CACF,CACF,CACF,CACF,CACF,EACA,4BAA6B,CAC3B,QAAS,EACT,GAAI,iCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,2BACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,KAAM,CACJ,KAAM,SACN,OAAQ,QACV,CACF,CACF,CACF,CACF,CACF,CACF,EACA,kCAAmC,CACjC,QAAS,EACT,GAAI,uCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yCACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,OAAQ,CACN,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,MAAO,CACL,KAAM,SACR,CACF,CACF,CACF,CACF,CACF,CACF,EACA,qCAAsC,CACpC,QAAS,EACT,GAAI,0CACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,+BACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,EACA,OAAQ,CACN,KAAM,SACN,OAAQ,UACV,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,eAAe,EAC1B,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,cAAe,CACb,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,0DACP,CACF,CACF,CACF,CACF,CACF,EACA,aAAc,CACZ,KAAM,SACN,SAAU,CACR,MACA,MACA,SACA,SACA,SACA,SACA,WACF,EACA,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,EACA,IAAK,CACH,KAAM,SACN,OAAQ,KACV,EACA,OAAQ,CACN,KAAM,MACN,IAAK,qCACP,EACA,OAAQ,CACN,KAAM,SACN,YACE,mFACF,YAAa,CACX,OACA,SACA,SACA,UACA,QACA,OACF,CACF,EACA,cAAe,CACb,KAAM,SACN,OAAQ,QACV,EACA,OAAQ,CACN,KAAM,SACR,EACA,OAAQ,CACN,KAAM,SACR,EACA,UAAW,CACT,KAAM,SACN,OAAQ,UACV,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,kCACP,CACF,CACF,CACF,CACF,CACF,EACA,gCAAiC,CAC/B,QAAS,EACT,GAAI,qCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,kDACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,aAAc,QAAS,WAAY,OAAO,EACrD,WAAY,CACV,WAAY,CACV,KAAM,SACN,OAAQ,KACV,EACA,MAAO,CACL,KAAM,QACR,EACA,SAAU,CACR,KAAM,SACN,YAAa,CAAC,MAAO,UAAW,KAAK,CACvC,EACA,MAAO,CACL,KAAM,QACR,CACF,CACF,CACF,CACF,CACF,CACF,EACA,8BAA+B,CAC7B,QAAS,EACT,GAAI,mCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,YACN,YAAa,sDACb,MAAO,CACL,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,SACN,OAAQ,UACV,CACF,CACF,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,KAAM,CACJ,KAAM,CACJ,KAAM,SACN,SAAU,CAAC,QAAS,UAAU,EAC9B,WAAY,CACV,MAAO,CACL,KAAM,MACN,IAAK,uCACP,EACA,SAAU,CACR,KAAM,QACN,MAAO,CACL,KAAM,QACN,KAAM,CACJ,sCACA,mCACA,iCACF,CACF,CACF,CACF,CACF,EACA,QAAS,CACP,KAAM,SACN,YAAa,sCACb,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,CACF,CACF,EACA,KAAM,CACJ,KAAM,SACN,YAAa,6BACb,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,CACF,CACF,EACA,IAAK,CACH,KAAM,SACN,YAAa,aACb,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,UAAW,IACX,aAAc,EAChB,CACF,CACF,EACA,UAAW,CACT,KAAM,SACN,YACE,8FACF,SAAU,CAAC,YAAa,SAAS,EACjC,WAAY,CACV,UAAW,CACT,KAAM,UACN,QAAS,CACX,EACA,QAAS,CACP,KAAM,UACN,QAAS,CACX,CACF,CACF,CACF,CACF,EACA,qBAAsB,CACpB,QAAS,EACT,GAAI,0BACJ,KAAM,CACJ,mBAAoB,CAClB,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,QACV,CACF,CACF,EACA,oBAAqB,CACnB,KAAM,SACN,SAAU,CAAC,KAAK,EAChB,WAAY,CACV,IAAK,CACH,KAAM,SACN,OAAQ,KACV,CACF,CACF,CACF,CACF,EACA,2BAA4B,CAC1B,QAAS,EACT,GAAI,gCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YACE,sEACF,WAAY,CACV,KAAM,SACN,WAAY,CACV,YAAa,CACX,KAAM,UACN,QAAS,EACX,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,KAAM,CACJ,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,qCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,yCAA0C,CACxC,QAAS,EACT,GAAI,8CACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,yDACb,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,OAAO,EAClB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,MAAO,CACL,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,sCACP,CACF,CACF,CACF,CACF,CACF,CACF,CACF,EACA,oCAAqC,CACnC,QAAS,EACT,GAAI,yCACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YACE,gFACF,WAAY,CACV,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,QACR,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,MAAM,EACjB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,KAAM,CACJ,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,yCACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,aACR,CACF,CACF,CACF,CACF,EACA,qCAAsC,CACpC,QAAS,EACT,GAAI,0CACJ,KAAM,CACJ,KAAM,CACJ,KAAM,QACN,YAAa,0DACb,WAAY,CACV,KAAM,SACN,SAAU,CAAC,GAAG,EACd,WAAY,CACV,EAAG,CACD,KAAM,SACN,YACE,gMACJ,EACA,UAAW,CACT,KAAM,UACN,YAAa,iDACf,EACA,MAAO,CACL,KAAM,UACN,QAAS,EACT,QAAS,IACT,QAAS,EACX,EACA,OAAQ,CACN,KAAM,SACN,YACE,+FACJ,CACF,CACF,EACA,OAAQ,CACN,SAAU,mBACV,OAAQ,CACN,KAAM,SACN,SAAU,CAAC,QAAQ,EACnB,WAAY,CACV,OAAQ,CACN,KAAM,QACR,EACA,UAAW,CACT,KAAM,UACN,YACE,iHACJ,EACA,OAAQ,CACN,KAAM,QACN,MAAO,CACL,KAAM,MACN,IAAK,iDACP,CACF,CACF,CACF,CACF,EACA,OAAQ,CACN,CACE,KAAM,gBACR,CACF,CACF,CACF,CACF,EACA,oCAAqC,CACnC,QAAS,EACT,GAAI,yCACJ,KAAM,CACJ,KAAM,CACJ,KAAM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J,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,kBACN,YACE,oFACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,kBACN,YACE,oFACJ,CACF,CACF,CACF,EACA,KAAM,CACJ,GAAI,OACJ,YAAa,CAAC,SAAU,OAAQ,MAAM,EACtC,MAAO,CAAC,EACR,OAAQ,OACR,QAAS,OACT,aAAc,GACd,QAAS,CACP,SAAU,CACR,GAAI,CACF,KAAM,OACN,YACE,gGACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,OACN,YACE,uHACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,OACN,YACE,0HACJ,CACF,CACF,CACF,EACA,mBAAoB,CAClB,GAAI,mBACJ,YAAa,CAAC,SAAU,OAAQ,MAAM,EACtC,MAAO,CAAC,EACR,OAAQ,OACR,QAAS,UACT,aAAc,GACd,QAAS,CACP,SAAU,CACR,GAAI,CACF,KAAM,oBACN,YACE,qEACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,mBACN,YACE,gGACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,mBACN,YACE,6EACJ,CACF,CACF,CACF,EACA,YAAa,CACX,GAAI,YACJ,YAAa,CAAC,SAAU,OAAQ,MAAM,EACtC,MAAO,CAAC,EACR,OAAQ,OACR,QAAS,UACT,aAAc,GACd,QAAS,CACP,SAAU,CACR,GAAI,CACF,KAAM,kBACN,YACE,+EACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,yBACN,YACE,0GACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,yBACN,YACE,uFACJ,CACF,CACF,CACF,EACA,cAAe,CACb,GAAI,gBACJ,YAAa,CAAC,SAAU,OAAQ,MAAM,EACtC,MAAO,CAAC,EACR,OAAQ,QACR,QAAS,UACT,aAAc,GACd,QAAS,CACP,SAAU,CACR,GAAI,CACF,KAAM,gBACN,YAAa,8CACf,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,wBACN,YACE,oEACJ,CACF,EACA,QAAS,CACP,GAAI,CACF,KAAM,wBACN,YACE,oEACJ,CACF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",
  "names": ["require_boundaries", "__commonJS", "exports", "CLUSTER_BREAK", "CLUSTER_BREAK2", "require_GraphemerHelper", "boundaries_1", "NotBreak", "BreakStart", "Break", "BreakLastRegional", "BreakPenultimateRegional", "GraphemerHelper", "str", "pos", "idx", "code2", "hi", "low", "start", "mid", "end", "startEmoji", "midEmoji", "endEmoji", "all", "allEmoji", "previous", "next", "nextEmoji", "rIIndex", "c", "previousNonExtendIndex", "require_GraphemerIterator", "GraphemerIterator", "nextBreak", "brk", "value", "require_Graphemer", "__importDefault", "mod", "GraphemerHelper_1", "GraphemerIterator_1", "Graphemer2", "string3", "index", "prevCP", "prev", "prevEmoji", "i", "nextCP", "res", "count", "require_lib", "Graphemer_1", "require_dist", "e", "t2", "r2", "n2", "e2", "t", "r", "n", "i2", "o2", "a2", "u2", "d2", "e3", "t3", "r3", "o", "s", "a", "d", "src_exports2", "__export", "APP_BSKY_GRAPH", "ActorNS", "AdminNS", "defs_exports5", "getPreferences_exports", "getProfile_exports", "getProfiles_exports", "getSuggestions_exports", "profile_exports", "putPreferences_exports", "searchActors_exports", "searchActorsTypeahead_exports", "external_exports", "images_exports", "record_exports", "recordWithMedia_exports", "defs_exports6", "describeFeedGenerator_exports", "generator_exports", "getActorFeeds_exports", "getActorLikes_exports", "getAuthorFeed_exports", "getFeed_exports", "getFeedGenerator_exports", "getFeedGenerators_exports", "getFeedSkeleton_exports", "getLikes_exports", "getListFeed_exports", "getPostThread_exports", "getPosts_exports", "getRepostedBy_exports", "getSuggestedFeeds_exports", "getTimeline_exports", "like_exports", "post_exports", "repost_exports", "searchPosts_exports", "threadgate_exports", "block_exports", "defs_exports7", "follow_exports", "getBlocks_exports2", "getFollowers_exports", "getFollows_exports", "getList_exports", "getListBlocks_exports", "getListMutes_exports", "getLists_exports", "getMutes_exports", "getSuggestedFollowsByActor_exports", "list_exports", "listblock_exports", "listitem_exports", "muteActor_exports", "muteActorList_exports", "unmuteActor_exports", "unmuteActorList_exports", "getUnreadCount_exports", "listNotifications_exports", "registerPush_exports", "updateSeen_exports", "facet_exports", "defs_exports8", "getPopular_exports", "getPopularFeedGenerators_exports", "getTimelineSkeleton_exports", "searchActorsSkeleton_exports", "searchPostsSkeleton_exports", "AppNS", "AtUri", "AtpAgent", "AtpBaseClient", "AtpServiceClient", "AtprotoNS", "BlobRef", "BlockRecord", "BskyAgent", "BskyNS", "COM_ATPROTO_ADMIN", "COM_ATPROTO_MODERATION", "defs_exports", "disableAccountInvites_exports", "disableInviteCodes_exports", "emitModerationEvent_exports", "enableAccountInvites_exports", "getAccountInfo_exports", "getInviteCodes_exports", "getModerationEvent_exports", "getRecord_exports", "getRepo_exports", "getSubjectStatus_exports", "queryModerationEvents_exports", "queryModerationStatuses_exports", "searchRepos_exports", "sendEmail_exports", "updateAccountEmail_exports", "updateAccountHandle_exports", "updateSubjectStatus_exports", "resolveHandle_exports", "updateHandle_exports", "defs_exports2", "queryLabels_exports", "subscribeLabels_exports", "createReport_exports", "defs_exports3", "applyWrites_exports", "createRecord_exports", "deleteRecord_exports", "describeRepo_exports", "getRecord_exports2", "listRecords_exports", "putRecord_exports", "strongRef_exports", "uploadBlob_exports", "confirmEmail_exports", "createAccount_exports", "createAppPassword_exports", "createInviteCode_exports", "createInviteCodes_exports", "createSession_exports", "defs_exports4", "deleteAccount_exports", "deleteSession_exports", "describeServer_exports", "getAccountInviteCodes_exports", "getSession_exports", "listAppPasswords_exports", "refreshSession_exports", "requestAccountDelete_exports", "requestEmailConfirmation_exports", "requestEmailUpdate_exports", "requestPasswordReset_exports", "reserveSigningKey_exports", "resetPassword_exports", "revokeAppPassword_exports", "updateEmail_exports", "getBlob_exports", "getBlocks_exports", "getCheckout_exports", "getHead_exports", "getLatestCommit_exports", "getRecord_exports3", "getRepo_exports2", "listBlobs_exports", "listRepos_exports", "notifyOfUpdate_exports", "requestCrawl_exports", "subscribeRepos_exports", "fetchLabels_exports", "ComNS", "EmbedNS", "FeedNS", "FollowRecord", "GeneratorRecord", "GraphNS", "IdentityNS", "LABELS", "LABEL_GROUPS", "LabelNS", "LikeRecord", "ListRecord", "ListblockRecord", "ListitemRecord", "ModerationDecision", "ModerationNS", "NotificationNS", "PostRecord", "ProfileRecord", "RepoNS", "RepostRecord", "RichText", "RichTextSegment", "RichtextNS", "ServerNS", "SyncNS", "TempNS", "ThreadgateRecord", "UnicodeString", "UnspeccedNS", "jsonStringToLex", "jsonToLex", "lexToJson", "moderateFeedGenerator", "moderatePost", "moderateProfile", "moderateUserList", "parseLanguage", "sanitizeRichText", "stringifyLex", "module", "__toCommonJS", "ensureValidHandle", "handle2", "InvalidHandleError", "labels", "l", "ensureValidDid", "did2", "InvalidDidError", "parts", "NSID", "nsid2", "ensureValidNsid", "authority", "name2", "segments", "toCheck", "InvalidNsidError", "ensureValidAtUri", "uri2", "uriParts", "fragmentPart", "ATP_URI_REGEX", "RELATIVE_REGEX", "base3", "parsed", "parse", "relativep", "parseRelative", "handleOrDid", "collection", "rkey", "v", "path", "qs", "hash", "match", "util", "util2", "val", "assertIs", "_arg", "assertNever", "_x", "items", "obj", "item", "validKeys", "k", "filtered", "object2", "keys", "key", "arr", "checker", "joinValues", "array2", "separator", "_", "objectUtil", "objectUtil2", "first", "second", "ZodParsedType", "getParsedType", "data", "ZodIssueCode", "quotelessJson", "ZodError", "issues", "sub", "subs", "actualProto", "_mapper", "mapper", "issue", "fieldErrors", "processError", "error", "curr", "el", "formErrors", "errorMap", "_ctx", "message", "overrideErrorMap", "setErrorMap", "map", "getErrorMap", "makeIssue", "params2", "errorMaps", "issueData", "fullPath", "fullIssue", "errorMessage", "maps", "m", "EMPTY_PATH", "addIssueToContext", "ctx", "x", "ParseStatus", "status", "results", "arrayValue", "INVALID", "pairs", "syncPairs", "pair", "finalObject", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "errorUtil", "errorUtil2", "ParseInputLazyPath", "parent", "handleResult", "result", "processCreateParams", "errorMap2", "invalid_type_error", "required_error", "description", "iss", "ZodType", "def2", "input", "_a", "maybeAsyncResult", "check", "getIssueProperties", "setError", "refinementData", "refinement", "ZodEffects", "ZodFirstPartyTypeKind", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "option", "ZodUnion", "incoming", "ZodIntersection", "transform", "defaultValueFunc", "ZodDefault", "ZodBranded", "catchValueFunc", "ZodCatch", "This", "target", "ZodPipeline", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "emailRegex", "emojiRegex", "ipv4Regex", "ipv6Regex", "datetimeRegex", "args", "isValidIP", "ip", "version2", "ZodString", "regex", "validation", "ctx2", "tooBig", "tooSmall", "options", "minLength", "maxLength", "len", "ch", "min", "max", "floatSafeRemainder", "step", "valDecCount", "stepDecCount", "decCount", "valInt", "stepInt", "ZodNumber", "kind", "inclusive", "ZodBigInt", "ZodBoolean", "ZodDate", "minDate", "maxDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "result2", "schema2", "deepPartialify", "ZodObject", "newShape", "fieldSchema", "ZodTuple", "shape", "shapeKeys", "extraKeys", "keyValidator", "unknownKeys", "catchall", "_b", "_c", "_d", "defaultError", "augmentation", "merging", "mask", "newField", "createZodEnum", "handleResults", "unionErrors", "childCtx", "dirty", "issues2", "types", "getDiscriminator", "type", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "discriminator", "discriminatorValue", "optionsMap", "discriminatorValues", "mergeValues", "b", "aType", "bType", "bKeys", "sharedKeys", "newObj", "sharedValue", "newArray", "itemA", "itemB", "handleParsed", "parsedLeft", "parsedRight", "merged", "left", "right", "itemIndex", "rest", "schemas2", "ZodRecord", "keyType", "valueType", "third", "ZodMap", "finalMap", "ZodSet", "finalizeSet", "elements2", "parsedSet", "element", "elements", "minSize", "maxSize", "size", "ZodFunction", "makeArgsIssue", "makeReturnsIssue", "returns", "fn", "parsedArgs", "parsedReturns", "returnType", "func", "getter", "values", "expectedValues", "enumValues", "opt", "nativeEnumValues", "promisified", "effect", "processed", "processed2", "checkCtx", "arg", "executeRefinement", "acc", "inner", "preprocess", "newCtx", "ZodNaN", "BRAND", "inResult", "custom", "fatal", "p", "_fatal", "p2", "late", "ZodFirstPartyTypeKind2", "instanceOfType", "cls", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "coerce", "NEVER", "z", "check_exports", "assure", "is", "isObject", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "shift", "counter", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "decode2", "encodeTo", "int", "encodingLength", "empty", "equals", "aa", "bb", "ii", "coerce2", "fromString", "toString", "create", "digest2", "sizeOffset", "digestOffset", "bytes2", "Digest", "decode3", "multihash", "equals2", "base58_exports", "base58btc", "base58flickr", "base", "ALPHABET", "BASE_MAP", "j", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode5", "source", "zeroes", "length2", "pbegin", "pend", "b58", "carry", "it1", "it2", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "j2", "decode6", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "prefix", "baseEncode", "Decoder", "baseDecode", "text", "decoder2", "or", "ComposedDecoder", "decoders", "Codec", "from", "baseX", "alphabet2", "decode4", "bitsPerChar", "codes", "bits", "written", "encode2", "pad", "rfc4648", "base32_exports", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "CID", "hidden", "readonly", "DAG_PB_CODE", "SHA_256_CODE", "other", "_baseCache", "toStringV0", "toStringV1", "deprecate", "IS_CID_DEPRECATION", "cidSymbol", "encodeCID", "cid2", "remainder", "specs", "prefixSize", "multihashBytes", "digestBytes", "initialBytes", "codec", "multihashCode", "digestSize", "multihashSize", "parseCIDtoBytes", "cache", "cid3", "codeOffset", "hashOffset", "version", "range", "identity_exports", "identity", "base2_exports", "base2", "base8_exports", "base8", "base10_exports", "base10", "base16_exports", "base16", "base16upper", "base36_exports", "base36", "base36upper", "base64_exports", "base64", "base64pad", "base64url", "base64urlpad", "base256emoji_exports", "base256emoji", "alphabet", "alphabetBytesToChars", "alphabetCharsToBytes", "encode3", "decode5", "byts", "char", "byt", "sha2_browser_exports", "sha256", "sha512", "from2", "Hasher", "sha", "identity_exports2", "identity2", "code", "name", "encode4", "digest", "textEncoder", "textDecoder", "bases", "hashes", "createCodec", "string", "ascii", "BASES", "bases_default", "fromString2", "encoding", "toString2", "jsonToIpld", "toReturn", "ipldToJson", "cidSchema", "schema", "def", "SECOND", "MINUTE", "HOUR", "DAY", "import_graphemer", "__toESM", "utf8Len", "graphemeLen", "langTag", "bcp47Regexp", "validateLanguage", "isValidDidDoc", "doc", "didDocument", "getDid", "id", "getPdsEndpoint", "getServiceEndpoint", "opts", "services", "found", "service2", "validateUrl", "urlStr", "url", "verificationMethod", "service", "import_iso_datestring_validator", "datetime", "ValidationError", "uri", "atUri", "did", "handle", "atIdentifier", "nsid", "cid", "language", "validate", "lexicons2", "boolean", "integer", "string2", "bytes", "cidLink", "unknown", "typedJsonBlobRef", "untypedJsonBlobRef", "jsonBlobRef", "ref", "mimeType", "original", "json", "blob", "validate2", "object", "array", "itemsDef", "itemValue", "itemPath", "validateOneOf", "requiredProps", "nullableProps", "resultValue", "propDef", "propPath", "validated", "propValue", "propIsUndefined", "toLexUri", "baseUri", "mustBeObj", "concreteDefs", "isDiscriminatedObject", "refsContainType", "toConcreteTypes", "concreteDef", "assertValidOneOf", "requiredPropertiesRefinement", "field", "refs", "lexUri", "lexBoolean", "lexInteger", "lexStringFormat", "lexString", "lexUnknown", "lexPrimitive", "lexBytes", "lexCidLink", "lexIpldType", "lexRef", "lexRefUnion", "lexRefVariant", "lexBlob", "lexArray", "lexPrimitiveArray", "lexToken", "lexObject", "lexXrpcParameters", "lexXrpcBody", "lexXrpcSubscriptionMessage", "lexXrpcError", "lexXrpcQuery", "lexXrpcProcedure", "lexXrpcSubscription", "lexRecord", "lexUserType", "lexiconDoc", "defId", "isObj", "hasProp", "prop", "discriminatedObject", "InvalidLexiconError", "LexiconDefNotFoundError", "params", "assertValidRecord", "assertValidXrpcParams", "assertValidXrpcInput", "assertValidXrpcOutput", "assertValidXrpcMessage", "Lexicons", "docs", "resolveRefUris", "defUri", "iterDefs", "_def", "$type", "lexToIpld", "ipldToLex", "errorResponseBody", "ResponseType", "ResponseType2", "ResponseTypeNames", "ResponseTypeStrings", "XRPCResponse", "headers", "XRPCError", "XRPCInvalidResponseError", "lexiconNsid", "validationError", "responseBody", "getMethodSchemaHTTPMethod", "constructMethodCallUri", "serviceUri", "paramSchema", "encodeQueryParam", "normalizeHeaders", "normalized", "header", "constructMethodCallHeaders", "encodeMethodCallBody", "httpResponseCodeToEnum", "resCode", "httpResponseBodyParse", "Client", "defaultFetchHandler", "methodNsid", "ServiceClient", "baseClient", "httpMethod", "httpUri", "httpHeaders", "isErrorResponseBody", "httpReqBody", "reqInit", "resBody", "defaultInst", "schemaDict", "schemas", "lexicons", "toKnownErr", "toKnownErr2", "SubjectHasActionError", "toKnownErr3", "src2", "toKnownErr4", "toKnownErr5", "toKnownErr6", "toKnownErr7", "RecordNotFoundError", "toKnownErr8", "RepoNotFoundError", "toKnownErr9", "toKnownErr10", "toKnownErr11", "toKnownErr12", "toKnownErr13", "toKnownErr14", "toKnownErr15", "toKnownErr16", "toKnownErr17", "toKnownErr18", "toKnownErr19", "toKnownErr20", "toKnownErr21", "InvalidSwapError", "isCreate", "isDelete", "isUpdate", "toKnownErr22", "validateCreate", "validateDelete", "validateUpdate", "isObj2", "hasProp2", "InvalidSwapError2", "toKnownErr23", "InvalidSwapError3", "toKnownErr24", "toKnownErr25", "toKnownErr26", "isRecord", "toKnownErr27", "validateRecord", "InvalidSwapError4", "toKnownErr28", "toKnownErr29", "AccountNotFoundError", "ExpiredTokenError", "InvalidEmailError", "InvalidTokenError", "toKnownErr30", "HandleNotAvailableError", "IncompatibleDidDocError", "InvalidHandleError2", "InvalidInviteCodeError", "InvalidPasswordError", "UnresolvableDidError", "UnsupportedDomainError", "toKnownErr31", "AccountTakedownError", "isAppPassword", "toKnownErr32", "validateAppPassword", "toKnownErr33", "isAccountCodes", "toKnownErr34", "validateAccountCodes", "AccountTakedownError2", "toKnownErr35", "ExpiredTokenError2", "InvalidTokenError2", "toKnownErr36", "toKnownErr37", "isLinks", "toKnownErr38", "validateLinks", "DuplicateCreateError", "toKnownErr39", "toKnownErr40", "AccountTakedownError3", "isAppPassword2", "toKnownErr41", "validateAppPassword2", "AccountTakedownError4", "toKnownErr42", "toKnownErr43", "toKnownErr44", "toKnownErr45", "toKnownErr46", "toKnownErr47", "ExpiredTokenError3", "InvalidTokenError3", "toKnownErr48", "toKnownErr49", "ExpiredTokenError4", "InvalidTokenError4", "TokenRequiredError", "toKnownErr50", "toKnownErr51", "toKnownErr52", "toKnownErr53", "HeadNotFoundError", "toKnownErr54", "RepoNotFoundError2", "toKnownErr55", "toKnownErr56", "toKnownErr57", "toKnownErr58", "isRepo", "toKnownErr59", "validateRepo", "toKnownErr60", "toKnownErr61", "toKnownErr62", "toKnownErr63", "toKnownErr64", "toKnownErr65", "toKnownErr66", "toKnownErr67", "toKnownErr68", "toKnownErr69", "isFeed", "isLinks2", "toKnownErr70", "validateFeed", "validateLinks2", "toKnownErr71", "BlockedActorError", "BlockedByActorError", "toKnownErr72", "BlockedActorError2", "BlockedByActorError2", "toKnownErr73", "UnknownFeedError", "toKnownErr74", "toKnownErr75", "toKnownErr76", "UnknownFeedError2", "toKnownErr77", "isLike", "toKnownErr78", "validateLike", "UnknownListError", "toKnownErr79", "NotFoundError", "toKnownErr80", "toKnownErr81", "toKnownErr82", "toKnownErr83", "toKnownErr84", "BadQueryStringError", "toKnownErr85", "toKnownErr86", "toKnownErr87", "toKnownErr88", "toKnownErr89", "toKnownErr90", "toKnownErr91", "toKnownErr92", "toKnownErr93", "toKnownErr94", "toKnownErr95", "toKnownErr96", "toKnownErr97", "toKnownErr98", "toKnownErr99", "isNotification", "toKnownErr100", "validateNotification", "toKnownErr101", "toKnownErr102", "toKnownErr103", "toKnownErr104", "UnknownFeedError3", "toKnownErr105", "BadQueryStringError2", "toKnownErr106", "BadQueryStringError3", "toKnownErr107", "REVIEWCLOSED", "REVIEWESCALATED", "REVIEWOPEN", "isAccountView", "isBlobView", "isImageDetails", "isModEventAcknowledge", "isModEventComment", "isModEventEmail", "isModEventEscalate", "isModEventLabel", "isModEventMute", "isModEventReport", "isModEventReverseTakedown", "isModEventTakedown", "isModEventUnmute", "isModEventView", "isModEventViewDetail", "isModeration", "isModerationDetail", "isRecordView", "isRecordViewDetail", "isRecordViewNotFound", "isRepoBlobRef", "isRepoRef", "isRepoView", "isRepoViewDetail", "isRepoViewNotFound", "isReportView", "isReportViewDetail", "isStatusAttr", "isSubjectStatusView", "isVideoDetails", "validateAccountView", "validateBlobView", "validateImageDetails", "validateModEventAcknowledge", "validateModEventComment", "validateModEventEmail", "validateModEventEscalate", "validateModEventLabel", "validateModEventMute", "validateModEventReport", "validateModEventReverseTakedown", "validateModEventTakedown", "validateModEventUnmute", "validateModEventView", "validateModEventViewDetail", "validateModeration", "validateModerationDetail", "validateRecordView", "validateRecordViewDetail", "validateRecordViewNotFound", "validateRepoBlobRef", "validateRepoRef", "validateRepoView", "validateRepoViewDetail", "validateRepoViewNotFound", "validateReportView", "validateReportViewDetail", "validateStatusAttr", "validateSubjectStatusView", "validateVideoDetails", "isLabel", "isSelfLabel", "isSelfLabels", "validateLabel", "validateSelfLabel", "validateSelfLabels", "isInfo", "isLabels", "validateInfo", "validateLabels", "REASONMISLEADING", "REASONOTHER", "REASONRUDE", "REASONSEXUAL", "REASONSPAM", "REASONVIOLATION", "isMain", "validateMain", "isInviteCode", "isInviteCodeUse", "validateInviteCode", "validateInviteCodeUse", "isCommit", "isHandle", "isInfo2", "isMigrate", "isRepoOp", "isTombstone", "validateCommit", "validateHandle", "validateInfo2", "validateMigrate", "validateRepoOp", "validateTombstone", "isAdultContentPref", "isContentLabelPref", "isFeedViewPref", "isPersonalDetailsPref", "isProfileView", "isProfileViewBasic", "isProfileViewDetailed", "isSavedFeedsPref", "isThreadViewPref", "isViewerState", "validateAdultContentPref", "validateContentLabelPref", "validateFeedViewPref", "validatePersonalDetailsPref", "validateProfileView", "validateProfileViewBasic", "validateProfileViewDetailed", "validateSavedFeedsPref", "validateThreadViewPref", "validateViewerState", "isRecord2", "validateRecord2", "isExternal", "isMain2", "isView", "isViewExternal", "validateExternal", "validateMain2", "validateView", "validateViewExternal", "isAspectRatio", "isImage", "isMain3", "isView2", "isViewImage", "validateAspectRatio", "validateImage", "validateMain3", "validateView2", "validateViewImage", "isMain4", "isView3", "isViewBlocked", "isViewNotFound", "isViewRecord", "validateMain4", "validateView3", "validateViewBlocked", "validateViewNotFound", "validateViewRecord", "isMain5", "isView4", "validateMain5", "validateView4", "isBlockedAuthor", "isBlockedPost", "isFeedViewPost", "isGeneratorView", "isGeneratorViewerState", "isNotFoundPost", "isPostView", "isReasonRepost", "isReplyRef", "isSkeletonFeedPost", "isSkeletonReasonRepost", "isThreadViewPost", "isThreadgateView", "isViewerState2", "validateBlockedAuthor", "validateBlockedPost", "validateFeedViewPost", "validateGeneratorView", "validateGeneratorViewerState", "validateNotFoundPost", "validatePostView", "validateReasonRepost", "validateReplyRef", "validateSkeletonFeedPost", "validateSkeletonReasonRepost", "validateThreadViewPost", "validateThreadgateView", "validateViewerState2", "isRecord3", "validateRecord3", "isRecord4", "validateRecord4", "isEntity", "isRecord5", "isReplyRef2", "isTextSlice", "validateEntity", "validateRecord5", "validateReplyRef2", "validateTextSlice", "isRecord6", "validateRecord6", "isFollowingRule", "isListRule", "isMentionRule", "isRecord7", "validateFollowingRule", "validateListRule", "validateMentionRule", "validateRecord7", "isRecord8", "validateRecord8", "CURATELIST", "MODLIST", "isListItemView", "isListView", "isListViewBasic", "isListViewerState", "validateListItemView", "validateListView", "validateListViewBasic", "validateListViewerState", "isRecord9", "validateRecord9", "isRecord10", "validateRecord10", "isRecord11", "validateRecord11", "isRecord12", "validateRecord12", "isByteSlice", "isLink", "isMain6", "isMention", "isTag", "validateByteSlice", "validateLink", "validateMain6", "validateMention", "validateTag", "isSkeletonSearchActor", "isSkeletonSearchPost", "validateSkeletonSearchActor", "validateSkeletonSearchPost", "xrpcService", "record", "REFRESH_SESSION", "_AtpAgent", "handler", "session", "reqHeaders", "reqUri", "reqMethod", "reqBody", "isErrorResponse", "isNewSessionObject", "didDoc", "endpoint", "isErrorObject", "errorNames", "client", "encoder", "decoder", "utf16", "EXCESS_SPACE_RE", "REPLACEMENT_STR", "richText", "clean", "targetRegexp", "replacementString", "oldText", "removeStartIndex", "removeEndIndex", "detectFacets", "facets", "re", "isValidDomain", "domain", "tag", "hasLeadingSpace", "tlds_default", "tld", "facet", "link", "mention", "props", "entitiesToFacets", "facetSort", "cloneDeep", "textCursor", "facetCursor", "currFacet", "subtext", "insertIndex", "insertText", "numCharsAdded", "ent", "numCharsRemoved", "agent", "feature", "entities", "cause", "alert", "blur", "blurMedia", "filter", "noOverride", "additionalCauses", "ModerationCauseAccumulator", "blocking", "blockingByList", "blockedBy", "blockOther", "label", "labelDef", "isSelf", "labeler", "labelPref", "priority", "muted", "mutedByList", "decideAccount", "subject", "filterAccountLabels", "decideProfile", "filterProfileLabels", "decidePost", "decideQuotedPost", "decideQuotedPostAccount", "decideQuotedPostWithMedia", "decideQuotedPostWithMediaAccount", "decideFeedGenerator", "_subject", "_opts", "decideUserList", "takeHighestPriorityDecision", "decisions", "downgradeDecision", "decision", "to", "isModerationDecisionNoop", "ignoreFilter", "isQuotedPost", "embed", "isQuotedPostWithMedia", "toModerationUI", "account", "profile", "avatarBlur", "avatarNoOverride", "post", "quote", "quotedAccount", "mergedForFeed", "mergedForView", "mergedQuote", "blurAvatar", "feedGenerator", "userList", "FEED_VIEW_PREF_DEFAULTS", "THREAD_VIEW_PREF_DEFAULTS", "postUri", "postUrip", "likeUri", "likeUrip", "repostUri", "repostUrip", "subjectDid", "followUri", "followUrip", "updateFn", "retriesRemaining", "existing", "updated", "actor", "listInfo", "seenAt", "prefs", "pref", "feed", "saved", "pinned", "updateFeedPreferences", "updatePreferences", "adultContentPref", "birthDate", "personalDetailsPref", "pref2", "cb", "newPrefs", "feedsPref", "stringToByteArray", "str", "out", "p", "i", "c", "byteArrayToString", "bytes", "pos", "c1", "c2", "c3", "c4", "base64", "input", "webSafe", "byteToCharMap", "output", "byte1", "haveByte2", "byte2", "haveByte3", "byte3", "outByte1", "outByte2", "outByte3", "outByte4", "charToByteMap", "byte4", "DecodeBase64StringError", "base64Encode", "utf8Bytes", "base64urlEncodeWithoutPadding", "base64Decode", "e", "getGlobal", "getDefaultsFromGlobal", "getDefaultsFromEnvVariable", "defaultsJsonString", "getDefaultsFromCookie", "match", "decoded", "base64Decode", "getDefaults", "getDefaultAppConfig", "_a", "getDefaults", "Deferred", "resolve", "reject", "callback", "error", "value", "isIndexedDBAvailable", "validateIndexedDBOpenable", "resolve", "reject", "preExist", "DB_CHECK_NAME", "request", "_a", "error", "ERROR_NAME", "FirebaseError", "code", "message", "customData", "ErrorFactory", "service", "serviceName", "errors", "data", "fullCode", "template", "replaceTemplate", "fullMessage", "PATTERN", "_", "key", "value", "deepEqual", "a", "b", "aKeys", "bKeys", "k", "aProp", "bProp", "isObject", "thing", "MAX_VALUE_MILLIS", "getModularInstance", "service", "Component", "name", "instanceFactory", "type", "mode", "multipleInstances", "props", "callback", "DEFAULT_ENTRY_NAME", "Provider", "container", "identifier", "normalizedIdentifier", "deferred", "Deferred", "instance", "options", "optional", "_a", "e", "component", "isComponentEager", "instanceIdentifier", "instanceDeferred", "services", "service", "opts", "normalizedDeferredIdentifier", "existingCallbacks", "existingInstance", "callbacks", "normalizeIdentifierForFactory", "ComponentContainer", "provider", "instances", "LogLevel", "levelStringToEnum", "defaultLogLevel", "ConsoleMethod", "defaultLogHandler", "instance", "logType", "args", "now", "method", "Logger", "name", "val", "instanceOfAny", "object", "constructors", "c", "idbProxyableTypes", "cursorAdvanceMethods", "getIdbProxyableTypes", "getCursorAdvanceMethods", "cursorRequestMap", "transactionDoneMap", "transactionStoreNamesMap", "transformCache", "reverseTransformCache", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "value", "cacheDonePromiseForTransaction", "tx", "done", "complete", "idbProxyTraps", "target", "prop", "receiver", "replaceTraps", "callback", "wrapFunction", "func", "storeNames", "args", "unwrap", "transformCachableValue", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "request", "openPromise", "wrap", "event", "db", "readMethods", "writeMethods", "cachedMethods", "getMethod", "target", "prop", "targetFuncName", "useIndex", "isWrite", "method", "storeName", "args", "tx", "replaceTraps", "oldTraps", "receiver", "PlatformLoggerServiceImpl", "container", "provider", "isVersionServiceProvider", "service", "logString", "component", "logger", "Logger", "DEFAULT_ENTRY_NAME", "PLATFORM_LOG_STRING", "appName", "appCompatName", "analyticsName", "analyticsCompatName", "appCheckName", "appCheckCompatName", "authName", "authCompatName", "databaseName", "databaseCompatName", "functionsName", "functionsCompatName", "installationsName", "installationsCompatName", "messagingName", "messagingCompatName", "performanceName", "performanceCompatName", "remoteConfigName", "remoteConfigCompatName", "storageName", "storageCompatName", "firestoreName", "firestoreCompatName", "packageName", "_apps", "_components", "_addComponent", "app", "component", "e", "logger", "_registerComponent", "component", "componentName", "_components", "logger", "app", "_apps", "_addComponent", "_getProvider", "name", "heartbeatController", "ERRORS", "ERROR_FACTORY", "ErrorFactory", "FirebaseAppImpl", "options", "config", "container", "Component", "val", "initializeApp", "_options", "rawConfig", "options", "config", "DEFAULT_ENTRY_NAME", "name", "ERROR_FACTORY", "getDefaultAppConfig", "existingApp", "_apps", "deepEqual", "container", "ComponentContainer", "component", "_components", "newApp", "FirebaseAppImpl", "getApp", "app", "registerVersion", "libraryKeyOrName", "version", "variant", "library", "_a", "PLATFORM_LOG_STRING", "libraryMismatch", "versionMismatch", "warning", "logger", "_registerComponent", "Component", "DB_NAME", "DB_VERSION", "STORE_NAME", "dbPromise", "getDbPromise", "openDB", "db", "oldVersion", "ERROR_FACTORY", "readHeartbeatsFromIndexedDB", "app", "computeKey", "e", "FirebaseError", "logger", "idbGetError", "writeHeartbeatsToIndexedDB", "heartbeatObject", "tx", "MAX_HEADER_BYTES", "STORED_HEARTBEAT_RETENTION_MAX_MILLIS", "HeartbeatServiceImpl", "container", "HeartbeatStorageImpl", "result", "agent", "date", "getUTCDateString", "singleDateHeartbeat", "hbTimestamp", "heartbeatsToSend", "unsentEntries", "extractHeartbeatsForHeader", "headerString", "base64urlEncodeWithoutPadding", "heartbeatsCache", "maxSize", "heartbeatEntry", "hb", "countBytes", "isIndexedDBAvailable", "validateIndexedDBOpenable", "heartbeatsObject", "existingHeartbeatsObject", "_a", "registerCoreComponents", "variant", "_registerComponent", "Component", "PlatformLoggerServiceImpl", "registerVersion", "name", "version", "registerVersion", "name", "version", "instanceOfAny", "object", "constructors", "c", "idbProxyableTypes", "cursorAdvanceMethods", "getIdbProxyableTypes", "getCursorAdvanceMethods", "cursorRequestMap", "transactionDoneMap", "transactionStoreNamesMap", "transformCache", "reverseTransformCache", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "value", "cacheDonePromiseForTransaction", "tx", "done", "complete", "idbProxyTraps", "target", "prop", "receiver", "replaceTraps", "callback", "wrapFunction", "func", "storeNames", "args", "unwrap", "transformCachableValue", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "request", "openPromise", "wrap", "event", "db", "readMethods", "writeMethods", "cachedMethods", "getMethod", "target", "prop", "targetFuncName", "useIndex", "isWrite", "method", "storeName", "args", "tx", "replaceTraps", "oldTraps", "receiver", "PENDING_TIMEOUT_MS", "PACKAGE_VERSION", "version", "INTERNAL_AUTH_VERSION", "INSTALLATIONS_API_URL", "TOKEN_EXPIRATION_BUFFER", "SERVICE", "SERVICE_NAME", "ERROR_DESCRIPTION_MAP", "ERROR_FACTORY", "ErrorFactory", "isServerError", "error", "FirebaseError", "getInstallationsEndpoint", "projectId", "extractAuthTokenInfoFromResponse", "response", "getExpiresInFromResponseExpiresIn", "getErrorFromResponse", "requestName", "errorData", "getHeaders", "apiKey", "getHeadersWithAuth", "appConfig", "refreshToken", "headers", "getAuthorizationHeader", "retryIfServerError", "fn", "result", "responseExpiresIn", "createInstallationRequest", "heartbeatServiceProvider", "fid", "endpoint", "heartbeatService", "heartbeatsHeader", "body", "request", "responseValue", "sleep", "ms", "resolve", "bufferToBase64UrlSafe", "array", "VALID_FID_PATTERN", "INVALID_FID", "generateFid", "fidByteArray", "encode", "getKey", "fidChangeCallbacks", "fidChanged", "key", "callFidChangeCallbacks", "broadcastFidChange", "callFidChangeCallbacks", "key", "fid", "callbacks", "fidChangeCallbacks", "callback", "broadcastFidChange", "channel", "getBroadcastChannel", "closeBroadcastChannel", "broadcastChannel", "DATABASE_NAME", "DATABASE_VERSION", "OBJECT_STORE_NAME", "dbPromise", "getDbPromise", "openDB", "db", "oldVersion", "set", "appConfig", "value", "getKey", "tx", "objectStore", "oldValue", "fidChanged", "remove", "update", "updateFn", "store", "newValue", "getInstallationEntry", "installations", "registrationPromise", "installationEntry", "oldEntry", "updateOrCreateInstallationEntry", "entryWithPromise", "triggerRegistrationIfNecessary", "INVALID_FID", "entry", "generateFid", "clearTimedOutRequest", "registrationPromiseWithError", "ERROR_FACTORY", "inProgressEntry", "registerInstallation", "waitUntilFidRegistration", "registeredInstallationEntry", "createInstallationRequest", "e", "isServerError", "updateInstallationRequest", "sleep", "hasInstallationRequestTimedOut", "PENDING_TIMEOUT_MS", "generateAuthTokenRequest", "heartbeatServiceProvider", "endpoint", "getGenerateAuthTokenEndpoint", "headers", "getHeadersWithAuth", "heartbeatService", "heartbeatsHeader", "body", "PACKAGE_VERSION", "request", "response", "retryIfServerError", "responseValue", "extractAuthTokenInfoFromResponse", "getErrorFromResponse", "getInstallationsEndpoint", "refreshAuthToken", "forceRefresh", "tokenPromise", "isEntryRegistered", "oldAuthToken", "isAuthTokenValid", "waitUntilAuthTokenRequest", "makeAuthTokenRequestInProgressEntry", "fetchAuthTokenFromServer", "updateAuthTokenRequest", "authToken", "hasAuthTokenRequestTimedOut", "updatedInstallationEntry", "isAuthTokenExpired", "now", "TOKEN_EXPIRATION_BUFFER", "inProgressAuthToken", "getId", "installationsImpl", "getToken", "completeInstallationRegistration", "extractAppConfig", "app", "getMissingValueError", "configKeys", "keyName", "valueName", "ERROR_FACTORY", "INSTALLATIONS_NAME", "INSTALLATIONS_NAME_INTERNAL", "publicFactory", "container", "appConfig", "heartbeatServiceProvider", "_getProvider", "internalFactory", "installations", "getId", "forceRefresh", "getToken", "registerInstallations", "_registerComponent", "Component", "registerVersion", "name", "version", "instanceOfAny", "object", "constructors", "c", "idbProxyableTypes", "cursorAdvanceMethods", "getIdbProxyableTypes", "getCursorAdvanceMethods", "cursorRequestMap", "transactionDoneMap", "transactionStoreNamesMap", "transformCache", "reverseTransformCache", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "value", "cacheDonePromiseForTransaction", "tx", "done", "complete", "idbProxyTraps", "target", "prop", "receiver", "replaceTraps", "callback", "wrapFunction", "func", "storeNames", "args", "unwrap", "transformCachableValue", "newValue", "openDB", "name", "version", "blocked", "upgrade", "blocking", "terminated", "request", "openPromise", "wrap", "event", "db", "deleteDB", "readMethods", "writeMethods", "cachedMethods", "getMethod", "target", "prop", "targetFuncName", "useIndex", "isWrite", "method", "storeName", "args", "tx", "replaceTraps", "oldTraps", "receiver", "DEFAULT_VAPID_KEY", "ENDPOINT", "FCM_MSG", "CONSOLE_CAMPAIGN_ID", "SDK_PLATFORM_WEB", "EVENT_MESSAGE_DELIVERED", "MessageType", "arrayToBase64", "array", "uint8Array", "base64ToArray", "base64String", "padding", "base64", "rawData", "outputArray", "i", "OLD_DB_NAME", "OLD_DB_VERSION", "OLD_OBJECT_STORE_NAME", "migrateOldDatabase", "senderId", "db", "tokenDetails", "openDB", "oldVersion", "newVersion", "upgradeTransaction", "objectStore", "value", "oldDetails", "_a", "deleteDB", "checkTokenDetails", "subscriptionOptions", "DATABASE_NAME", "DATABASE_VERSION", "OBJECT_STORE_NAME", "dbPromise", "getDbPromise", "upgradeDb", "dbGet", "firebaseDependencies", "key", "getKey", "oldTokenDetails", "dbSet", "tx", "dbRemove", "appConfig", "ERROR_MAP", "ERROR_FACTORY", "ErrorFactory", "requestGetToken", "headers", "getHeaders", "body", "getBody", "subscribeOptions", "responseData", "getEndpoint", "err", "message", "requestUpdateToken", "updateOptions", "requestDeleteToken", "token", "unsubscribeOptions", "projectId", "installations", "authToken", "p256dh", "auth", "endpoint", "vapidKey", "TOKEN_EXPIRATION_MS", "getTokenInternal", "messaging", "pushSubscription", "getPushSubscription", "isTokenValid", "updateToken", "e", "getNewToken", "deleteTokenInternal", "updatedToken", "updatedTokenDetails", "swRegistration", "subscription", "dbOptions", "currentOptions", "isVapidKeyEqual", "isEndpointEqual", "isAuthEqual", "isP256dhEqual", "externalizePayload", "internalPayload", "payload", "propagateNotificationPayload", "propagateDataPayload", "propagateFcmOptions", "messagePayloadInternal", "title", "image", "icon", "link", "_c", "_b", "_d", "analyticsLabel", "_e", "isConsoleMessage", "data", "sleep", "ms", "resolve", "_mergeStrings", "stageLog", "fcmEvent", "createFcmEvent", "createAndEnqueueLogEvent", "fid", "logEvent", "s1", "s2", "resultArray", "onSubChange", "event", "newSubscription", "onPush", "getMessagePayloadInternal", "clientList", "getClientList", "hasVisibleClients", "sendMessagePayloadInternalToWindows", "showNotification", "wrapInternalPayload", "onNotificationClick", "getLink", "url", "originUrl", "client", "getWindowClient", "wrappedInternalPayload", "clientUrl", "notificationPayloadInternal", "actions", "maxActions", "extractAppConfig", "app", "getMissingValueError", "configKeys", "options", "keyName", "valueName", "MessagingService", "analyticsProvider", "SwMessagingFactory", "container", "registerMessagingInSw", "_registerComponent", "Component", "isSwSupported", "isIndexedDBAvailable", "validateIndexedDBOpenable", "onBackgroundMessage", "nextOrObserver", "getMessagingInSw", "app", "getApp", "isSwSupported", "isSupported", "ERROR_FACTORY", "_", "_getProvider", "getModularInstance", "onBackgroundMessage", "messaging", "nextOrObserver", "_onBackgroundMessage", "registerMessagingInSw", "import_api", "IndexedDBStorage", "dbName", "dbVersion", "__async", "resolve", "reject", "request", "event", "db", "key", "value", "english", "hashtag", "handle", "rootUrl", "name", "listName", "german", "translations", "i18n", "key", "userLocale", "languageCode", "implementation", "message", "getBskyClientAndUser", "__async", "db", "IndexedDBStorage", "user", "session", "persistSession", "evt", "s", "bskyClient", "resumeSuccess", "e", "processPushNotification", "payload", "showNotification", "_a", "_b", "_c", "notification", "settings", "pushPrefs", "from", "postText", "response", "message", "i18n", "event", "activate", "click", "__async", "clientList", "client", "firebaseConfig", "app", "initializeApp", "messaging", "getMessagingInSw", "onBackgroundMessage", "payload", "processPushNotification", "title", "options"]
}
